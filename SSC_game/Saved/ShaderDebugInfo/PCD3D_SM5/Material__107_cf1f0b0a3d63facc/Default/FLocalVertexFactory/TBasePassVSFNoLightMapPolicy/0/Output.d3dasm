//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   uint bIsGPUSkinPassThrough;        // Offset:    0 Size:     4
//
// }
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_TranslatedWorldToClip;// Offset:    0 Size:    64
//   float3 View_View_ViewTilePosition; // Offset: 1024 Size:    12
//   float3 View_View_RelativePreViewTranslation;// Offset: 1216 Size:    12
//   row_major float4x4 View_View_PrevTranslatedWorldToClip;// Offset: 1360 Size:    64
//   float3 View_View_RelativePrevPreViewTranslation;// Offset: 1728 Size:    12
//   uint View_View_FrameNumber;        // Offset: 2316 Size:     4
//   uint View_View_WorldIsPaused;      // Offset: 2332 Size:     4
//   uint View_View_InstanceSceneDataSOAStride;// Offset: 4544 Size:     4
//
// }
//
// cbuffer LocalVFLooseParameters
// {
//
//   uint LocalVFLooseParameters_LocalVFLooseParameters_FrameNumber;// Offset:    0 Size:     4
//
// }
//
// cbuffer LocalVF
// {
//
//   int4 LocalVF_LocalVF_VertexFetch_Parameters;// Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_PrimitiveSceneData           texture    byte         r/o             t0      1 
// View_InstanceSceneData            texture    byte         r/o             t1      1 
// View_InstancePayloadData          texture    byte         r/o             t2      1 
// InstanceCulling_InstanceIdsBuffer    texture    byte         r/o             t3      1 
// LocalVFLooseParameters_GPUSkinPassThroughPreviousPositionBuffer    texture  float4         buf             t4      1 
// LocalVF_VertexFetch_TexCoordBuffer    texture  float4         buf             t5      1 
// LocalVF_VertexFetch_PackedTangentsBuffer    texture  float4         buf             t6      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// View                              cbuffer      NA          NA            cb1      1 
// LocalVFLooseParameters            cbuffer      NA          NA            cb2      1 
// LocalVF                           cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE               13   x           1     NONE    uint   x   
// SV_VertexID              0   x           2   VERTID    uint   x   
// SV_InstanceID            0   x           3   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// PRIMITIVE_ID             0   x           3     NONE    uint   x   
// TEXCOORD                 9   xyz         4     NONE   float   xyz 
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[285], immediateIndexed
dcl_constantbuffer CB2[1], immediateIndexed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_resource_raw t0
dcl_resource_raw t1
dcl_resource_raw t2
dcl_resource_raw t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_resource_buffer (float,float,float,float) t6
dcl_input v0.xyz
dcl_input v1.x
dcl_input_sgv v2.x, vertex_id
dcl_input_sgv v3.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output_siv o6.xyzw, position
dcl_temps 16
and [precise(xy)] r0.xy, v1.xxxx, l(0x80000000, 0x7fffffff, 0, 0)
imul [precise(y)] null, r0.y, r0.y, l(41)
bfi [precise(y)] r0.y, l(28), l(4), r0.y, l(4)
ld_raw_indexable [precise(y)](raw_buffer)(mixed,mixed,mixed,mixed) r0.y, r0.y, t0.xxxx
iadd [precise(y)] r0.y, r0.y, v3.x
iadd [precise(z)] r0.z, v1.x, v3.x
ishl [precise(z)] r0.z, r0.z, l(2)
ld_raw_indexable [precise(z)](raw_buffer)(mixed,mixed,mixed,mixed) r0.z, r0.z, t3.xxxx
and [precise(z)] r0.z, r0.z, l(0x0fffffff)
movc [precise(x)] r0.x, r0.x, r0.y, r0.z
ishl [precise(y)] r0.y, r0.x, l(4)
ld_raw_indexable [precise(y)](raw_buffer)(mixed,mixed,mixed,mixed) r0.y, r0.y, t1.xxxx
and [precise(z)] r0.z, r0.y, l(0x000fffff)
ine [precise(w)] r0.w, r0.z, l(0x000fffff)
if_nz r0.w
  ushr [precise(w)] r0.w, r0.y, l(20)
  bfi [precise(y)] r1.xy, l(28, 20, 0, 0), l(4, 2, 0, 0), r0.xyxx, l(4, 0, 0, 0)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.x, r1.x, t1.xxxx
  and r1.x, r1.x, l(0x00ffffff)
  imad [precise(z)] r2.xyz, r1.yyyy, l(164, 164, 164, 0), l(432, 416, 16, 0)
  iadd r1.zw, r2.xxxy, l(0, 0, 12, 12)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.z, r1.z, t0.xxxx
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.w, r1.w, t0.xxxx
  imad r1.x, r1.x, r1.z, r1.w
  and [precise(yw)] r2.xyw, r0.wwww, l(8, 64, 0, 160)
  movc [precise(w)] r0.w, r2.w, l(1), l(0)
  movc [precise(w)] r0.w, r2.y, l(2), r0.w
  iadd r0.w, r0.w, r1.x
  movc r0.w, r2.x, r0.w, l(-1)
  iadd [precise(x)] r1.x, r0.x, cb1[284].x
  ishl [precise(x)] r1.x, r1.x, l(4)
  ld_raw_indexable [precise](raw_buffer)(mixed,mixed,mixed,mixed) r3.xyzw, r1.x, t1.zxwy
  ishl [precise(x)] r1.x, cb1[284].x, l(1)
  iadd [precise(x)] r0.x, r0.x, r1.x
  ishl [precise(x)] r0.x, r0.x, l(4)
  ld_raw_indexable [precise(xyz)](raw_buffer)(mixed,mixed,mixed,mixed) r4.xyz, r0.x, t1.xyzx
  and [precise(xzw)] r1.xzw, r3.wwyw, l(0x00007fff, 0, 0x0000ffff, 0x00008000)
  utof [precise(xy)] r5.xy, r1.xzxx
  ushr [precise(xyw)] r2.xyw, r3.yxyz, l(16, 16, 0, 16)
  utof [precise(z)] r5.z, r2.x
  add [precise(xyz)] r5.xyz, r5.yzxy, l(-32768.000000, -32768.000000, -16384.000000, 0.000000)
  mul [precise] r5.xyzw, r5.xyzz, l(0.000031, 0.000031, 0.000043, -0.000043)
  add [precise(x)] r6.x, r5.y, r5.x
  add [precise(y)] r6.y, -r5.y, r5.x
  dp2 [precise(x)] r0.x, l(1.000000, 1.000000, 0.000000, 0.000000), |r6.xyxx|
  add [precise(z)] r6.z, -r0.x, l(2.000000)
  dp3 [precise(x)] r0.x, r6.xyzx, r6.xyzx
  rsq [precise(x)] r0.x, r0.x
  mul [precise(xyz)] r6.xyz, r0.xxxx, r6.xyzx
  add [precise(x)] r0.x, r6.z, l(1.000000)
  div [precise(x)] r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  mov [precise(xy)] r7.xy, -r6.xyxx
  mul [precise(x)] r1.x, r6.y, r7.x
  mul [precise(z)] r8.z, r0.x, r1.x
  mad [precise(x)] r1.x, r5.w, r5.z, l(1.000000)
  sqrt [precise(x)] r1.x, r1.x
  mul [precise(xy)] r5.xy, r6.xyxx, r6.xyxx
  mad [precise(xy)] r8.xy, -r5.xyxx, r0.xxxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  swapc [precise(x)] r0.x, r1.x, r1.w, r5.z, r1.x
  mov [precise(w)] r8.w, r7.x
  mul [precise(xzw)] r1.xzw, r1.xxxx, r8.xxzw
  mov [precise(zw)] r7.zw, r8.zzzy
  mul [precise(xyz)] r5.xyz, r0.xxxx, r7.zwyz
  add [precise(xzw)] r1.xzw, r1.xxzw, r5.xxyz
  mul [precise(xyz)] r5.xyz, r1.wxzw, r6.yzxy
  mul [precise(xyz)] r7.xyz, r1.zwxz, r6.zxyz
  add [precise(xyz)] r5.xyz, r5.xyzx, -r7.xyzx
  mov [precise(y)] r3.y, r2.y
  and [precise(xyz)] r3.xyz, r3.xyzx, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0)
  utof [precise(xyz)] r3.xyz, r3.xyzx
  add [precise(xyz)] r3.xyz, r3.xyzx, l(-32768.000000, -32768.000000, -32768.000000, 0.000000)
  ishl [precise(x)] r0.x, r2.w, l(23)
  iadd [precise(x)] r0.x, r0.x, l(0xf8800000)
  mul [precise(xyw)] r2.xyw, r0.xxxx, r3.xyxz
  mul [precise(xzw)] r1.xzw, r1.xxzw, r2.xxxx
  mul [precise(xyz)] r3.xyz, r2.yyyy, r5.xyzx
  mul [precise(xyz)] r5.xyz, r2.wwww, r6.xyzx
  ine r0.x, r0.w, l(-1)
  if_nz r0.x
    ishl r0.x, r0.w, l(4)
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r6.xyzw, r0.x, t2.zxwy
    iadd r0.x, r0.x, l(16)
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r7.xyz, r0.x, t2.xyzx
    and r8.xyz, r6.wyww, l(0x00007fff, 0x0000ffff, 0x00008000, 0)
    utof r9.xy, r8.xyxx
    ushr r8.xyw, r6.yxyz, l(16, 16, 0, 16)
    utof r9.z, r8.x
    add r9.xyz, r9.yzxy, l(-32768.000000, -32768.000000, -16384.000000, 0.000000)
    mul r10.xyzw, r9.xyzz, l(0.000031, 0.000031, 0.000043, -0.000043)
    add r11.x, r10.y, r10.x
    mad r11.y, r9.x, l(0.000031), -r10.y
    dp2 r0.x, l(1.000000, 1.000000, 0.000000, 0.000000), |r11.xyxx|
    add r11.z, -r0.x, l(2.000000)
    dp3 r0.x, r11.xyzx, r11.xyzx
    rsq r0.x, r0.x
    mul r9.xyz, r0.xxxx, r11.xyzx
    mad r0.x, r11.z, r0.x, l(1.000000)
    div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
    mov r11.xy, -r9.xyxx
    mul r0.w, r9.y, r11.x
    mul r12.z, r0.x, r0.w
    mad r0.w, r10.w, r10.z, l(1.000000)
    sqrt r0.w, r0.w
    mul r10.xy, r9.xyxx, r9.xyxx
    mad r12.xy, -r10.xyxx, r0.xxxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    swapc r0.x, r8.x, r8.z, r10.z, r0.w
    mov r12.w, r11.x
    mov r11.zw, r12.zzzy
    mul r10.xyz, r0.xxxx, r11.zwyz
    mad r10.xyz, r12.xzwx, r8.xxxx, r10.xyzx
    mul r11.xyz, r9.zxyz, r10.yzxy
    mad r11.xyz, r9.yzxy, r10.zxyz, -r11.xyzx
    mov r6.y, r8.y
    and r6.xyz, r6.xyzx, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0)
    utof r6.xyz, r6.xyzx
    add r6.xyz, r6.xyzx, l(-32768.000000, -32768.000000, -32768.000000, 0.000000)
    ishl r0.x, r8.w, l(23)
    iadd r0.x, r0.x, l(0xf8800000)
    mul r6.xyz, r0.xxxx, r6.xyzx
    mul r8.xyz, r6.xxxx, r10.xyzx
    mul r6.xyw, r6.yyyy, r11.xyxz
    mul r9.xyz, r6.zzzz, r9.xyzx
  else 
    imad r10.xyz, r1.yyyy, l(164, 164, 164, 0), l(224, 240, 256, 0)
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r11.xyzw, r10.x, t0.xyzw
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r12.xyzw, r10.y, t0.xyzw
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r10.xyzw, r10.z, t0.xyzw
    dp3 r8.x, r1.xzwx, r11.xyzx
    dp3 r8.y, r1.xzwx, r12.xyzx
    dp3 r8.z, r1.xzwx, r10.xyzx
    dp3 r6.x, r3.xyzx, r11.xyzx
    dp3 r6.y, r3.xyzx, r12.xyzx
    dp3 r6.w, r3.xyzx, r10.xyzx
    dp3 r9.x, r5.xyzx, r11.xyzx
    dp3 r9.y, r5.xyzx, r12.xyzx
    dp3 r9.z, r5.xyzx, r10.xyzx
    mov r4.w, l(1.000000)
    dp4 r7.x, r4.xyzw, r11.xyzw
    dp4 r7.y, r4.xyzw, r12.xyzw
    dp4 r7.z, r4.xyzw, r10.xyzw
  endif 
  div r2.xyw, l(1.000000, 1.000000, 1.000000, 1.000000), |r2.xyxw|
  ld_raw_indexable [precise(xyz)](raw_buffer)(mixed,mixed,mixed,mixed) r10.xyz, r2.z, t0.xyzx
  ubfe r0.x, l(1), l(20), r0.y
  movc r0.x, r0.x, l(-1.000000), l(1.000000)
else 
  mov [precise(xzw)] r1.xzw, l(0,0,0,0)
  mov [precise(xyz)] r3.xyz, l(0,0,0,0)
  mov [precise(xyz)] r5.xyz, l(0,0,0,0)
  mov [precise(xyz)] r4.xyz, l(0,0,0,0)
  mov [precise(xyz)] r10.xyz, l(0,0,0,0)
  mov r8.xyz, l(0,0,0,0)
  mov r6.xyw, l(0,0,0,0)
  mov r9.xyz, l(0,0,0,0)
  mov r7.xyz, l(0,0,0,0)
  mov r2.xyw, l(0,0,0,0)
  mov r0.x, l(0)
endif 
iadd r0.w, v2.x, cb3[0].w
ishl r1.y, r0.w, l(1)
bfi r2.z, l(31), l(1), r0.w, l(1)
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r2.zzzz, t6.xyzw
ld_indexable(buffer)(float,float,float,float) r12.xyz, r1.yyyy, t6.xyzw
mul r13.xyz, r11.yzxy, r12.xyzx
mad r12.xyz, r11.xyzx, r12.yzxy, -r13.xyzx
mul r12.xyz, r11.wwww, r12.xyzx
mul r13.xyz, r11.yzxy, r12.xyzx
mad r12.xyz, r12.zxyz, r11.zxyz, -r13.xyzx
mul r12.xyz, r11.wwww, r12.xyzx
mul r13.xyz, r1.xzwx, r2.xxxx
mul r2.xyz, r2.yyyy, r3.xyzx
mul r14.xyz, r2.wwww, r5.xyzx
mul r15.xyz, r2.xyzx, r12.yyyy
mad r12.xyw, r12.xxxx, r13.xyxz, r15.xyxz
mad o0.xyz, r12.zzzz, r14.xyzx, r12.xywx
mul r2.xyz, r2.xyzx, r11.yyyy
mad r2.xyz, r11.xxxx, r13.xyzx, r2.xyzx
mad o1.xyz, r11.zzzz, r14.xyzx, r2.xyzx
mul [precise(xyz)] r2.xyz, r3.xyzx, v0.yyyy
mad [precise(xyz)] r1.xyz, v0.xxxx, r1.xzwx, r2.xyzx
mad [precise(xyz)] r1.xyz, v0.zzzz, r5.xyzx, r1.xyzx
add [precise(xyz)] r2.xyz, r10.xyzx, -cb1[64].xyzx
add [precise(xyz)] r3.xyz, r4.xyzx, cb1[76].xyzx
mul [precise(xyz)] r4.xyz, r2.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000)
add [precise(xyz)] r3.xyz, r3.xyzx, r4.xyzx
add [precise(xyz)] r1.xyz, r1.xyzx, r3.xyzx
imul null, r0.w, r0.w, cb3[0].y
ld_indexable(buffer)(float,float,float,float) r3.xy, r0.wwww, t5.xyzw
mul [precise] r4.xyzw, r1.xxxx, cb1[0].xyzw
mul [precise] r5.xyzw, r1.yyyy, cb1[1].xyzw
add [precise] r4.xyzw, r4.xyzw, r5.xyzw
mul [precise] r5.xyzw, r1.zzzz, cb1[2].xyzw
add [precise] r4.xyzw, r4.xyzw, r5.xyzw
add [precise] o6.xyzw, r4.xyzw, cb1[3].xyzw
bfi r0.y, l(20), l(2), r0.y, l(0)
imul null, r0.y, r0.y, l(164)
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r0.y, r0.y, t0.xxxx
and r0.y, r0.y, l(32)
if_nz cb0[0].x
  ieq r0.w, cb1[144].w, cb2[0].x
  ieq r1.w, l(0), cb1[145].w
  and r0.w, r0.w, r1.w
  if_nz r0.w
    imul null, r0.w, v2.x, l(3)
    ld_indexable(buffer)(float,float,float,float) r0.w, r0.wwww, t4.yzwx
    imad r3.zw, v2.xxxx, l(0, 0, 3, 3), l(0, 0, 1, 2)
    ld_indexable(buffer)(float,float,float,float) r1.w, r3.zzzz, t4.yzwx
    ld_indexable(buffer)(float,float,float,float) r2.w, r3.wwww, t4.yzwx
  else 
    mov r0.w, v0.x
    mov r1.w, v0.y
    mov r2.w, v0.z
  endif 
else 
  mov r0.w, v0.x
  mov r1.w, v0.y
  mov r2.w, v0.z
endif 
mul r4.xyz, r8.xyzx, r0.wwww
mad r4.xyz, r1.wwww, r6.xywx, r4.xyzx
mad r4.xyz, r2.wwww, r9.xyzx, r4.xyzx
add r5.xyz, r7.xyzx, cb1[108].xyzx
mad r2.xyz, r2.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r5.xyzx
add r2.xyz, r2.xyzx, r4.xyzx
mul r4.xyzw, r2.yyyy, cb1[86].xyzw
mad r4.xyzw, r2.xxxx, cb1[85].xyzw, r4.xyzw
mad r2.xyzw, r2.zzzz, cb1[87].xyzw, r4.xyzw
add r2.xyzw, r2.xyzw, cb1[88].xyzw
movc o5.xyzw, r0.yyyy, r2.xyzw, l(0,0,0,1.000000)
mul o1.w, r0.x, r11.w
mov o0.w, l(0)
mov o2.xy, r3.xyxx
mov o2.zw, l(0,0,0,0)
mov [precise(xyz)] o4.xyz, r1.xyzx
mov [precise(x)] o3.x, r0.z
ret 
// Approximately 236 instruction slots used
