//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _RootShaderParameters
// {
//
//   uint NumLights;                    // Offset:   80 Size:     4 [unused]
//   uint NumViews;                     // Offset:   84 Size:     4
//
// }
//
// Resource bind info for CardTiles
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for LightTileAllocator
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for LightTiles
// {
//
//   uint2 $Element;                    // Offset:    0 Size:     8
//
// }
//
// Resource bind info for LightTileOffsetsPerLight
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for LightTileOffsetNumPerCardTile
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for RWCompactedLightTiles
// {
//
//   uint2 $Element;                    // Offset:    0 Size:     8
//
// }
//
// Resource bind info for RWLightTilesPerCardTile
// {
//
//   uint2 $Element;                    // Offset:    0 Size:     8
//
// }
//
// Resource bind info for RWCompactedLightTileAllocatorPerLight
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CardTiles                         texture  struct         r/o             t0      1 
// LightTileAllocator                texture  struct         r/o             t1      1 
// LightTiles                        texture  struct         r/o             t2      1 
// LightTileOffsetsPerLight          texture  struct         r/o             t3      1 
// LightTileOffsetNumPerCardTile     texture  struct         r/o             t4      1 
// RWCompactedLightTiles                 UAV  struct         r/w             u0      1 
// RWLightTilesPerCardTile               UAV  struct         r/w             u1      1 
// RWCompactedLightTileAllocatorPerLight        UAV  struct         r/w             u2      1 
// _RootShaderParameters             cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_resource_structured t0, 4
dcl_resource_structured t1, 4
dcl_resource_structured t2, 8
dcl_resource_structured t3, 4
dcl_resource_structured t4, 4
dcl_uav_structured u0, 8
dcl_uav_structured u1, 8
dcl_uav_structured u2, 4
dcl_input vThreadID.x
dcl_temps 4
dcl_thread_group 64, 1, 1
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.x, l(0), l(0), t1.xxxx
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, vThreadID.x, l(0), t2.xyxx
  ubfe r0.z, l(3), l(28), r0.x
  and r1.xy, r0.xyxx, l(0x0fffffff, 0x00ffffff, 0, 0)
  ushr r0.yw, r0.xxxy, l(0, 31, 0, 24)
  imad r2.x, r1.x, cb0[5].y, r0.z
  mov r2.y, l(0)
  imm_atomic_iadd r3.x, u2, r2.xyxx, l(1)
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r1.x, r2.x, l(0), t3.xxxx
  iadd r1.x, r1.x, r3.x
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r2.y, r1.y, l(0), t0.xxxx
  bfi r2.x, l(4), l(28), r0.z, r0.x
  store_structured u0.xy, r1.x, l(0), r2.xyxx
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.x, r1.y, l(0), t4.xxxx
  and r0.x, r0.x, l(0x00ffffff)
  iadd r0.x, r0.w, r0.x
  movc r2.z, r0.y, r1.x, l(-1)
  store_structured u1.xy, r0.x, l(0), r2.xzxx
endif 
ret 
// Approximately 22 instruction slots used
