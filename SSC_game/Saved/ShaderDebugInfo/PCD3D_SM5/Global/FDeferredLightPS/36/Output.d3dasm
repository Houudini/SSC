//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_TranslatedWorldToClip;// Offset:    0 Size:    64
//   row_major float4x4 View_View_ViewToClip;// Offset:  512 Size:    64
//   row_major float4x4 View_View_ClipToView;// Offset:  640 Size:    64
//   float4 View_View_InvDeviceZToWorldZTransform;// Offset: 1136 Size:    16
//   float4 View_View_ScreenPositionScaleBias;// Offset: 1152 Size:    16
//   float3 View_View_TranslatedWorldCameraOrigin;// Offset: 1184 Size:    12
//   float4 View_View_BufferSizeAndInvSize;// Offset: 2112 Size:    16
//   float View_View_PreExposure;       // Offset: 2180 Size:     4
//   uint View_View_StateFrameIndexMod8;// Offset: 2320 Size:     4
//
// }
//
// cbuffer DeferredLightUniforms
// {
//
//   float4 DeferredLightUniforms_DeferredLightUniforms_ShadowMapChannelMask;// Offset:    0 Size:    16
//   float2 DeferredLightUniforms_DeferredLightUniforms_DistanceFadeMAD;// Offset:   16 Size:     8
//   float DeferredLightUniforms_DeferredLightUniforms_ContactShadowLength;// Offset:   24 Size:     4
//   float DeferredLightUniforms_DeferredLightUniforms_ContactShadowCastingIntensity;// Offset:   28 Size:     4
//   float DeferredLightUniforms_DeferredLightUniforms_ContactShadowNonCastingIntensity;// Offset:   32 Size:     4
//   uint DeferredLightUniforms_DeferredLightUniforms_ShadowedBits;// Offset:   40 Size:     4
//   uint DeferredLightUniforms_DeferredLightUniforms_LightingChannelMask;// Offset:   44 Size:     4
//   float3 DeferredLightUniforms_DeferredLightUniforms_Direction;// Offset:   80 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SceneTexturesStruct_PointClampSampler    sampler      NA          NA             s0      1 
// LightAttenuationTextureSampler    sampler      NA          NA             s1      1 
// SceneTexturesStruct_SceneDepthTexture    texture  float4          2d             t0      1 
// SceneTexturesStruct_GBufferATexture    texture  float4          2d             t1      1 
// SceneTexturesStruct_GBufferBTexture    texture  float4          2d             t2      1 
// SceneTexturesStruct_GBufferDTexture    texture  float4          2d             t3      1 
// SceneTexturesStruct_GBufferETexture    texture  float4          2d             t4      1 
// SceneTexturesStruct_ScreenSpaceAOTexture    texture  float4          2d             t5      1 
// LightAttenuationTexture           texture  float4          2d             t6      1 
// LightingChannelsTexture           texture   uint4          2d             t7      1 
// View                              cbuffer      NA          NA            cb0      1 
// DeferredLightUniforms             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// SV_Position              0   xyzw        2      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[146], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (uint,uint,uint,uint) t7
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps_siv linear noperspective v2.xy, position
dcl_output o0.xyzw
dcl_temps 8
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v0.xyxx, t2.wxyz, s0, l(0.000000)
mad r0.x, r0.x, l(255.000000), l(0.500000)
ftou r0.x, r0.x
and r0.y, r0.x, l(15)
mul r0.zw, v0.xxxy, cb0[132].xxxy
ftou r1.xy, r0.zwzz
ult r0.z, l(0), r0.y
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(uint,uint,uint,uint) r0.w, r1.xyzw, t7.yzwx
and r0.w, r0.w, cb1[2].w
ine r0.w, r0.w, l(0)
and r0.z, r0.w, r0.z
if_nz r0.z
  sample_l_indexable(texture2d)(float,float,float,float) r0.z, v0.xyxx, t0.yzxw, s0, l(0.000000)
  mad r0.w, r0.z, cb0[71].x, cb0[71].y
  mad r0.z, r0.z, cb0[71].z, -cb0[71].w
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  add r0.z, r0.z, r0.w
  ieq r1.xy, r0.yyyy, l(7, 9, 0, 0)
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t6.xyzw, s1, l(0.000000)
  mul r3.xyzw, r2.xyzw, r2.xyzw
  mul r0.w, r0.z, cb0[41].y
  if_nz cb1[2].z
    sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, v0.xyxx, t4.xyzw, s0, l(0.000000)
    ushr r0.x, r0.x, l(4)
    and r1.zw, r0.xxxx, l(0, 0, 2, 4)
    movc r0.x, r1.w, l(0), l(1.000000)
    movc r4.xyzw, r1.zzzz, r0.xxxx, r4.xyzw
    dp4 r0.x, r4.xyzw, cb1[0].xyzw
    dp4 r1.z, cb1[0].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    add r0.x, r0.x, l(-1.000000)
    mad r0.x, r1.z, r0.x, l(1.000000)
    mad_sat r1.z, r0.z, cb1[1].x, cb1[1].y
    mul r1.z, r1.z, r1.z
    mad r2.xy, -r2.yxyy, r2.yxyy, r0.xxxx
    mad r1.zw, r1.zzzz, r2.xxxy, r3.yyyx
    ult r0.x, l(1), cb1[2].z
    lt r2.x, l(0.000000), |cb1[1].z|
    and r0.x, r0.x, r2.x
    lt r2.x, cb1[1].z, l(0.000000)
    movc r2.x, r2.x, l(1.000000), r0.w
    mul r2.x, r2.x, |cb1[1].z|
    and r0.x, r0.x, r2.x
    ne r2.x, r3.w, r3.w
    ne r2.y, r1.z, r1.z
    min r2.z, r3.w, r1.z
    movc r2.y, r2.y, r3.w, r2.z
    movc r1.z, r2.x, r1.z, r2.y
    mul r2.xy, r3.zzzz, r1.zwzz
  else 
    sample_l_indexable(texture2d)(float,float,float,float) r2.y, v0.xyxx, t5.yxzw, s0, l(0.000000)
    mov r2.x, l(1.000000)
    mov r0.x, l(0)
  endif 
  ult r1.z, cb1[2].z, l(2)
  and r1.z, r1.x, r1.z
  mul r0.w, r0.w, l(0.200000)
  movc r0.x, r1.z, r0.w, r0.x
  movc r0.x, r1.y, l(0.500000), r0.x
  lt r0.w, l(0.000000), r0.x
  if_nz r0.w
    ieq r3.xyzw, r0.yyyy, l(2, 3, 5, 6)
    or r0.w, r3.y, r3.x
    mad r4.xyz, v1.xyzx, r0.zzzz, cb0[74].xyzx
    mul r5.xyzw, r4.yyyy, cb0[1].xyzw
    mad r5.xyzw, r4.xxxx, cb0[0].xyzw, r5.xyzw
    mad r4.xyzw, r4.zzzz, cb0[2].xyzw, r5.xyzw
    add r4.xyzw, r4.xyzw, cb0[3].xyzw
    mul r5.xyz, r0.xxxx, cb1[5].xyzx
    mul r6.xyzw, r5.yyyy, cb0[1].xyzw
    mad r6.xyzw, r5.xxxx, cb0[0].xyzw, r6.xyzw
    mad r5.xyzw, r5.zzzz, cb0[2].xyzw, r6.xyzw
    add r5.xyzw, r4.xyzw, r5.xyzw
    div r6.xyz, r4.xyzx, r4.wwww
    div r5.xyz, r5.xyzx, r5.wwww
    add r5.xyz, -r6.xyzx, r5.xyzx
    mad r6.xy, r6.xyxx, cb0[72].xyxx, cb0[72].wzww
    mul r5.xy, r5.xyxx, cb0[72].xyxx
    mad r1.zw, r0.xxxx, cb0[34].zzzw, r4.zzzw
    div r0.z, r1.z, r1.w
    add r0.z, -r6.z, r0.z
    mul r1.z, |r0.z|, l(0.250000)
    utof r1.w, cb0[145].x
    mad r2.zw, r1.wwww, l(0.000000, 0.000000, 32.665001, 11.815000), v2.xxxy
    dp2 r1.w, r2.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
    frc r1.w, r1.w
    mul r1.w, r1.w, l(52.982918)
    frc r1.w, r1.w
    add r1.w, r1.w, l(-0.500000)
    mad r4.xyzw, r1.wwww, l(0.125000, 0.125000, 0.125000, 0.125000), l(0.125000, 0.250000, 0.375000, 0.500000)
    sample_l_indexable(texture2d)(float,float,float,float) r2.z, r6.xyxx, t0.yzxw, s0, l(0.000000)
    mad r7.xyz, r5.xyzx, r4.xxxx, r6.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t0.yzwx, s0, l(0.000000)
    add r3.x, -r2.w, r7.z
    mad r3.x, |r0.z|, l(0.250000), r3.x
    lt r3.x, |r3.x|, r1.z
    ne r2.w, r2.z, r2.w
    and r2.w, r2.w, r3.x
    movc r2.w, r2.w, r4.x, l(-1.000000)
    mad r7.xyz, r5.xyzx, r4.yyyy, r6.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r3.x, r7.xyxx, t0.xyzw, s0, l(0.000000)
    add r3.y, -r3.x, r7.z
    mad r3.y, |r0.z|, l(0.250000), r3.y
    lt r3.y, |r3.y|, r1.z
    ne r3.x, r2.z, r3.x
    and r3.x, r3.x, r3.y
    lt r3.y, r2.w, l(0.000000)
    and r3.x, r3.y, r3.x
    movc r2.w, r3.x, r4.y, r2.w
    mad r7.xyz, r5.xyzx, r4.zzzz, r6.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r3.x, r7.xyxx, t0.xyzw, s0, l(0.000000)
    add r3.y, -r3.x, r7.z
    mad r3.y, |r0.z|, l(0.250000), r3.y
    lt r3.y, |r3.y|, r1.z
    ne r3.x, r2.z, r3.x
    and r3.x, r3.x, r3.y
    lt r3.y, r2.w, l(0.000000)
    and r3.x, r3.y, r3.x
    movc r2.w, r3.x, r4.z, r2.w
    mad r4.xyz, r5.xyzx, r4.wwww, r6.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r3.x, r4.xyxx, t0.xyzw, s0, l(0.000000)
    add r3.y, -r3.x, r4.z
    mad r3.y, |r0.z|, l(0.250000), r3.y
    lt r3.y, |r3.y|, r1.z
    ne r3.x, r2.z, r3.x
    and r3.x, r3.x, r3.y
    lt r3.y, r2.w, l(0.000000)
    and r3.x, r3.y, r3.x
    movc r2.w, r3.x, r4.w, r2.w
    mad r4.xyzw, r1.wwww, l(0.125000, 0.125000, 0.125000, 0.125000), l(0.625000, 0.750000, 0.875000, 1.000000)
    mad r7.xyz, r5.xyzx, r4.xxxx, r6.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r1.w, r7.xyxx, t0.yzwx, s0, l(0.000000)
    add r3.x, -r1.w, r7.z
    mad r3.x, |r0.z|, l(0.250000), r3.x
    lt r3.x, |r3.x|, r1.z
    ne r1.w, r2.z, r1.w
    and r1.w, r1.w, r3.x
    lt r3.x, r2.w, l(0.000000)
    and r1.w, r1.w, r3.x
    movc r1.w, r1.w, r4.x, r2.w
    mad r7.xyz, r5.xyzx, r4.yyyy, r6.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t0.yzwx, s0, l(0.000000)
    add r3.x, -r2.w, r7.z
    mad r3.x, |r0.z|, l(0.250000), r3.x
    lt r3.x, |r3.x|, r1.z
    ne r2.w, r2.z, r2.w
    and r2.w, r2.w, r3.x
    lt r3.x, r1.w, l(0.000000)
    and r2.w, r2.w, r3.x
    movc r1.w, r2.w, r4.y, r1.w
    mad r7.xyz, r5.xyzx, r4.zzzz, r6.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t0.yzwx, s0, l(0.000000)
    add r3.x, -r2.w, r7.z
    mad r3.x, |r0.z|, l(0.250000), r3.x
    lt r3.x, |r3.x|, r1.z
    ne r2.w, r2.z, r2.w
    and r2.w, r2.w, r3.x
    lt r3.x, r1.w, l(0.000000)
    and r2.w, r2.w, r3.x
    movc r1.w, r2.w, r4.z, r1.w
    mad r4.xyz, r5.xyzx, r4.wwww, r6.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t0.yzwx, s0, l(0.000000)
    add r3.x, -r2.w, r4.z
    mad r0.z, |r0.z|, l(0.250000), r3.x
    lt r0.z, |r0.z|, r1.z
    ne r1.z, r2.z, r2.w
    and r0.z, r0.z, r1.z
    lt r1.z, r1.w, l(0.000000)
    and r0.z, r0.z, r1.z
    movc r0.z, r0.z, r4.w, r1.w
    lt r1.z, l(0.000000), r0.z
    if_nz r1.z
      mad r1.zw, r5.xxxy, r0.zzzz, r6.xxxy
      lt r2.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r1.zzzw
      lt r3.xy, r1.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r4.x, r1.zwzz, t1.wxyz, s0, l(0.000000)
      mul r4.x, r4.x, l(3.999000)
      ftou r4.x, r4.x
      and r4.x, r4.x, l(1)
      ine r4.x, r4.x, l(0)
      sample_l_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t2.xywz, s0, l(0.000000)
      mad r1.z, r1.z, l(255.000000), l(0.500000)
      ftou r1.z, r1.z
      and r1.z, r1.z, l(15)
      ine r1.z, r1.z, l(9)
      and r1.z, r1.z, r4.x
      and r2.zw, r2.zzzw, r3.xxxy
      and r1.w, r2.w, r2.z
      mul r0.x, r0.x, r0.z
      movc r0.x, r1.w, r0.x, l(-1.000000)
    else 
      mov r1.z, l(0)
      mov r0.x, l(-1.000000)
    endif 
    lt r0.z, l(0.000000), r0.x
    movc r1.z, r1.z, cb1[1].w, cb1[2].x
    lt r1.w, l(0.000000), r1.z
    or r2.z, r3.z, r0.w
    or r2.z, r3.w, r2.z
    or r2.z, r1.x, r2.z
    or r2.z, r1.y, r2.z
    and r1.w, r1.w, r2.z
    ine r4.xyz, r0.yyyy, l(7, 9, 5, 0)
    and r1.w, r1.w, r4.x
    and r1.w, r4.y, r1.w
    and r1.w, r4.z, r1.w
    if_nz r1.w
      sample_l_indexable(texture2d)(float,float,float,float) r1.w, v0.xyxx, t3.xyzw, s0, l(0.000000)
      ieq r2.zw, r0.yyyy, l(0, 0, 4, 8)
      or r0.y, r0.w, r2.z
      or r0.y, r3.z, r0.y
      or r0.y, r3.w, r0.y
      or r0.y, r1.x, r0.y
      or r0.y, r2.w, r0.y
      or r0.y, r1.y, r0.y
      and r0.y, r1.w, r0.y
      min r0.y, r0.y, l(0.990000)
      add r0.y, -r0.y, l(1.000000)
      log r0.y, r0.y
      mul r0.x, r0.x, r0.y
      mul r0.x, r0.x, l(0.050000)
      exp r0.x, r0.x
      min r0.x, r0.x, l(1.000000)
      add r0.x, -r0.x, l(1.000000)
      mul r1.z, r0.x, r1.z
    endif 
    add r0.x, -r1.z, l(1.000000)
    mul r0.xy, r0.xxxx, r2.xyxx
    movc r2.xy, r0.zzzz, r0.xyxx, r2.xyxx
  endif 
  add r0.x, r2.x, r2.y
  lt r0.x, l(0.000000), r0.x
  if_nz r0.x
    mov r0.x, l(1.000000)
  else 
    mov r0.x, l(0.600000)
  endif 
  mul r0.xyzw, r0.xxxx, l(0.200000, 0.050000, 0.015000, 0.000000)
else 
  mov r0.xyzw, l(0,0,0,0)
endif 
mul o0.xyzw, r0.xyzw, cb0[136].yyyy
ret 
// Approximately 243 instruction slots used
