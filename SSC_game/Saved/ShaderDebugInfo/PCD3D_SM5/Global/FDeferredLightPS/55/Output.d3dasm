//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_TranslatedWorldToClip;// Offset:    0 Size:    64
//   row_major float4x4 View_View_ViewToClip;// Offset:  512 Size:    64
//   row_major float4x4 View_View_ClipToView;// Offset:  640 Size:    64
//   row_major float4x4 View_View_ScreenToTranslatedWorld;// Offset:  896 Size:    64
//   float4 View_View_InvDeviceZToWorldZTransform;// Offset: 1136 Size:    16
//   float4 View_View_ScreenPositionScaleBias;// Offset: 1152 Size:    16
//   float3 View_View_TranslatedWorldCameraOrigin;// Offset: 1184 Size:    12
//   float4 View_View_BufferSizeAndInvSize;// Offset: 2112 Size:    16
//   float View_View_PreExposure;       // Offset: 2180 Size:     4
//   float4 View_View_DiffuseOverrideParameter;// Offset: 2192 Size:    16
//   float4 View_View_SpecularOverrideParameter;// Offset: 2208 Size:    16
//   uint View_View_StateFrameIndexMod8;// Offset: 2320 Size:     4
//   float4 View_View_TemporalAAParams; // Offset: 2448 Size:    16
//   float View_View_bCheckerboardSubsurfaceProfileRendering;// Offset: 3656 Size:     4
//   float View_View_MinRoughness;      // Offset: 3928 Size:     4
//   float View_View_bSubsurfacePostprocessEnabled;// Offset: 3964 Size:     4
//   float4 View_View_SSProfilesTextureSizeAndInvSize;// Offset: 3968 Size:    16
//   float View_View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;// Offset: 4556 Size:     4
//
// }
//
// cbuffer DeferredLightUniforms
// {
//
//   float4 DeferredLightUniforms_DeferredLightUniforms_ShadowMapChannelMask;// Offset:    0 Size:    16
//   float DeferredLightUniforms_DeferredLightUniforms_ContactShadowLength;// Offset:   24 Size:     4
//   float DeferredLightUniforms_DeferredLightUniforms_ContactShadowCastingIntensity;// Offset:   28 Size:     4
//   float DeferredLightUniforms_DeferredLightUniforms_ContactShadowNonCastingIntensity;// Offset:   32 Size:     4
//   uint DeferredLightUniforms_DeferredLightUniforms_ShadowedBits;// Offset:   40 Size:     4
//   float3 DeferredLightUniforms_DeferredLightUniforms_TranslatedWorldPosition;// Offset:   48 Size:    12
//   float DeferredLightUniforms_DeferredLightUniforms_InvRadius;// Offset:   60 Size:     4
//   float3 DeferredLightUniforms_DeferredLightUniforms_Color;// Offset:   64 Size:    12
//   float DeferredLightUniforms_DeferredLightUniforms_FalloffExponent;// Offset:   76 Size:     4
//   float3 DeferredLightUniforms_DeferredLightUniforms_Direction;// Offset:   80 Size:    12
//   float DeferredLightUniforms_DeferredLightUniforms_SpecularScale;// Offset:   92 Size:     4
//   float3 DeferredLightUniforms_DeferredLightUniforms_Tangent;// Offset:   96 Size:    12
//   float DeferredLightUniforms_DeferredLightUniforms_SourceRadius;// Offset:  108 Size:     4
//   float2 DeferredLightUniforms_DeferredLightUniforms_SpotAngles;// Offset:  112 Size:     8
//   float DeferredLightUniforms_DeferredLightUniforms_SoftSourceRadius;// Offset:  120 Size:     4
//   float DeferredLightUniforms_DeferredLightUniforms_SourceLength;// Offset:  124 Size:     4
//   float DeferredLightUniforms_DeferredLightUniforms_IESAtlasIndex;// Offset:  156 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_PreIntegratedBRDFSampler     sampler      NA          NA             s0      1 
// View_SSProfilesTransmissionSampler    sampler      NA          NA             s1      1 
// View_IESAtlasSampler              sampler      NA          NA             s2      1 
// SceneTexturesStruct_PointClampSampler    sampler      NA          NA             s3      1 
// LightAttenuationTextureSampler    sampler      NA          NA             s4      1 
// View_PreIntegratedBRDF            texture  float4          2d             t0      1 
// View_SSProfilesTexture            texture  float4          2d             t1      1 
// View_IESAtlasTexture              texture  float4     2darray             t2      1 
// SceneTexturesStruct_SceneDepthTexture    texture  float4          2d             t3      1 
// SceneTexturesStruct_GBufferATexture    texture  float4          2d             t4      1 
// SceneTexturesStruct_GBufferBTexture    texture  float4          2d             t5      1 
// SceneTexturesStruct_GBufferCTexture    texture  float4          2d             t6      1 
// SceneTexturesStruct_GBufferDTexture    texture  float4          2d             t7      1 
// SceneTexturesStruct_GBufferETexture    texture  float4          2d             t8      1 
// SceneTexturesStruct_ScreenSpaceAOTexture    texture  float4          2d             t9      1 
// LightAttenuationTexture           texture  float4          2d            t10      1 
// View                              cbuffer      NA          NA            cb0      1 
// DeferredLightUniforms             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy w
// SV_Position              0   xyzw        1      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[285], immediateIndexed
dcl_constantbuffer CB1[10], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2darray (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v0.xyw
dcl_input_ps_siv linear noperspective v1.xy, position
dcl_output o0.xyzw
dcl_temps 21
div r0.xy, v0.xyxx, v0.wwww
mad r0.zw, r0.xxxy, cb0[72].xxxy, cb0[72].wwwz
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.zwzz, t5.xyzw, s3, l(0.000000)
mad r1.w, r1.w, l(255.000000), l(0.500000)
ftou r1.w, r1.w
and r2.x, r1.w, l(15)
if_nz r2.x
  sample_l_indexable(texture2d)(float,float,float,float) r2.y, r0.zwzz, t3.yxzw, s3, l(0.000000)
  mad r2.z, r2.y, cb0[71].x, cb0[71].y
  mad r2.y, r2.y, cb0[71].z, -cb0[71].w
  div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
  add r2.y, r2.y, r2.z
  lt r2.z, cb0[35].w, l(1.000000)
  movc r2.z, r2.z, r2.y, l(1.000000)
  mul r0.xy, r0.xyxx, r2.zzzz
  mul r3.xyz, r0.yyyy, cb0[57].xyzx
  mad r3.xyz, r0.xxxx, cb0[56].xyzx, r3.xyzx
  mad r3.xyz, r2.yyyy, cb0[58].xyzx, r3.xyzx
  add r3.xyz, r3.xyzx, cb0[59].xyzx
  add r4.xyz, r3.xyzx, -cb0[74].xyzx
  dp3 r0.x, r4.xyzx, r4.xyzx
  rsq r0.x, r0.x
  mul r4.xyz, r0.xxxx, r4.xyzx
  eq r0.x, l(0.000000), cb1[4].w
  ge r0.y, cb1[9].w, l(0.000000)
  if_nz r0.y
    add r5.xyz, -r3.xyzx, cb1[3].xyzx
    dp3 r0.y, r5.xyzx, r5.xyzx
    rsq r0.y, r0.y
    mul r5.xyz, r0.yyyy, r5.xyzx
    mul r6.xyz, -cb1[5].yzxy, cb1[6].zxyz
    mad r6.xyz, cb1[6].yzxy, -cb1[5].zxyz, -r6.xyzx
    dp3 r0.y, r6.xyzx, r6.xyzx
    rsq r0.y, r0.y
    mul r6.xyz, r0.yyyy, r6.xyzx
    dp3 r0.y, r5.xyzx, r6.xyzx
    dp3 r2.z, r5.xyzx, cb1[6].xyzx
    dp3 r2.w, r5.xyzx, -cb1[5].xyzx
    add r3.w, -|r2.w|, l(1.000000)
    sqrt r3.w, r3.w
    mad r4.w, |r2.w|, l(-0.018729), l(0.074261)
    mad r4.w, r4.w, |r2.w|, l(-0.212114)
    mad r4.w, r4.w, |r2.w|, l(1.570729)
    mul r5.x, r3.w, r4.w
    mad r5.x, r5.x, l(-2.000000), l(3.141593)
    lt r2.w, r2.w, -r2.w
    and r2.w, r2.w, r5.x
    mad r2.w, r4.w, r3.w, r2.w
    add r2.w, -r2.w, l(1.570796)
    mad r5.x, r2.w, l(0.318310), l(0.500000)
    min r2.w, |r0.y|, |r2.z|
    max r3.w, |r0.y|, |r2.z|
    div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
    mul r2.w, r2.w, r3.w
    mul r3.w, r2.w, r2.w
    mad r4.w, r3.w, l(0.020835), l(-0.085133)
    mad r4.w, r3.w, r4.w, l(0.180141)
    mad r4.w, r3.w, r4.w, l(-0.330299)
    mad r3.w, r3.w, r4.w, l(0.999866)
    mul r4.w, r2.w, r3.w
    lt r5.w, |r0.y|, |r2.z|
    mad r4.w, r4.w, l(-2.000000), l(1.570796)
    and r4.w, r5.w, r4.w
    mad r2.w, r2.w, r3.w, r4.w
    lt r3.w, -r0.y, r0.y
    and r3.w, r3.w, l(0xc0490fdb)
    add r2.w, r2.w, r3.w
    min r3.w, -r0.y, -r2.z
    max r0.y, -r0.y, -r2.z
    lt r2.z, r3.w, -r3.w
    ge r0.y, r0.y, -r0.y
    and r0.y, r0.y, r2.z
    movc r0.y, r0.y, -r2.w, r2.w
    mad r5.y, r0.y, l(0.159155), l(0.500000)
    mov r5.z, cb1[9].w
    sample_l_indexable(texture2darray)(float,float,float,float) r0.y, r5.xyzx, t2.yxzw, s2, l(0.000000)
  else 
    mov r0.y, l(1.000000)
  endif 
  sample_l_indexable(texture2d)(float,float,float,float) r2.zw, r0.zwzz, t10.xyzw, s4, l(0.000000)
  mul r2.zw, r2.wwwz, r2.wwwz
  add r5.xyz, -r3.xyzx, cb1[3].xyzx
  dp3 r3.w, r5.xyzx, r5.xyzx
  rsq r4.w, r3.w
  mul r6.xyz, r4.wwww, r5.xyzx
  mul r4.w, cb1[3].w, cb1[3].w
  mul r3.w, r3.w, r4.w
  mad r3.w, -r3.w, r3.w, l(1.000000)
  max r3.w, r3.w, l(0.000000)
  mul r3.w, r3.w, r3.w
  mul r7.xyz, r5.xyzx, cb1[3].wwww
  dp3 r4.w, r7.xyzx, r7.xyzx
  min r4.w, r4.w, l(1.000000)
  add r4.w, -r4.w, l(1.000000)
  log r4.w, r4.w
  mul r4.w, r4.w, cb1[4].w
  exp r4.w, r4.w
  movc r3.w, r0.x, r3.w, r4.w
  dp3 r4.w, r6.xyzx, cb1[5].xyzx
  add r4.w, r4.w, -cb1[7].x
  mul_sat r4.w, r4.w, cb1[7].y
  mul r4.w, r4.w, r4.w
  mul r3.w, r3.w, r4.w
  mul r7.xyz, r0.yyyy, cb1[4].xyzx
  mul r7.xyz, r3.wwww, r7.xyzx
  lt r0.y, l(0.000000), r3.w
  if_nz r0.y
    sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r0.zwzz, t7.xyzw, s3, l(0.000000)
    ieq r9.xyzw, r2.xxxx, l(2, 3, 5, 6)
    or r0.y, r9.y, r9.x
    ieq r10.xyzw, r2.xxxx, l(7, 9, 4, 8)
    or r3.w, r0.y, r10.z
    or r3.w, r9.z, r3.w
    or r3.w, r9.w, r3.w
    or r3.w, r10.x, r3.w
    or r3.w, r10.w, r3.w
    or r3.w, r10.y, r3.w
    and r4.w, r8.w, r3.w
    mul r2.y, r2.y, cb0[41].y
    if_nz cb1[2].z
      sample_l_indexable(texture2d)(float,float,float,float) r11.xyzw, r0.zwzz, t8.xyzw, s3, l(0.000000)
      ushr r1.w, r1.w, l(4)
      and r9.xy, r1.wwww, l(2, 4, 0, 0)
      movc r1.w, r9.y, l(0), l(1.000000)
      movc r11.xyzw, r9.xxxx, r1.wwww, r11.xyzw
      dp4 r1.w, r11.xyzw, cb1[0].xyzw
      dp4 r5.w, cb1[0].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      add r1.w, r1.w, l(-1.000000)
      mad r1.w, r5.w, r1.w, l(1.000000)
      ult r5.w, l(1), cb1[2].z
      lt r6.w, l(0.000000), |cb1[1].z|
      and r5.w, r5.w, r6.w
      lt r6.w, cb1[1].z, l(0.000000)
      movc r6.w, r6.w, l(1.000000), r2.y
      mul r6.w, r6.w, |cb1[1].z|
      and r5.w, r5.w, r6.w
      mul r9.xy, r1.wwww, r2.zwzz
    else 
      sample_l_indexable(texture2d)(float,float,float,float) r9.y, r0.zwzz, t9.yxzw, s3, l(0.000000)
      mov r9.x, l(1.000000)
      mov r2.z, l(1.000000)
      mov r5.w, l(0)
    endif 
    ult r1.w, cb1[2].z, l(2)
    and r1.w, r10.x, r1.w
    mul r2.y, r2.y, l(0.200000)
    movc r1.w, r1.w, r2.y, r5.w
    movc r1.w, r10.y, l(0.500000), r1.w
    lt r2.y, l(0.000000), r1.w
    if_nz r2.y
      mul r11.xyzw, r3.yyyy, cb0[1].xyzw
      mad r11.xyzw, r3.xxxx, cb0[0].xyzw, r11.xyzw
      mad r11.xyzw, r3.zzzz, cb0[2].xyzw, r11.xyzw
      add r11.xyzw, r11.xyzw, cb0[3].xyzw
      mul r3.xyz, r1.wwww, r6.xyzx
      mul r6.xyzw, r3.yyyy, cb0[1].xyzw
      mad r6.xyzw, r3.xxxx, cb0[0].xyzw, r6.xyzw
      mad r6.xyzw, r3.zzzz, cb0[2].xyzw, r6.xyzw
      add r6.xyzw, r6.xyzw, r11.xyzw
      div r3.xyz, r11.xyzx, r11.wwww
      div r6.xyz, r6.xyzx, r6.wwww
      add r6.xyz, -r3.xyzx, r6.xyzx
      mad r3.xy, r3.xyxx, cb0[72].xyxx, cb0[72].wzww
      mul r6.xy, r6.xyxx, cb0[72].xyxx
      mad r2.yw, r1.wwww, cb0[34].zzzw, r11.zzzw
      div r2.y, r2.y, r2.w
      add r2.y, -r3.z, r2.y
      mul r2.w, |r2.y|, l(0.250000)
      utof r5.w, cb0[145].x
      mad r10.zw, r5.wwww, l(0.000000, 0.000000, 32.665001, 11.815000), v1.xxxy
      dp2 r5.w, r10.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
      frc r5.w, r5.w
      mul r5.w, r5.w, l(52.982918)
      frc r5.w, r5.w
      add r5.w, r5.w, l(-0.500000)
      mad r11.xyzw, r5.wwww, l(0.125000, 0.125000, 0.125000, 0.125000), l(0.125000, 0.250000, 0.375000, 0.500000)
      sample_l_indexable(texture2d)(float,float,float,float) r6.w, r3.xyxx, t3.yzwx, s3, l(0.000000)
      mad r12.xyz, r6.xyzx, r11.xxxx, r3.xyzx
      sample_l_indexable(texture2d)(float,float,float,float) r7.w, r12.xyxx, t3.yzwx, s3, l(0.000000)
      add r8.w, -r7.w, r12.z
      mad r8.w, |r2.y|, l(0.250000), r8.w
      lt r8.w, |r8.w|, r2.w
      ne r7.w, r6.w, r7.w
      and r7.w, r7.w, r8.w
      movc r7.w, r7.w, r11.x, l(-1.000000)
      mad r12.xyz, r6.xyzx, r11.yyyy, r3.xyzx
      sample_l_indexable(texture2d)(float,float,float,float) r8.w, r12.xyxx, t3.yzwx, s3, l(0.000000)
      add r10.z, -r8.w, r12.z
      mad r10.z, |r2.y|, l(0.250000), r10.z
      lt r10.z, |r10.z|, r2.w
      ne r8.w, r6.w, r8.w
      and r8.w, r8.w, r10.z
      lt r10.z, r7.w, l(0.000000)
      and r8.w, r8.w, r10.z
      movc r7.w, r8.w, r11.y, r7.w
      mad r12.xyz, r6.xyzx, r11.zzzz, r3.xyzx
      sample_l_indexable(texture2d)(float,float,float,float) r8.w, r12.xyxx, t3.yzwx, s3, l(0.000000)
      add r10.z, -r8.w, r12.z
      mad r10.z, |r2.y|, l(0.250000), r10.z
      lt r10.z, |r10.z|, r2.w
      ne r8.w, r6.w, r8.w
      and r8.w, r8.w, r10.z
      lt r10.z, r7.w, l(0.000000)
      and r8.w, r8.w, r10.z
      movc r7.w, r8.w, r11.z, r7.w
      mad r11.xyz, r6.xyzx, r11.wwww, r3.xyzx
      sample_l_indexable(texture2d)(float,float,float,float) r8.w, r11.xyxx, t3.yzwx, s3, l(0.000000)
      add r10.z, -r8.w, r11.z
      mad r10.z, |r2.y|, l(0.250000), r10.z
      lt r10.z, |r10.z|, r2.w
      ne r8.w, r6.w, r8.w
      and r8.w, r8.w, r10.z
      lt r10.z, r7.w, l(0.000000)
      and r8.w, r8.w, r10.z
      movc r7.w, r8.w, r11.w, r7.w
      mad r11.xyzw, r5.wwww, l(0.125000, 0.125000, 0.125000, 0.125000), l(0.625000, 0.750000, 0.875000, 1.000000)
      mad r12.xyz, r6.xyzx, r11.xxxx, r3.xyzx
      sample_l_indexable(texture2d)(float,float,float,float) r5.w, r12.xyxx, t3.yzwx, s3, l(0.000000)
      add r8.w, -r5.w, r12.z
      mad r8.w, |r2.y|, l(0.250000), r8.w
      lt r8.w, |r8.w|, r2.w
      ne r5.w, r6.w, r5.w
      and r5.w, r5.w, r8.w
      lt r8.w, r7.w, l(0.000000)
      and r5.w, r5.w, r8.w
      movc r5.w, r5.w, r11.x, r7.w
      mad r12.xyz, r6.xyzx, r11.yyyy, r3.xyzx
      sample_l_indexable(texture2d)(float,float,float,float) r7.w, r12.xyxx, t3.yzwx, s3, l(0.000000)
      add r8.w, -r7.w, r12.z
      mad r8.w, |r2.y|, l(0.250000), r8.w
      lt r8.w, |r8.w|, r2.w
      ne r7.w, r6.w, r7.w
      and r7.w, r7.w, r8.w
      lt r8.w, r5.w, l(0.000000)
      and r7.w, r7.w, r8.w
      movc r5.w, r7.w, r11.y, r5.w
      mad r12.xyz, r6.xyzx, r11.zzzz, r3.xyzx
      sample_l_indexable(texture2d)(float,float,float,float) r7.w, r12.xyxx, t3.yzwx, s3, l(0.000000)
      add r8.w, -r7.w, r12.z
      mad r8.w, |r2.y|, l(0.250000), r8.w
      lt r8.w, |r8.w|, r2.w
      ne r7.w, r6.w, r7.w
      and r7.w, r7.w, r8.w
      lt r8.w, r5.w, l(0.000000)
      and r7.w, r7.w, r8.w
      movc r5.w, r7.w, r11.z, r5.w
      mad r11.xyz, r6.xyzx, r11.wwww, r3.xyzx
      sample_l_indexable(texture2d)(float,float,float,float) r3.z, r11.xyxx, t3.yzxw, s3, l(0.000000)
      add r6.z, -r3.z, r11.z
      mad r2.y, |r2.y|, l(0.250000), r6.z
      lt r2.y, |r2.y|, r2.w
      ne r2.w, r6.w, r3.z
      and r2.y, r2.w, r2.y
      lt r2.w, r5.w, l(0.000000)
      and r2.y, r2.w, r2.y
      movc r2.y, r2.y, r11.w, r5.w
      lt r2.w, l(0.000000), r2.y
      if_nz r2.w
        mad r3.xy, r6.xyxx, r2.yyyy, r3.xyxx
        lt r6.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyxx
        lt r6.zw, r3.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t4.xyzw, s3, l(0.000000)
        mul r2.w, r2.w, l(3.999000)
        ftou r2.w, r2.w
        and r2.w, r2.w, l(1)
        ine r2.w, r2.w, l(0)
        sample_l_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t5.wxyz, s3, l(0.000000)
        mad r3.x, r3.x, l(255.000000), l(0.500000)
        ftou r3.x, r3.x
        and r3.x, r3.x, l(15)
        ine r3.x, r3.x, l(9)
        and r2.w, r2.w, r3.x
        and r3.xy, r6.zwzz, r6.xyxx
        and r3.x, r3.y, r3.x
        mul r1.w, r1.w, r2.y
        movc r1.w, r3.x, r1.w, l(-1.000000)
      else 
        mov r2.w, l(0)
        mov r1.w, l(-1.000000)
      endif 
      lt r2.y, l(0.000000), r1.w
      movc r2.w, r2.w, cb1[1].w, cb1[2].x
      lt r3.x, l(0.000000), r2.w
      or r0.y, r9.z, r0.y
      or r0.y, r9.w, r0.y
      or r0.y, r10.x, r0.y
      or r0.y, r10.y, r0.y
      and r0.y, r0.y, r3.x
      ine r3.xyz, r2.xxxx, l(7, 9, 5, 0)
      and r0.y, r0.y, r3.x
      and r0.y, r3.y, r0.y
      and r0.y, r3.z, r0.y
      if_nz r0.y
        min r0.y, r4.w, l(0.990000)
        add r0.y, -r0.y, l(1.000000)
        log r0.y, r0.y
        mul r0.y, r1.w, r0.y
        mul r0.y, r0.y, l(0.050000)
        exp r0.y, r0.y
        min r0.y, r0.y, l(1.000000)
        add r0.y, -r0.y, l(1.000000)
        mul r2.w, r0.y, r2.w
      endif 
      add r0.y, -r2.w, l(1.000000)
      mul r3.xy, r0.yyyy, r9.xyxx
      movc r9.xy, r2.yyyy, r3.xyxx, r9.xyxx
    endif 
    add r0.y, r9.x, r9.y
    lt r0.y, l(0.000000), r0.y
    if_nz r0.y
      sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r0.zwzz, t4.xyzw, s3, l(0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r0.zwzz, t6.xyzw, s3, l(0.000000)
      mul r0.yz, r0.zzwz, cb0[132].xxyx
      ftou r0.yz, r0.yyzy
      iadd r0.y, r0.z, r0.y
      ftou r0.z, cb0[153].x
      iadd r0.y, r0.z, r0.y
      and r0.y, r0.y, l(1)
      and r8.xyz, r8.xyzx, r3.wwww
      mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      dp3 r0.z, r3.xyzx, r3.xyzx
      rsq r0.z, r0.z
      mul r10.xzw, r0.zzzz, r3.xxyz
      movc r0.w, r10.y, l(0), r1.x
      mul r1.w, r1.y, l(0.080000)
      mad r11.xyz, -r1.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r6.xyzx
      mad r11.yzw, r0.wwww, r11.xxyz, r1.wwww
      or r1.w, r9.z, r10.y
      ne r2.y, l(0.000000), cb0[247].w
      lt r2.w, l(0.000000), cb0[247].w
      lt r3.w, l(0.000000), cb0[228].z
      and r2.w, r2.w, r3.w
      movc r9.zw, r0.yyyy, l(0,0,0,1.000000), l(0,0,1.000000,0)
      mul r12.x, r1.y, r9.z
      mul r12.yzw, r9.zzzz, r11.yyzw
      movc r13.xyz, r2.yyyy, l(1.000000,1.000000,1.000000,0), r6.xyzx
      movc r13.xyz, r2.wwww, r9.wwww, r13.xyzx
      mov r11.x, r1.y
      movc r12.xyzw, r2.wwww, r12.xyzw, r11.xyzw
      movc r6.xyz, r1.wwww, r13.xyzx, r6.xyzx
      movc r11.xyzw, r1.wwww, r12.xyzw, r11.xyzw
      mad r12.xyz, -r6.xyzx, r0.wwww, r6.xyzx
      mad r12.xyz, r12.xyzx, cb0[137].wwww, cb0[137].xyzx
      mad r11.yzw, r11.yyzw, cb0[138].wwww, cb0[138].xxyz
      mul r0.y, l(0.500000), cb1[7].w
      mad r13.xyz, -cb1[6].xyzx, r0.yyyy, r5.xyzx
      mad r5.xyz, cb1[6].xyzx, r0.yyyy, r5.xyzx
      max r0.y, r1.z, cb0[245].z
      lt r1.y, l(0.000000), cb1[7].w
      if_nz r1.y
        dp3 r1.z, r13.xyzx, r13.xyzx
        rsq r1.z, r1.z
        dp3 r2.y, r5.xyzx, r5.xyzx
        rsq r2.y, r2.y
        mul r2.w, r1.z, r2.y
        dp3 r3.w, r13.xyzx, r5.xyzx
        mul r3.w, r2.w, r3.w
        dp3 r5.w, r10.xzwx, r13.xyzx
        dp3 r6.w, r10.xzwx, r5.xyzx
        mul r1.z, r1.z, r5.w
        mad r1.z, r6.w, r2.y, r1.z
        mul r1.z, r1.z, l(0.500000)
        mad r2.y, r3.w, l(0.500000), r2.w
        add r2.y, r2.y, l(0.500000)
        div r2.y, r2.w, r2.y
      else 
        dp3 r2.w, r13.xyzx, r13.xyzx
        rsq r5.w, r2.w
        mul r14.xyz, r5.wwww, r13.xyzx
        dp3 r1.z, r10.xzwx, r14.xyzx
        add r2.w, r2.w, l(1.000000)
        div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
        mov r3.w, l(1.000000)
      endif 
      lt r2.w, l(0.000000), cb1[6].w
      mul r5.w, cb1[6].w, cb1[6].w
      mul_sat r5.w, r2.y, r5.w
      sqrt r5.w, r5.w
      lt r6.w, r1.z, r5.w
      max r7.w, r1.z, -r5.w
      add r7.w, r5.w, r7.w
      mul r7.w, r7.w, r7.w
      mul r5.w, r5.w, l(4.000000)
      div r5.w, r7.w, r5.w
      movc r5.w, r6.w, r5.w, r1.z
      movc_sat r1.z, r2.w, r5.w, r1.z
      movc r0.x, r0.x, r2.y, l(1.000000)
      dp3 r2.y, r4.xyzx, r10.xzwx
      add r2.y, r2.y, r2.y
      mad r14.xyz, r10.xzwx, -r2.yyyy, r4.xyzx
      add r5.xyz, -r13.xyzx, r5.xyzx
      dp3 r2.y, r14.xyzx, r5.xyzx
      mad r14.xyz, r14.xyzx, r2.yyyy, -r5.xyzx
      dp3 r2.w, r13.xyzx, r14.xyzx
      mul r2.y, r2.y, r2.y
      mad r2.y, cb1[7].w, cb1[7].w, -r2.y
      div_sat r2.y, r2.w, r2.y
      mad r5.xyz, r5.xyzx, r2.yyyy, r13.xyzx
      movc r5.xyz, r1.yyyy, r5.xyzx, r13.xyzx
      dp3 r1.y, r5.xyzx, r5.xyzx
      rsq r1.y, r1.y
      mul r5.xyz, r1.yyyy, r5.xyzx
      max r2.y, r0.y, cb0[245].z
      mul r2.w, r1.y, cb1[6].w
      mad r2.y, -r2.y, r2.y, l(1.000000)
      mul_sat r2.y, r2.y, r2.w
      mul_sat r1.y, r1.y, cb1[7].z
      switch r2.x
        case l(1)
        dp3 r2.x, r10.xzwx, r5.xyzx
        dp3 r2.w, r10.xzwx, -r4.xyzx
        dp3 r5.w, -r4.xyzx, r5.xyzx
        lt r6.w, l(0.000000), r2.y
        if_nz r6.w
          mad r7.w, -r2.y, r2.y, l(1.000000)
          sqrt r7.w, r7.w
          dp2 r8.w, r2.wwww, r2.xxxx
          add r9.z, -r5.w, r8.w
          ge r9.w, r9.z, r7.w
          if_nz r9.w
            mov r9.w, l(1.000000)
            mov r10.y, |r2.w|
          else 
            mad r12.w, -r9.z, r9.z, l(1.000000)
            rsq r12.w, r12.w
            mul r12.w, r2.y, r12.w
            mad r13.w, -r9.z, r2.x, r2.w
            mul r14.w, r12.w, r13.w
            dp2 r15.w, r2.wwww, r2.wwww
            add r15.w, r15.w, l(-1.000000)
            mad r9.z, -r9.z, r5.w, r15.w
            mul r15.w, r9.z, r12.w
            mad r16.x, -r2.x, r2.x, l(1.000000)
            mad r16.x, -r2.w, r2.w, r16.x
            mad r16.x, -r5.w, r5.w, r16.x
            mad_sat r8.w, r8.w, r5.w, r16.x
            sqrt r8.w, r8.w
            mul r8.w, r8.w, r12.w
            mul r16.x, r2.w, r8.w
            add r16.y, r16.x, r16.x
            mad r16.z, r2.x, r7.w, r2.w
            mad r13.w, r12.w, r13.w, r16.z
            mul r16.w, r5.w, r7.w
            mad r9.z, r12.w, r9.z, r16.w
            add r9.z, r9.z, l(1.000000)
            mul r12.w, r8.w, r9.z
            mul r16.w, r9.z, r13.w
            mul r17.x, r13.w, r16.y
            mul r16.x, r16.x, r13.w
            mul r17.y, r12.w, l(-0.500000)
            mad r16.x, r16.x, l(0.500000), r17.y
            mul r16.x, r16.x, r16.w
            mad r17.y, r12.w, l(-2.000000), r17.x
            mul r12.w, r12.w, r12.w
            mad r12.w, r17.x, r17.y, r12.w
            mul r17.x, r9.z, r9.z
            mad r9.z, r5.w, r7.w, r9.z
            mad r9.z, r9.z, l(-0.500000), l(-0.500000)
            mul r16.z, r16.z, r17.x
            mad r9.z, r16.w, r9.z, r16.z
            mad r9.z, r13.w, r9.z, r12.w
            add r12.w, r16.x, r16.x
            mul r13.w, r9.z, r9.z
            mad r13.w, r16.x, r16.x, r13.w
            div r12.w, r12.w, r13.w
            mul r9.z, r9.z, r12.w
            mad r12.w, -r12.w, r16.x, l(1.000000)
            mul r13.w, r14.w, r12.w
            mad r8.w, r9.z, r8.w, r13.w
            mul r12.w, r15.w, r12.w
            mad r9.z, r9.z, r16.y, r12.w
            mad r8.w, r2.x, r7.w, r8.w
            mad r7.w, r5.w, r7.w, r9.z
            mad r9.z, r7.w, l(2.000000), l(2.000000)
            rsq r9.z, r9.z
            add r8.w, r2.w, r8.w
            mul_sat r9.w, r9.z, r8.w
            mad_sat r10.y, r9.z, r7.w, r9.z
          endif 
        else 
          mad r7.w, r5.w, l(2.000000), l(2.000000)
          rsq r7.w, r7.w
          add r2.x, r2.w, r2.x
          mul_sat r9.w, r7.w, r2.x
          mad_sat r10.y, r7.w, r5.w, r7.w
        endif 
        add r2.x, |r2.w|, l(0.000010)
        min r2.x, r2.x, l(1.000000)
        mul r16.xyz, r12.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
        mul r2.w, r1.z, r0.x
        mul r13.xyz, r2.wwww, r16.xyzx
        mul r5.w, r0.y, r0.y
        mul r7.w, r5.w, r5.w
        lt r8.w, l(0.000000), r1.y
        mul r9.z, r1.y, r1.y
        mad r12.w, r10.y, l(3.600000), l(0.400000)
        div r9.z, r9.z, r12.w
        mad r5.w, r5.w, r5.w, r9.z
        min r5.w, r5.w, l(1.000000)
        movc r16.y, r8.w, r5.w, r7.w
        mul r5.w, r2.y, l(0.250000)
        ishr r7.w, r16.y, l(1)
        iadd r7.w, r7.w, l(0x1fbd1df5)
        mad r7.w, r7.w, l(3.000000), r2.y
        mul r5.w, r5.w, r7.w
        add r7.w, r10.y, l(0.001000)
        div r5.w, r5.w, r7.w
        add r17.y, r5.w, r16.y
        div r17.x, r16.y, r17.y
        mov r16.x, l(1.000000)
        movc r16.xz, r6.wwww, r17.xxyx, r16.xxyx
        lt r5.w, r3.w, l(1.000000)
        add r6.w, -r3.w, l(1.000100)
        add r8.w, r3.w, l(1.000000)
        div r6.w, r6.w, r8.w
        sqrt r6.w, r6.w
        mul r8.w, r6.w, l(0.250000)
        ishr r9.z, r16.z, l(1)
        iadd r9.z, r9.z, l(0x1fbd1df5)
        mad r6.w, r9.z, l(3.000000), r6.w
        mul r6.w, r6.w, r8.w
        div r6.w, r6.w, r7.w
        add r6.w, r6.w, r16.z
        div r6.w, r16.z, r6.w
        sqrt r6.w, r6.w
        mul r6.w, r6.w, r16.x
        movc r5.w, r5.w, r6.w, r16.x
        mad r6.w, r9.w, r16.y, -r9.w
        mad r6.w, r6.w, r9.w, l(1.000000)
        mul r6.w, r6.w, r6.w
        mul r6.w, r6.w, l(3.141593)
        div r6.w, r16.y, r6.w
        mul r5.w, r5.w, r6.w
        sqrt r6.w, r16.y
        add r7.w, -r6.w, l(1.000000)
        mad r8.w, r2.x, r7.w, r6.w
        mad r6.w, r1.z, r7.w, r6.w
        mul r7.w, r1.z, r8.w
        mad r2.x, r2.x, r6.w, r7.w
        div r2.x, l(0.500000), r2.x
        add r6.w, -r10.y, l(1.000000)
        mul r7.w, r6.w, r6.w
        mul r7.w, r7.w, r7.w
        mul r8.w, r6.w, r7.w
        mul_sat r9.z, r11.z, l(50.000000)
        mad r6.w, -r7.w, r6.w, l(1.000000)
        mul r16.xyz, r6.wwww, r11.yzwy
        mad r16.xyz, r9.zzzz, r8.wwww, r16.xyzx
        mul r2.x, r2.x, r5.w
        mul r16.xyz, r2.xxxx, r16.xyzx
        mul r14.xyz, r2.wwww, r16.xyzx
        mov r15.xyz, l(0,0,0,0)
        break 
        case l(10)
        dp3 r2.x, r10.xzwx, r5.xyzx
        dp3 r2.w, r10.xzwx, -r4.xyzx
        dp3 r5.w, -r4.xyzx, r5.xyzx
        lt r6.w, l(0.000000), r2.y
        if_nz r6.w
          mad r7.w, -r2.y, r2.y, l(1.000000)
          sqrt r7.w, r7.w
          dp2 r8.w, r2.wwww, r2.xxxx
          add r9.z, -r5.w, r8.w
          ge r9.w, r9.z, r7.w
          if_nz r9.w
            mov r9.w, l(1.000000)
            mov r10.y, |r2.w|
          else 
            mad r12.w, -r9.z, r9.z, l(1.000000)
            rsq r12.w, r12.w
            mul r12.w, r2.y, r12.w
            mad r13.w, -r9.z, r2.x, r2.w
            mul r14.w, r12.w, r13.w
            dp2 r15.w, r2.wwww, r2.wwww
            add r15.w, r15.w, l(-1.000000)
            mad r9.z, -r9.z, r5.w, r15.w
            mul r15.w, r9.z, r12.w
            mad r16.x, -r2.x, r2.x, l(1.000000)
            mad r16.x, -r2.w, r2.w, r16.x
            mad r16.x, -r5.w, r5.w, r16.x
            mad_sat r8.w, r8.w, r5.w, r16.x
            sqrt r8.w, r8.w
            mul r8.w, r8.w, r12.w
            mul r16.x, r2.w, r8.w
            add r16.y, r16.x, r16.x
            mad r16.z, r2.x, r7.w, r2.w
            mad r13.w, r12.w, r13.w, r16.z
            mul r16.w, r5.w, r7.w
            mad r9.z, r12.w, r9.z, r16.w
            add r9.z, r9.z, l(1.000000)
            mul r12.w, r8.w, r9.z
            mul r16.w, r9.z, r13.w
            mul r17.x, r13.w, r16.y
            mul r16.x, r16.x, r13.w
            mul r17.y, r12.w, l(-0.500000)
            mad r16.x, r16.x, l(0.500000), r17.y
            mul r16.x, r16.x, r16.w
            mad r17.y, r12.w, l(-2.000000), r17.x
            mul r12.w, r12.w, r12.w
            mad r12.w, r17.x, r17.y, r12.w
            mul r17.x, r9.z, r9.z
            mad r9.z, r5.w, r7.w, r9.z
            mad r9.z, r9.z, l(-0.500000), l(-0.500000)
            mul r16.z, r16.z, r17.x
            mad r9.z, r16.w, r9.z, r16.z
            mad r9.z, r13.w, r9.z, r12.w
            add r12.w, r16.x, r16.x
            mul r13.w, r9.z, r9.z
            mad r13.w, r16.x, r16.x, r13.w
            div r12.w, r12.w, r13.w
            mul r9.z, r9.z, r12.w
            mad r12.w, -r12.w, r16.x, l(1.000000)
            mul r13.w, r14.w, r12.w
            mad r8.w, r9.z, r8.w, r13.w
            mul r12.w, r15.w, r12.w
            mad r9.z, r9.z, r16.y, r12.w
            mad r8.w, r2.x, r7.w, r8.w
            mad r7.w, r5.w, r7.w, r9.z
            mad r9.z, r7.w, l(2.000000), l(2.000000)
            rsq r9.z, r9.z
            add r8.w, r2.w, r8.w
            mul_sat r9.w, r9.z, r8.w
            mad_sat r10.y, r9.z, r7.w, r9.z
          endif 
        else 
          mad r7.w, r5.w, l(2.000000), l(2.000000)
          rsq r7.w, r7.w
          add r2.x, r2.w, r2.x
          mul_sat r9.w, r7.w, r2.x
          mad_sat r10.y, r7.w, r5.w, r7.w
        endif 
        add r2.x, |r2.w|, l(0.000010)
        min r2.x, r2.x, l(1.000000)
        mul r16.xyz, r12.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
        mul r2.w, r1.z, r0.x
        mul r13.xyz, r2.wwww, r16.xyzx
        mul r5.w, r0.y, r0.y
        mul r7.w, r5.w, r5.w
        lt r8.w, l(0.000000), r1.y
        mul r9.z, r1.y, r1.y
        mad r12.w, r10.y, l(3.600000), l(0.400000)
        div r9.z, r9.z, r12.w
        mad r5.w, r5.w, r5.w, r9.z
        min r5.w, r5.w, l(1.000000)
        movc r16.y, r8.w, r5.w, r7.w
        mul r5.w, r2.y, l(0.250000)
        ishr r7.w, r16.y, l(1)
        iadd r7.w, r7.w, l(0x1fbd1df5)
        mad r7.w, r7.w, l(3.000000), r2.y
        mul r5.w, r5.w, r7.w
        add r7.w, r10.y, l(0.001000)
        div r5.w, r5.w, r7.w
        add r17.y, r5.w, r16.y
        div r17.x, r16.y, r17.y
        mov r16.x, l(1.000000)
        movc r16.xz, r6.wwww, r17.xxyx, r16.xxyx
        lt r5.w, r3.w, l(1.000000)
        add r6.w, -r3.w, l(1.000100)
        add r8.w, r3.w, l(1.000000)
        div r6.w, r6.w, r8.w
        sqrt r6.w, r6.w
        mul r8.w, r6.w, l(0.250000)
        ishr r9.z, r16.z, l(1)
        iadd r9.z, r9.z, l(0x1fbd1df5)
        mad r6.w, r9.z, l(3.000000), r6.w
        mul r6.w, r6.w, r8.w
        div r6.w, r6.w, r7.w
        add r6.w, r6.w, r16.z
        div r6.w, r16.z, r6.w
        sqrt r6.w, r6.w
        mul r6.w, r6.w, r16.x
        movc r5.w, r5.w, r6.w, r16.x
        mad r6.w, r9.w, r16.y, -r9.w
        mad r6.w, r6.w, r9.w, l(1.000000)
        mul r6.w, r6.w, r6.w
        mul r6.w, r6.w, l(3.141593)
        div r6.w, r16.y, r6.w
        mul r5.w, r5.w, r6.w
        sqrt r6.w, r16.y
        add r7.w, -r6.w, l(1.000000)
        mad r8.w, r2.x, r7.w, r6.w
        mad r6.w, r1.z, r7.w, r6.w
        mul r7.w, r1.z, r8.w
        mad r2.x, r2.x, r6.w, r7.w
        div r2.x, l(0.500000), r2.x
        add r6.w, -r10.y, l(1.000000)
        mul r7.w, r6.w, r6.w
        mul r7.w, r7.w, r7.w
        mul r8.w, r6.w, r7.w
        mul_sat r9.z, r11.z, l(50.000000)
        mad r6.w, -r7.w, r6.w, l(1.000000)
        mul r16.xyz, r6.wwww, r11.yzwy
        mad r16.xyz, r9.zzzz, r8.wwww, r16.xyzx
        mul r2.x, r2.x, r5.w
        mul r16.xyz, r2.xxxx, r16.xyzx
        mul r14.xyz, r2.wwww, r16.xyzx
        mov r15.xyz, l(0,0,0,0)
        break 
        case l(11)
        dp3 r2.x, r10.xzwx, r5.xyzx
        dp3 r2.w, r10.xzwx, -r4.xyzx
        dp3 r5.w, -r4.xyzx, r5.xyzx
        lt r6.w, l(0.000000), r2.y
        if_nz r6.w
          mad r7.w, -r2.y, r2.y, l(1.000000)
          sqrt r7.w, r7.w
          dp2 r8.w, r2.wwww, r2.xxxx
          add r9.z, -r5.w, r8.w
          ge r9.w, r9.z, r7.w
          if_nz r9.w
            mov r9.w, l(1.000000)
            mov r10.y, |r2.w|
          else 
            mad r12.w, -r9.z, r9.z, l(1.000000)
            rsq r12.w, r12.w
            mul r12.w, r2.y, r12.w
            mad r13.w, -r9.z, r2.x, r2.w
            mul r14.w, r12.w, r13.w
            dp2 r15.w, r2.wwww, r2.wwww
            add r15.w, r15.w, l(-1.000000)
            mad r9.z, -r9.z, r5.w, r15.w
            mul r15.w, r9.z, r12.w
            mad r16.x, -r2.x, r2.x, l(1.000000)
            mad r16.x, -r2.w, r2.w, r16.x
            mad r16.x, -r5.w, r5.w, r16.x
            mad_sat r8.w, r8.w, r5.w, r16.x
            sqrt r8.w, r8.w
            mul r8.w, r8.w, r12.w
            mul r16.x, r2.w, r8.w
            add r16.y, r16.x, r16.x
            mad r16.z, r2.x, r7.w, r2.w
            mad r13.w, r12.w, r13.w, r16.z
            mul r16.w, r5.w, r7.w
            mad r9.z, r12.w, r9.z, r16.w
            add r9.z, r9.z, l(1.000000)
            mul r12.w, r8.w, r9.z
            mul r16.w, r9.z, r13.w
            mul r17.x, r13.w, r16.y
            mul r16.x, r16.x, r13.w
            mul r17.y, r12.w, l(-0.500000)
            mad r16.x, r16.x, l(0.500000), r17.y
            mul r16.x, r16.x, r16.w
            mad r17.y, r12.w, l(-2.000000), r17.x
            mul r12.w, r12.w, r12.w
            mad r12.w, r17.x, r17.y, r12.w
            mul r17.x, r9.z, r9.z
            mad r9.z, r5.w, r7.w, r9.z
            mad r9.z, r9.z, l(-0.500000), l(-0.500000)
            mul r16.z, r16.z, r17.x
            mad r9.z, r16.w, r9.z, r16.z
            mad r9.z, r13.w, r9.z, r12.w
            add r12.w, r16.x, r16.x
            mul r13.w, r9.z, r9.z
            mad r13.w, r16.x, r16.x, r13.w
            div r12.w, r12.w, r13.w
            mul r9.z, r9.z, r12.w
            mad r12.w, -r12.w, r16.x, l(1.000000)
            mul r13.w, r14.w, r12.w
            mad r8.w, r9.z, r8.w, r13.w
            mul r12.w, r15.w, r12.w
            mad r9.z, r9.z, r16.y, r12.w
            mad r8.w, r2.x, r7.w, r8.w
            mad r7.w, r5.w, r7.w, r9.z
            mad r9.z, r7.w, l(2.000000), l(2.000000)
            rsq r9.z, r9.z
            add r8.w, r2.w, r8.w
            mul_sat r9.w, r9.z, r8.w
            mad_sat r10.y, r9.z, r7.w, r9.z
          endif 
        else 
          mad r7.w, r5.w, l(2.000000), l(2.000000)
          rsq r7.w, r7.w
          add r2.x, r2.w, r2.x
          mul_sat r9.w, r7.w, r2.x
          mad_sat r10.y, r7.w, r5.w, r7.w
        endif 
        add r2.x, |r2.w|, l(0.000010)
        min r2.x, r2.x, l(1.000000)
        mul r16.xyz, r12.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
        mul r2.w, r1.z, r0.x
        mul r13.xyz, r2.wwww, r16.xyzx
        mul r5.w, r0.y, r0.y
        mul r7.w, r5.w, r5.w
        lt r8.w, l(0.000000), r1.y
        mul r9.z, r1.y, r1.y
        mad r12.w, r10.y, l(3.600000), l(0.400000)
        div r9.z, r9.z, r12.w
        mad r5.w, r5.w, r5.w, r9.z
        min r5.w, r5.w, l(1.000000)
        movc r16.y, r8.w, r5.w, r7.w
        mul r5.w, r2.y, l(0.250000)
        ishr r7.w, r16.y, l(1)
        iadd r7.w, r7.w, l(0x1fbd1df5)
        mad r7.w, r7.w, l(3.000000), r2.y
        mul r5.w, r5.w, r7.w
        add r7.w, r10.y, l(0.001000)
        div r5.w, r5.w, r7.w
        add r17.y, r5.w, r16.y
        div r17.x, r16.y, r17.y
        mov r16.x, l(1.000000)
        movc r16.xz, r6.wwww, r17.xxyx, r16.xxyx
        lt r5.w, r3.w, l(1.000000)
        add r6.w, -r3.w, l(1.000100)
        add r8.w, r3.w, l(1.000000)
        div r6.w, r6.w, r8.w
        sqrt r6.w, r6.w
        mul r8.w, r6.w, l(0.250000)
        ishr r9.z, r16.z, l(1)
        iadd r9.z, r9.z, l(0x1fbd1df5)
        mad r6.w, r9.z, l(3.000000), r6.w
        mul r6.w, r6.w, r8.w
        div r6.w, r6.w, r7.w
        add r6.w, r6.w, r16.z
        div r6.w, r16.z, r6.w
        sqrt r6.w, r6.w
        mul r6.w, r6.w, r16.x
        movc r5.w, r5.w, r6.w, r16.x
        mad r6.w, r9.w, r16.y, -r9.w
        mad r6.w, r6.w, r9.w, l(1.000000)
        mul r6.w, r6.w, r6.w
        mul r6.w, r6.w, l(3.141593)
        div r6.w, r16.y, r6.w
        mul r5.w, r5.w, r6.w
        sqrt r6.w, r16.y
        add r7.w, -r6.w, l(1.000000)
        mad r8.w, r2.x, r7.w, r6.w
        mad r6.w, r1.z, r7.w, r6.w
        mul r7.w, r1.z, r8.w
        mad r2.x, r2.x, r6.w, r7.w
        div r2.x, l(0.500000), r2.x
        add r6.w, -r10.y, l(1.000000)
        mul r7.w, r6.w, r6.w
        mul r7.w, r7.w, r7.w
        mul r8.w, r6.w, r7.w
        mul_sat r9.z, r11.z, l(50.000000)
        mad r6.w, -r7.w, r6.w, l(1.000000)
        mul r16.xyz, r6.wwww, r11.yzwy
        mad r16.xyz, r9.zzzz, r8.wwww, r16.xyzx
        mul r2.x, r2.x, r5.w
        mul r16.xyz, r2.xxxx, r16.xyzx
        mul r14.xyz, r2.wwww, r16.xyzx
        mov r15.xyz, l(0,0,0,0)
        break 
        case l(2)
        dp3 r2.x, r10.xzwx, r5.xyzx
        dp3 r2.w, r10.xzwx, -r4.xyzx
        dp3 r5.w, -r4.xyzx, r5.xyzx
        lt r6.w, l(0.000000), r2.y
        if_nz r6.w
          mad r7.w, -r2.y, r2.y, l(1.000000)
          sqrt r7.w, r7.w
          dp2 r8.w, r2.wwww, r2.xxxx
          add r9.z, -r5.w, r8.w
          ge r9.w, r9.z, r7.w
          if_nz r9.w
            mov r9.w, l(1.000000)
            mov r10.y, |r2.w|
          else 
            mad r12.w, -r9.z, r9.z, l(1.000000)
            rsq r12.w, r12.w
            mul r12.w, r2.y, r12.w
            mad r13.w, -r9.z, r2.x, r2.w
            dp2 r14.w, r2.wwww, r2.wwww
            add r14.w, r14.w, l(-1.000000)
            mad r9.z, -r9.z, r5.w, r14.w
            mad r14.w, -r2.x, r2.x, l(1.000000)
            mad r14.w, -r2.w, r2.w, r14.w
            mad r14.w, -r5.w, r5.w, r14.w
            mad_sat r8.w, r8.w, r5.w, r14.w
            sqrt r8.w, r8.w
            mul r8.w, r8.w, r12.w
            mul r14.w, r2.w, r8.w
            add r15.w, r14.w, r14.w
            mad r16.x, r2.x, r7.w, r2.w
            mul r16.y, r12.w, r13.w
            mad r13.w, r12.w, r13.w, r16.x
            mad r16.z, r5.w, r7.w, l(1.000000)
            mul r16.w, r9.z, r12.w
            mad r9.z, r12.w, r9.z, r16.z
            mul r12.w, r8.w, r9.z
            mul r16.z, r9.z, r13.w
            mul r14.w, r14.w, r13.w
            mul r17.x, r12.w, l(-0.500000)
            mad r14.w, r14.w, l(0.500000), r17.x
            mul r14.w, r14.w, r16.z
            mul r17.x, r9.z, r9.z
            mad r9.z, r5.w, r7.w, r9.z
            mad r9.z, r9.z, l(-0.500000), l(-0.500000)
            mul r16.x, r16.x, r17.x
            mad r9.z, r16.z, r9.z, r16.x
            mul r16.x, r13.w, r15.w
            mad r16.z, r12.w, l(-2.000000), r16.x
            mul r12.w, r12.w, r12.w
            mad r12.w, r16.x, r16.z, r12.w
            mad r9.z, r13.w, r9.z, r12.w
            add r12.w, r14.w, r14.w
            mul r13.w, r9.z, r9.z
            mad r13.w, r14.w, r14.w, r13.w
            div r12.w, r12.w, r13.w
            mul r9.z, r9.z, r12.w
            mad r12.w, -r12.w, r14.w, l(1.000000)
            mul r13.w, r16.w, r12.w
            mad r13.w, r9.z, r15.w, r13.w
            mad r13.w, r5.w, r7.w, r13.w
            mad r14.w, r13.w, l(2.000000), l(2.000000)
            rsq r14.w, r14.w
            mul r12.w, r16.y, r12.w
            mad r8.w, r9.z, r8.w, r12.w
            mad r7.w, r2.x, r7.w, r8.w
            add r7.w, r2.w, r7.w
            mul_sat r9.w, r14.w, r7.w
            mad_sat r10.y, r14.w, r13.w, r14.w
          endif 
        else 
          mad r7.w, r5.w, l(2.000000), l(2.000000)
          rsq r7.w, r7.w
          add r8.w, r2.w, r2.x
          mul_sat r9.w, r7.w, r8.w
          mad_sat r10.y, r7.w, r5.w, r7.w
        endif 
        add r2.w, |r2.w|, l(0.000010)
        min r2.w, r2.w, l(1.000000)
        mul r5.w, r1.z, r0.x
        mul r7.w, r0.y, r0.y
        lt r8.w, l(0.000000), r1.y
        mul r9.z, r1.y, r1.y
        mad r12.w, r10.y, l(3.600000), l(0.400000)
        div r9.z, r9.z, r12.w
        mul r12.w, r7.w, r7.w
        mad r7.w, r7.w, r7.w, r9.z
        min r7.w, r7.w, l(1.000000)
        movc r16.y, r8.w, r7.w, r12.w
        mul r7.w, r2.y, l(0.250000)
        ishr r8.w, r16.y, l(1)
        iadd r8.w, r8.w, l(0x1fbd1df5)
        mad r8.w, r8.w, l(3.000000), r2.y
        mul r7.w, r7.w, r8.w
        add r8.w, r10.y, l(0.001000)
        div r7.w, r7.w, r8.w
        add r17.y, r7.w, r16.y
        div r17.x, r16.y, r17.y
        mov r16.x, l(1.000000)
        movc r16.xz, r6.wwww, r17.xxyx, r16.xxyx
        lt r6.w, r3.w, l(1.000000)
        add r7.w, -r3.w, l(1.000100)
        add r9.z, r3.w, l(1.000000)
        div r7.w, r7.w, r9.z
        sqrt r7.w, r7.w
        mul r9.z, r7.w, l(0.250000)
        ishr r12.w, r16.z, l(1)
        iadd r12.w, r12.w, l(0x1fbd1df5)
        mad r7.w, r12.w, l(3.000000), r7.w
        mul r7.w, r7.w, r9.z
        div r7.w, r7.w, r8.w
        add r7.w, r7.w, r16.z
        div r7.w, r16.z, r7.w
        sqrt r7.w, r7.w
        mul r7.w, r7.w, r16.x
        movc r6.w, r6.w, r7.w, r16.x
        mad r7.w, r9.w, r16.y, -r9.w
        mad r7.w, r7.w, r9.w, l(1.000000)
        sqrt r8.w, r16.y
        add r9.z, -r8.w, l(1.000000)
        add r9.w, -r10.y, l(1.000000)
        mul r10.y, r9.w, r9.w
        mul r10.y, r10.y, r10.y
        mul_sat r12.w, r11.z, l(50.000000)
        mul r13.w, r9.w, r10.y
        mad r9.w, -r10.y, r9.w, l(1.000000)
        mul r16.xzw, r9.wwww, r11.yyzw
        mad r16.xzw, r12.wwww, r13.wwww, r16.xxzw
        mul r7.w, r7.w, r7.w
        mul r7.w, r7.w, l(3.141593)
        div r7.w, r16.y, r7.w
        mul r6.w, r6.w, r7.w
        mad r7.w, r2.w, r9.z, r8.w
        mad r8.w, r1.z, r9.z, r8.w
        mul r7.w, r1.z, r7.w
        mad r2.w, r2.w, r8.w, r7.w
        div r2.w, l(0.500000), r2.w
        mul r2.w, r2.w, r6.w
        mul r16.xyz, r2.wwww, r16.xzwx
        mul r14.xyz, r5.wwww, r16.xyzx
        mul r16.xyz, r8.xyzx, r8.xyzx
        max r17.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        min r17.xyz, r17.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        log r17.xyz, r17.xyzx
        mul r17.xyz, r17.xyzx, l(0.693147, 0.693147, 0.693147, 0.000000)
        max r2.w, l(0.000000), cb0[284].w
        div r17.xyz, -r17.xyzx, r2.wwww
        mul r17.xyz, r17.xyzx, l(-1.442695, -1.442695, -1.442695, 0.000000)
        exp r17.xyz, r17.xyzx
        lt r2.w, r17.y, r17.z
        max r6.w, r17.z, r17.y
        min r7.w, r17.y, r17.z
        and r8.w, r2.w, l(0xbf800000)
        movc r2.w, r2.w, l(0.666667), l(-0.333333)
        lt r9.z, r17.x, r6.w
        max r9.w, r6.w, r17.x
        movc r2.w, r9.z, r2.w, r8.w
        min r6.w, r17.x, r6.w
        min r8.w, r7.w, r6.w
        add r8.w, -r8.w, r9.w
        add r6.w, -r7.w, r6.w
        mad r7.w, r8.w, l(6.000000), l(0.000000)
        div r6.w, r6.w, r7.w
        add r2.w, r2.w, r6.w
        lt r6.w, r16.y, r16.z
        movc r6.w, r6.w, r16.z, r16.y
        lt r7.w, r16.x, r6.w
        mul r16.yzw, r5.wwww, r12.xxyz
        mul r13.xyz, r16.yzwy, l(0.318310, 0.318310, 0.318310, 0.000000)
        mad_sat r2.x, r2.x, l(0.666667), l(0.333333)
        log r2.x, r2.x
        mul r2.x, r2.x, l(1.500000)
        exp r2.x, r2.x
        mad r2.x, r2.x, l(1.666667), l(-1.000000)
        mad r2.x, r4.w, r2.x, l(1.000000)
        mul r5.w, r2.x, l(0.159155)
        dp3_sat r9.z, r5.xyzx, r4.xyzx
        log r9.z, r9.z
        mul r9.z, r9.z, l(12.000000)
        exp r9.z, r9.z
        mad r10.y, r4.w, l(-2.900000), l(3.000000)
        mul r9.z, r9.z, r10.y
        mad r2.x, -r2.x, l(0.159155), l(1.000000)
        mad r2.x, r9.z, r2.x, r5.w
        mul r2.x, r0.x, r2.x
        mad r16.yzw, |r2.wwww|, l(0.000000, 6.000000, 6.000000, 6.000000), l(0.000000, -3.000000, -2.000000, -4.000000)
        mad_sat r16.yzw, |r16.yyzw|, l(0.000000, 1.000000, -1.000000, -1.000000), l(0.000000, -1.000000, 2.000000, 2.000000)
        add r16.yzw, r16.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
        add r2.w, r9.w, l(0.000000)
        div r2.w, r8.w, r2.w
        mad r16.yzw, r16.yyzw, r2.wwww, l(0.000000, 1.000000, 1.000000, 1.000000)
        movc r2.w, r7.w, r6.w, r16.x
        mul r16.xyz, r2.wwww, r16.yzwy
        mad r17.xyz, r8.xyzx, r8.xyzx, -r16.xyzx
        mad r16.xyz, r2.zzzz, r17.xyzx, r16.xyzx
        mul r15.xyz, r2.xxxx, r16.xyzx
        break 
        case l(3)
        dp3 r2.x, r10.xzwx, r5.xyzx
        dp3 r2.w, r10.xzwx, -r4.xyzx
        dp3 r5.w, -r4.xyzx, r5.xyzx
        lt r6.w, l(0.000000), r2.y
        if_nz r6.w
          mad r7.w, -r2.y, r2.y, l(1.000000)
          sqrt r7.w, r7.w
          dp2 r8.w, r2.wwww, r2.xxxx
          add r9.z, -r5.w, r8.w
          ge r9.w, r9.z, r7.w
          if_nz r9.w
            mov r9.w, l(1.000000)
            mov r10.y, |r2.w|
          else 
            mad r12.w, -r9.z, r9.z, l(1.000000)
            rsq r12.w, r12.w
            mul r12.w, r2.y, r12.w
            mad r13.w, -r9.z, r2.x, r2.w
            dp2 r14.w, r2.wwww, r2.wwww
            add r14.w, r14.w, l(-1.000000)
            mad r9.z, -r9.z, r5.w, r14.w
            mad r14.w, -r2.x, r2.x, l(1.000000)
            mad r14.w, -r2.w, r2.w, r14.w
            mad r14.w, -r5.w, r5.w, r14.w
            mad_sat r8.w, r8.w, r5.w, r14.w
            sqrt r8.w, r8.w
            mul r8.w, r8.w, r12.w
            mul r14.w, r2.w, r8.w
            add r15.w, r14.w, r14.w
            mad r16.x, r2.x, r7.w, r2.w
            mul r16.y, r12.w, r13.w
            mad r13.w, r12.w, r13.w, r16.x
            mad r16.z, r5.w, r7.w, l(1.000000)
            mul r16.w, r9.z, r12.w
            mad r9.z, r12.w, r9.z, r16.z
            mul r12.w, r8.w, r9.z
            mul r16.z, r9.z, r13.w
            mul r14.w, r14.w, r13.w
            mul r17.x, r12.w, l(-0.500000)
            mad r14.w, r14.w, l(0.500000), r17.x
            mul r14.w, r14.w, r16.z
            mul r17.x, r9.z, r9.z
            mad r9.z, r5.w, r7.w, r9.z
            mad r9.z, r9.z, l(-0.500000), l(-0.500000)
            mul r16.x, r16.x, r17.x
            mad r9.z, r16.z, r9.z, r16.x
            mul r16.x, r13.w, r15.w
            mad r16.z, r12.w, l(-2.000000), r16.x
            mul r12.w, r12.w, r12.w
            mad r12.w, r16.x, r16.z, r12.w
            mad r9.z, r13.w, r9.z, r12.w
            add r12.w, r14.w, r14.w
            mul r13.w, r9.z, r9.z
            mad r13.w, r14.w, r14.w, r13.w
            div r12.w, r12.w, r13.w
            mul r9.z, r9.z, r12.w
            mad r12.w, -r12.w, r14.w, l(1.000000)
            mul r13.w, r16.w, r12.w
            mad r13.w, r9.z, r15.w, r13.w
            mad r13.w, r5.w, r7.w, r13.w
            mad r14.w, r13.w, l(2.000000), l(2.000000)
            rsq r14.w, r14.w
            mul r12.w, r16.y, r12.w
            mad r8.w, r9.z, r8.w, r12.w
            mad r7.w, r2.x, r7.w, r8.w
            add r7.w, r2.w, r7.w
            mul_sat r9.w, r14.w, r7.w
            mad_sat r10.y, r14.w, r13.w, r14.w
          endif 
        else 
          mad r7.w, r5.w, l(2.000000), l(2.000000)
          rsq r7.w, r7.w
          add r8.w, r2.w, r2.x
          mul_sat r9.w, r7.w, r8.w
          mad_sat r10.y, r7.w, r5.w, r7.w
        endif 
        add r2.w, |r2.w|, l(0.000010)
        min r2.w, r2.w, l(1.000000)
        mul r5.w, r1.z, r0.x
        mul r7.w, r0.y, r0.y
        lt r8.w, l(0.000000), r1.y
        mul r9.z, r1.y, r1.y
        mad r12.w, r10.y, l(3.600000), l(0.400000)
        div r9.z, r9.z, r12.w
        mul r12.w, r7.w, r7.w
        mad r7.w, r7.w, r7.w, r9.z
        min r7.w, r7.w, l(1.000000)
        movc r16.y, r8.w, r7.w, r12.w
        mul r7.w, r2.y, l(0.250000)
        ishr r8.w, r16.y, l(1)
        iadd r8.w, r8.w, l(0x1fbd1df5)
        mad r8.w, r8.w, l(3.000000), r2.y
        mul r7.w, r7.w, r8.w
        add r8.w, r10.y, l(0.001000)
        div r7.w, r7.w, r8.w
        add r17.y, r7.w, r16.y
        div r17.x, r16.y, r17.y
        mov r16.x, l(1.000000)
        movc r16.xz, r6.wwww, r17.xxyx, r16.xxyx
        lt r6.w, r3.w, l(1.000000)
        add r7.w, -r3.w, l(1.000100)
        add r9.z, r3.w, l(1.000000)
        div r7.w, r7.w, r9.z
        sqrt r7.w, r7.w
        mul r9.z, r7.w, l(0.250000)
        ishr r12.w, r16.z, l(1)
        iadd r12.w, r12.w, l(0x1fbd1df5)
        mad r7.w, r12.w, l(3.000000), r7.w
        mul r7.w, r7.w, r9.z
        div r7.w, r7.w, r8.w
        add r7.w, r7.w, r16.z
        div r7.w, r16.z, r7.w
        sqrt r7.w, r7.w
        mul r7.w, r7.w, r16.x
        movc r6.w, r6.w, r7.w, r16.x
        mad r7.w, r9.w, r16.y, -r9.w
        mad r7.w, r7.w, r9.w, l(1.000000)
        sqrt r8.w, r16.y
        add r9.z, -r8.w, l(1.000000)
        add r9.w, -r10.y, l(1.000000)
        mul r10.y, r9.w, r9.w
        mul r10.y, r10.y, r10.y
        mul_sat r12.w, r11.z, l(50.000000)
        mul r13.w, r9.w, r10.y
        mad r9.w, -r10.y, r9.w, l(1.000000)
        mul r16.xzw, r9.wwww, r11.yyzw
        mad r16.xzw, r12.wwww, r13.wwww, r16.xxzw
        mul r7.w, r7.w, r7.w
        mul r7.w, r7.w, l(3.141593)
        div r7.w, r16.y, r7.w
        mul r6.w, r6.w, r7.w
        mad r7.w, r2.w, r9.z, r8.w
        mad r8.w, r1.z, r9.z, r8.w
        mul r7.w, r1.z, r7.w
        mad r2.w, r2.w, r8.w, r7.w
        div r2.w, l(0.500000), r2.w
        mul r2.w, r2.w, r6.w
        mul r16.xyz, r2.wwww, r16.xzwx
        mul r14.xyz, r5.wwww, r16.xyzx
        mul r16.xyz, r5.wwww, r12.xyzx
        mul r13.xyz, r16.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
        mad_sat r16.x, r2.x, l(0.500000), l(0.500000)
        add r16.y, -r4.w, l(1.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r16.xyz, r16.xyxx, t0.xyzw, s0, l(0.000000)
        mul r16.xyz, r0.xxxx, r16.xyzx
        mul r17.xyz, r8.xyzx, r8.xyzx
        mul r15.xyz, r16.xyzx, r17.xyzx
        break 
        case l(4)
        max r2.x, r8.y, l(0.020000)
        dp3 r16.x, r10.xzwx, r5.xyzx
        dp3 r2.w, r10.xzwx, -r4.xyzx
        dp3 r5.w, -r4.xyzx, r5.xyzx
        mad r6.w, -r0.y, r0.y, l(1.000000)
        mul r7.w, r2.x, r2.x
        lt r8.w, l(0.000000), r6.w
        mad r2.x, -r2.x, r2.x, l(1.000000)
        div r2.x, r2.x, r6.w
        and r2.x, r2.x, r8.w
        mul_sat r2.x, r2.x, r2.y
        lt r6.w, l(0.000000), r2.x
        if_nz r6.w
          mad r8.w, -r2.x, r2.x, l(1.000000)
          sqrt r8.w, r8.w
          dp2 r9.z, r2.wwww, r16.xxxx
          add r9.w, -r5.w, r9.z
          ge r10.y, r9.w, r8.w
          if_nz r10.y
            mov r16.z, l(1.000000)
            mov r16.xy, r16.xzxx
            mov r10.y, |r2.w|
          else 
            mad r12.w, -r9.w, r9.w, l(1.000000)
            rsq r12.w, r12.w
            mul r12.w, r2.x, r12.w
            mad r13.w, -r9.w, r16.x, r2.w
            dp2 r14.w, r2.wwww, r2.wwww
            add r14.w, r14.w, l(-1.000000)
            mad r9.w, -r9.w, r5.w, r14.w
            mad r14.w, -r16.x, r16.x, l(1.000000)
            mad r14.w, -r2.w, r2.w, r14.w
            mad r14.w, -r5.w, r5.w, r14.w
            mad_sat r9.z, r9.z, r5.w, r14.w
            sqrt r9.z, r9.z
            mul r9.z, r9.z, r12.w
            mul r14.w, r2.w, r9.z
            add r15.w, r14.w, r14.w
            mad r16.z, r16.x, r8.w, r2.w
            mul r16.w, r12.w, r13.w
            mad r13.w, r12.w, r13.w, r16.z
            mad r17.x, r5.w, r8.w, l(1.000000)
            mul r17.y, r9.w, r12.w
            mad r9.w, r12.w, r9.w, r17.x
            mul r12.w, r9.w, r9.z
            mul r17.x, r9.w, r13.w
            mul r14.w, r14.w, r13.w
            mul r17.z, r12.w, l(-0.500000)
            mad r14.w, r14.w, l(0.500000), r17.z
            mul r14.w, r14.w, r17.x
            mul r17.z, r9.w, r9.w
            mad r9.w, r5.w, r8.w, r9.w
            mad r9.w, r9.w, l(-0.500000), l(-0.500000)
            mul r16.z, r16.z, r17.z
            mad r9.w, r17.x, r9.w, r16.z
            mul r16.z, r13.w, r15.w
            mad r17.x, r12.w, l(-2.000000), r16.z
            mul r12.w, r12.w, r12.w
            mad r12.w, r16.z, r17.x, r12.w
            mad r9.w, r13.w, r9.w, r12.w
            add r12.w, r14.w, r14.w
            mul r13.w, r9.w, r9.w
            mad r13.w, r14.w, r14.w, r13.w
            div r12.w, r12.w, r13.w
            mul r9.w, r9.w, r12.w
            mad r12.w, -r12.w, r14.w, l(1.000000)
            mul r13.w, r16.w, r12.w
            mad r9.z, r9.w, r9.z, r13.w
            mad r16.x, r16.x, r8.w, r9.z
            mul r9.z, r17.y, r12.w
            mad r9.z, r9.w, r15.w, r9.z
            mad r8.w, r5.w, r8.w, r9.z
            mad r9.z, r8.w, l(2.000000), l(2.000000)
            rsq r9.z, r9.z
            add r9.w, r2.w, r16.x
            mul_sat r16.y, r9.z, r9.w
            mad_sat r10.y, r9.z, r8.w, r9.z
          endif 
        else 
          mad r8.w, r5.w, l(2.000000), l(2.000000)
          rsq r8.w, r8.w
          add r9.z, r2.w, r16.x
          mul_sat r16.y, r8.w, r9.z
          mad_sat r10.y, r8.w, r5.w, r8.w
        endif 
        add r2.w, |r2.w|, l(0.000010)
        min r2.w, r2.w, l(1.000000)
        add r5.w, -r10.y, l(1.000000)
        mul r8.w, r5.w, r5.w
        mul r8.w, r8.w, r8.w
        mad r9.z, -r8.w, r5.w, l(1.000000)
        mul r5.w, r5.w, r8.w
        mad r8.w, r9.z, l(0.040000), r5.w
        lt r9.w, l(0.000000), r1.y
        mul r12.w, r1.y, r1.y
        mad r16.zw, r10.yyyy, l(0.000000, 0.000000, 3.600000, -0.220000), l(0.000000, 0.000000, 0.400000, 0.630000)
        div r12.w, r12.w, r16.z
        mul r13.w, r7.w, r7.w
        mad r7.w, r7.w, r7.w, r12.w
        min r7.w, r7.w, l(1.000000)
        movc r17.y, r9.w, r7.w, r13.w
        mul r7.w, r2.x, l(0.250000)
        ishr r13.w, r17.y, l(1)
        iadd r13.w, r13.w, l(0x1fbd1df5)
        mad r2.x, r13.w, l(3.000000), r2.x
        mul r2.x, r2.x, r7.w
        add r7.w, r10.y, l(0.001000)
        div r2.x, r2.x, r7.w
        add r18.y, r2.x, r17.y
        div r18.x, r17.y, r18.y
        mov r17.xz, l(1.000000,0,1.000000,0)
        movc r18.xy, r6.wwww, r18.xyxx, r17.xyxx
        lt r2.x, r3.w, l(1.000000)
        add r6.w, -r3.w, l(1.000100)
        add r13.w, r3.w, l(1.000000)
        div r6.w, r6.w, r13.w
        sqrt r6.w, r6.w
        mul r13.w, r6.w, l(0.250000)
        ishr r14.w, r18.y, l(1)
        iadd r14.w, r14.w, l(0x1fbd1df5)
        mad r14.w, r14.w, l(3.000000), r6.w
        mul r14.w, r13.w, r14.w
        div r14.w, r14.w, r7.w
        add r14.w, r14.w, r18.y
        div r14.w, r18.y, r14.w
        sqrt r14.w, r14.w
        mul r14.w, r14.w, r18.x
        movc r14.w, r2.x, r14.w, r18.x
        sqrt r15.w, r17.y
        add r16.z, -r15.w, l(1.000000)
        mad r17.x, r16.y, r17.y, -r16.y
        mad r17.x, r17.x, r16.y, l(1.000000)
        mul r18.x, r1.z, r0.x
        mul r17.x, r17.x, r17.x
        mul r17.x, r17.x, l(3.141593)
        div r17.x, r17.y, r17.x
        mul r14.w, r14.w, r17.x
        mad r17.x, r2.w, r16.z, r15.w
        mad r15.w, r1.z, r16.z, r15.w
        mul r16.z, r1.z, r17.x
        mad r15.w, r2.w, r15.w, r16.z
        div r15.w, l(0.500000), r15.w
        mul r14.w, r14.w, r15.w
        mul r14.w, r8.w, r14.w
        mul r14.w, r14.w, r18.x
        add r8.w, -r8.w, l(1.000000)
        mad r15.w, r16.w, r10.y, l(-0.745000)
        mul r16.z, r16.y, r15.w
        mad r2.w, r2.w, l(0.666667), -r16.z
        max r2.w, r2.w, l(0.001000)
        min r2.w, r2.w, l(1.000000)
        lt r16.w, l(0.000000), r0.w
        mul r18.yzw, r6.xxyz, l(0.000000, 0.318310, 0.318310, 0.318310)
        max r18.yzw, r18.yyzw, l(0.000000, 0.000100, 0.000100, 0.000100)
        div r17.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
        mad r16.x, r16.x, l(0.666667), -r16.z
        max r16.x, r16.x, l(0.001000)
        min r16.x, r16.x, l(1.000000)
        div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
        add r16.x, r16.x, r17.x
        add r16.x, r16.x, l(-2.000000)
        log r18.yzw, r18.yyzw
        mul r18.yzw, r16.xxxx, r18.yyzw
        mul r18.yzw, r18.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
        exp r18.yzw, r18.yyzw
        add r18.yzw, r18.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
        mad r18.yzw, r0.wwww, r18.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
        movc r16.xzw, r16.wwww, r18.yyzw, l(1.000000,0,1.000000,1.000000)
        mul r18.xyz, r12.xyzx, r18.xxxx
        mul r18.xyz, r18.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
        mul r8.w, r8.w, r8.w
        mul r16.xzw, r8.wwww, r16.xxzw
        mul r8.w, r0.y, r0.y
        mul r17.x, r8.w, r8.w
        mad r17.y, -r0.y, r0.y, l(1.000000)
        mad r18.w, r16.y, r17.x, -r16.y
        mad r16.y, r18.w, r16.y, l(1.000000)
        mad_sat r10.y, r10.y, l(0.666667), -r15.w
        add r10.y, -r10.y, l(1.000000)
        mul r15.w, r10.y, r10.y
        mul r15.w, r15.w, r15.w
        mul_sat r18.w, r11.z, l(50.000000)
        mad r12.w, r8.w, r8.w, r12.w
        min r12.w, r12.w, l(1.000000)
        movc r17.w, r9.w, r12.w, r17.x
        lt r9.w, l(0.000000), r2.y
        mul r12.w, r2.y, l(0.250000)
        ishr r19.x, r17.w, l(1)
        iadd r19.x, r19.x, l(0x1fbd1df5)
        mad r19.x, r19.x, l(3.000000), r2.y
        mul r12.w, r12.w, r19.x
        div r12.w, r12.w, r7.w
        add r19.y, r12.w, r17.w
        div r19.x, r17.w, r19.y
        movc r17.zw, r9.wwww, r19.xxxy, r17.zzzw
        ishr r9.w, r17.w, l(1)
        iadd r9.w, r9.w, l(0x1fbd1df5)
        mad r6.w, r9.w, l(3.000000), r6.w
        mul r6.w, r6.w, r13.w
        div r6.w, r6.w, r7.w
        add r6.w, r6.w, r17.w
        div r6.w, r17.w, r6.w
        sqrt r6.w, r6.w
        mul r6.w, r6.w, r17.z
        movc r2.x, r2.x, r6.w, r17.z
        mul r2.x, r0.x, r2.x
        mul r2.x, r1.z, r2.x
        mul r6.w, r16.y, r16.y
        mul r6.w, r6.w, l(3.141593)
        div r6.w, r17.x, r6.w
        mul r2.x, r2.x, r6.w
        mad r6.w, r2.w, r17.y, r8.w
        mad r7.w, r1.z, r17.y, r8.w
        mul r6.w, r1.z, r6.w
        mad r2.w, r2.w, r7.w, r6.w
        div r2.w, l(0.500000), r2.w
        mul r2.x, r2.w, r2.x
        mul r17.xyz, r9.zzzz, r11.yzwy
        mad r17.xyz, r18.wwww, r5.wwww, r17.xyzx
        mul r2.w, r10.y, r15.w
        mad r5.w, -r15.w, r10.y, l(1.000000)
        mul r19.xyz, r5.wwww, r11.yzwy
        mad r19.xyz, r18.wwww, r2.wwww, r19.xyzx
        mad r19.xyz, r16.xzwx, r19.xyzx, -r17.xyzx
        mad r17.xyz, r8.xxxx, r19.xyzx, r17.xyzx
        mul r17.xyz, r2.xxxx, r17.xyzx
        mad r14.xyz, r8.xxxx, r14.wwww, r17.xyzx
        mad r16.xyz, r16.xzwx, r18.xyzx, -r18.xyzx
        mad r13.xyz, r8.xxxx, r16.xyzx, r18.xyzx
        mov r15.xyz, l(0,0,0,0)
        break 
        case l(5)
        dp3 r2.x, r10.xzwx, r5.xyzx
        dp3 r2.w, r10.xzwx, -r4.xyzx
        dp3 r5.w, -r4.xyzx, r5.xyzx
        lt r6.w, l(0.000000), r2.y
        if_nz r6.w
          mad r7.w, -r2.y, r2.y, l(1.000000)
          sqrt r7.w, r7.w
          dp2 r8.w, r2.wwww, r2.xxxx
          add r9.z, -r5.w, r8.w
          ge r9.w, r9.z, r7.w
          if_nz r9.w
            mov r9.w, l(1.000000)
            mov r10.y, |r2.w|
          else 
            mad r12.w, -r9.z, r9.z, l(1.000000)
            rsq r12.w, r12.w
            mul r12.w, r2.y, r12.w
            mad r13.w, -r9.z, r2.x, r2.w
            dp2 r14.w, r2.wwww, r2.wwww
            add r14.w, r14.w, l(-1.000000)
            mad r9.z, -r9.z, r5.w, r14.w
            mad r14.w, -r2.x, r2.x, l(1.000000)
            mad r14.w, -r2.w, r2.w, r14.w
            mad r14.w, -r5.w, r5.w, r14.w
            mad_sat r8.w, r8.w, r5.w, r14.w
            sqrt r8.w, r8.w
            mul r8.w, r8.w, r12.w
            mul r14.w, r2.w, r8.w
            add r15.w, r14.w, r14.w
            mad r16.x, r2.x, r7.w, r2.w
            mul r16.y, r12.w, r13.w
            mad r13.w, r12.w, r13.w, r16.x
            mad r16.z, r5.w, r7.w, l(1.000000)
            mul r16.w, r9.z, r12.w
            mad r9.z, r12.w, r9.z, r16.z
            mul r12.w, r8.w, r9.z
            mul r16.z, r9.z, r13.w
            mul r14.w, r14.w, r13.w
            mul r17.x, r12.w, l(-0.500000)
            mad r14.w, r14.w, l(0.500000), r17.x
            mul r14.w, r14.w, r16.z
            mul r17.x, r9.z, r9.z
            mad r9.z, r5.w, r7.w, r9.z
            mad r9.z, r9.z, l(-0.500000), l(-0.500000)
            mul r16.x, r16.x, r17.x
            mad r9.z, r16.z, r9.z, r16.x
            mul r16.x, r13.w, r15.w
            mad r16.z, r12.w, l(-2.000000), r16.x
            mul r12.w, r12.w, r12.w
            mad r12.w, r16.x, r16.z, r12.w
            mad r9.z, r13.w, r9.z, r12.w
            add r12.w, r14.w, r14.w
            mul r13.w, r9.z, r9.z
            mad r13.w, r14.w, r14.w, r13.w
            div r12.w, r12.w, r13.w
            mul r9.z, r9.z, r12.w
            mad r12.w, -r12.w, r14.w, l(1.000000)
            mul r13.w, r16.w, r12.w
            mad r13.w, r9.z, r15.w, r13.w
            mad r13.w, r5.w, r7.w, r13.w
            mad r14.w, r13.w, l(2.000000), l(2.000000)
            rsq r14.w, r14.w
            mul r12.w, r16.y, r12.w
            mad r8.w, r9.z, r8.w, r12.w
            mad r7.w, r2.x, r7.w, r8.w
            add r7.w, r2.w, r7.w
            mul_sat r9.w, r14.w, r7.w
            mad_sat r10.y, r14.w, r13.w, r14.w
          endif 
        else 
          mad r7.w, r5.w, l(2.000000), l(2.000000)
          rsq r7.w, r7.w
          add r2.x, r2.w, r2.x
          mul_sat r9.w, r7.w, r2.x
          mad_sat r10.y, r7.w, r5.w, r7.w
        endif 
        add r2.x, |r2.w|, l(0.000010)
        min r2.x, r2.x, l(1.000000)
        mad r2.w, r8.x, l(255.000000), l(0.500000)
        ftou r16.y, r2.w
        mov r16.xzw, l(5,0,0,0)
        ld_indexable(texture2d)(float,float,float,float) r17.xyz, r16.xyzw, t1.xyzw
        add r2.w, r4.w, l(-0.100000)
        mul_sat r2.w, r2.w, l(10.000000)
        mad r17.xy, r17.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
        mad r17.xy, r2.wwww, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
        mul_sat r17.xy, r0.yyyy, r17.xyxx
        max r2.w, r17.x, l(0.020000)
        add r5.w, -r2.w, r17.y
        mad r5.w, r17.z, r5.w, r2.w
        mul r7.w, r10.y, r10.y
        dp2 r7.w, r7.wwww, r0.yyyy
        add r7.w, r7.w, l(-0.500000)
        add r8.w, -r2.x, l(1.000000)
        mul r9.z, r8.w, r8.w
        add r12.w, -r1.z, l(1.000000)
        mul r13.w, r12.w, r12.w
        mul r14.w, r1.z, r0.x
        mul r15.w, r5.w, r5.w
        mul r2.w, r2.w, r2.w
        mul r17.x, r17.y, r17.y
        lt r17.y, l(0.000000), r1.y
        mul r17.w, r1.y, r1.y
        mad r18.x, r10.y, l(3.600000), l(0.400000)
        div r17.w, r17.w, r18.x
        mul r18.x, r2.w, r2.w
        mad r2.w, r2.w, r2.w, r17.w
        min r2.w, r2.w, l(1.000000)
        movc r18.y, r17.y, r2.w, r18.x
        mul r2.w, r2.y, l(0.250000)
        ishr r19.x, r18.y, l(1)
        iadd r19.x, r19.x, l(0x1fbd1df5)
        mad r19.x, r19.x, l(3.000000), r2.y
        mul r19.x, r2.w, r19.x
        add r19.y, r10.y, l(0.001000)
        div r19.x, r19.x, r19.y
        add r20.y, r18.y, r19.x
        div r20.x, r18.y, r20.y
        mov r18.xz, l(1.000000,0,1.000000,0)
        movc r19.xz, r6.wwww, r20.xxyx, r18.xxyx
        lt r18.x, r3.w, l(1.000000)
        add r19.w, -r3.w, l(1.000100)
        add r20.x, r3.w, l(1.000000)
        div r19.w, r19.w, r20.x
        sqrt r19.w, r19.w
        mul r20.x, r19.w, l(0.250000)
        ishr r20.y, r19.z, l(1)
        iadd r20.y, r20.y, l(0x1fbd1df5)
        mad r20.y, r20.y, l(3.000000), r19.w
        mul r20.y, r20.y, r20.x
        div r20.y, r20.y, r19.y
        add r20.y, r19.z, r20.y
        div r19.z, r19.z, r20.y
        sqrt r19.z, r19.z
        mul r19.z, r19.z, r19.x
        movc r19.x, r18.x, r19.z, r19.x
        mul r19.z, r17.x, r17.x
        mad r17.x, r17.x, r17.x, r17.w
        min r17.x, r17.x, l(1.000000)
        movc r18.w, r17.y, r17.x, r19.z
        ishr r17.x, r18.w, l(1)
        iadd r17.x, r17.x, l(0x1fbd1df5)
        mad r17.x, r17.x, l(3.000000), r2.y
        mul r2.w, r2.w, r17.x
        div r2.w, r2.w, r19.y
        add r17.y, r2.w, r18.w
        div r17.x, r18.w, r17.y
        movc r17.xy, r6.wwww, r17.xyxx, r18.zwzz
        ishr r2.w, r17.y, l(1)
        iadd r2.w, r2.w, l(0x1fbd1df5)
        mad r2.w, r2.w, l(3.000000), r19.w
        mul r2.w, r2.w, r20.x
        div r2.w, r2.w, r19.y
        add r2.w, r2.w, r17.y
        div r2.w, r17.y, r2.w
        sqrt r2.w, r2.w
        mul r2.w, r2.w, r17.x
        movc r2.w, r18.x, r2.w, r17.x
        mad r17.xy, r9.wwww, r18.ywyy, -r9.wwww
        mad r17.xy, r17.xyxx, r9.wwww, l(1.000000, 1.000000, 0.000000, 0.000000)
        mad r5.w, -r5.w, r5.w, l(1.000000)
        add r6.w, -r10.y, l(1.000000)
        mul r9.w, r6.w, r6.w
        mul r9.w, r9.w, r9.w
        mul_sat r10.y, r11.z, l(50.000000)
        mul r17.w, r6.w, r9.w
        mad r6.w, -r9.w, r6.w, l(1.000000)
        mul r19.yzw, r6.wwww, r11.yyzw
        mad r19.yzw, r10.yyyy, r17.wwww, r19.yyzw
        mul r17.xy, r17.xyxx, r17.xyxx
        mul r17.xy, r17.xyxx, l(3.141593, 3.141593, 0.000000, 0.000000)
        div r17.xy, r18.ywyy, r17.xyxx
        mul r6.w, r19.x, r17.x
        mad r2.w, r17.y, r2.w, -r6.w
        mad r2.w, r17.z, r2.w, r6.w
        mad r6.w, r2.x, r5.w, r15.w
        mad r5.w, r1.z, r5.w, r15.w
        mul r6.w, r1.z, r6.w
        mad r2.x, r2.x, r5.w, r6.w
        div r2.x, l(0.500000), r2.x
        mul r2.x, r2.x, r2.w
        mul r17.xyz, r2.xxxx, r19.yzwy
        mul r14.xyz, r14.wwww, r17.xyzx
        mov r16.xzw, l(3,0,0,0)
        ld_indexable(texture2d)(float,float,float,float) r2.xw, r16.xyzw, t1.zxyw
        mad r2.x, r2.x, l(2.000000), l(-1.000000)
        dp3 r5.w, -r4.xyzx, -r10.xzwx
        mul r6.w, r2.w, r2.w
        mad r9.w, -r5.w, r5.w, l(1.000000)
        mad r6.w, -r6.w, r9.w, l(1.000000)
        sqrt r9.w, r6.w
        mad r5.w, r2.w, r5.w, r9.w
        ge r6.w, r6.w, l(0.000000)
        mul r16.xzw, -r10.xxzw, r5.wwww
        mad r16.xzw, r2.wwww, -r4.xxyz, -r16.xxzw
        and r16.xzw, r6.wwww, r16.xxzw
        dp3 r2.w, -r5.xyzx, r16.xzwx
        mad r2.w, -r2.x, r2.w, l(1.000000)
        mul r2.w, r2.w, r2.w
        mul r5.w, r9.z, r9.z
        mul r5.w, r8.w, r5.w
        mad r5.w, r7.w, r5.w, l(1.000000)
        mul r5.w, r5.w, l(0.318310)
        mul r6.w, r13.w, r13.w
        mul r6.w, r12.w, r6.w
        mad r6.w, r7.w, r6.w, l(1.000000)
        mul r5.w, r5.w, r6.w
        mul r16.xzw, r5.wwww, r12.xxyz
        mul r13.xyz, r14.wwww, r16.xzwx
        add r2.z, -r2.z, l(1.000000)
        mad r17.x, r2.z, l(31.000000), l(34.500000)
        utof r2.z, r16.y
        add r17.y, r2.z, l(0.500000)
        div r9.zw, r17.xxxy, cb0[248].xxxy
        sample_l_indexable(texture2d)(float,float,float,float) r16.xyz, r9.zwzz, t1.xyzw, s1, l(0.000000)
        mad r2.x, -r2.x, r2.x, l(1.000000)
        mul r2.x, r2.x, l(0.500000)
        ne r2.z, r2.w, r2.w
        max r2.w, r2.w, l(0.000010)
        movc r2.z, r2.z, l(0.000010), r2.w
        div r2.x, r2.x, r2.z
        mul r2.x, r0.x, r2.x
        mul r15.xyz, r2.xxxx, r16.xyzx
        break 
        case l(6)
        dp3 r2.x, r10.xzwx, r5.xyzx
        dp3 r2.z, r10.xzwx, -r4.xyzx
        dp3 r2.w, -r4.xyzx, r5.xyzx
        lt r5.w, l(0.000000), r2.y
        if_nz r5.w
          mad r6.w, -r2.y, r2.y, l(1.000000)
          sqrt r6.w, r6.w
          dp2 r7.w, r2.zzzz, r2.xxxx
          add r8.w, -r2.w, r7.w
          ge r9.z, r8.w, r6.w
          if_nz r9.z
            mov r9.z, l(1.000000)
            mov r9.w, |r2.z|
          else 
            mad r10.y, -r8.w, r8.w, l(1.000000)
            rsq r10.y, r10.y
            mul r10.y, r2.y, r10.y
            mad r12.w, -r8.w, r2.x, r2.z
            dp2 r13.w, r2.zzzz, r2.zzzz
            add r13.w, r13.w, l(-1.000000)
            mad r8.w, -r8.w, r2.w, r13.w
            mad r13.w, -r2.x, r2.x, l(1.000000)
            mad r13.w, -r2.z, r2.z, r13.w
            mad r13.w, -r2.w, r2.w, r13.w
            mad_sat r7.w, r7.w, r2.w, r13.w
            sqrt r7.w, r7.w
            mul r7.w, r7.w, r10.y
            mul r13.w, r2.z, r7.w
            add r14.w, r13.w, r13.w
            mad r15.w, r2.x, r6.w, r2.z
            mul r16.x, r10.y, r12.w
            mad r12.w, r10.y, r12.w, r15.w
            mad r16.y, r2.w, r6.w, l(1.000000)
            mul r16.z, r8.w, r10.y
            mad r8.w, r10.y, r8.w, r16.y
            mul r10.y, r7.w, r8.w
            mul r16.y, r8.w, r12.w
            mul r13.w, r13.w, r12.w
            mul r16.w, r10.y, l(-0.500000)
            mad r13.w, r13.w, l(0.500000), r16.w
            mul r13.w, r13.w, r16.y
            mul r16.w, r8.w, r8.w
            mad r8.w, r2.w, r6.w, r8.w
            mad r8.w, r8.w, l(-0.500000), l(-0.500000)
            mul r15.w, r15.w, r16.w
            mad r8.w, r16.y, r8.w, r15.w
            mul r15.w, r12.w, r14.w
            mad r16.y, r10.y, l(-2.000000), r15.w
            mul r10.y, r10.y, r10.y
            mad r10.y, r15.w, r16.y, r10.y
            mad r8.w, r12.w, r8.w, r10.y
            add r10.y, r13.w, r13.w
            mul r12.w, r8.w, r8.w
            mad r12.w, r13.w, r13.w, r12.w
            div r10.y, r10.y, r12.w
            mul r8.w, r8.w, r10.y
            mad r10.y, -r10.y, r13.w, l(1.000000)
            mul r12.w, r16.z, r10.y
            mad r12.w, r8.w, r14.w, r12.w
            mad r12.w, r2.w, r6.w, r12.w
            mad r13.w, r12.w, l(2.000000), l(2.000000)
            rsq r13.w, r13.w
            mul r10.y, r16.x, r10.y
            mad r7.w, r8.w, r7.w, r10.y
            mad r6.w, r2.x, r6.w, r7.w
            add r6.w, r2.z, r6.w
            mul_sat r9.z, r13.w, r6.w
            mad_sat r9.w, r13.w, r12.w, r13.w
          endif 
        else 
          mad r6.w, r2.w, l(2.000000), l(2.000000)
          rsq r6.w, r6.w
          add r7.w, r2.z, r2.x
          mul_sat r9.z, r6.w, r7.w
          mad_sat r9.w, r6.w, r2.w, r6.w
        endif 
        add r2.z, |r2.z|, l(0.000010)
        min r2.z, r2.z, l(1.000000)
        mul r6.w, r1.z, r0.x
        mul r7.w, r0.y, r0.y
        lt r8.w, l(0.000000), r1.y
        mul r10.y, r1.y, r1.y
        mad r12.w, r9.w, l(3.600000), l(0.400000)
        div r10.y, r10.y, r12.w
        mul r12.w, r7.w, r7.w
        mad r7.w, r7.w, r7.w, r10.y
        min r7.w, r7.w, l(1.000000)
        movc r16.y, r8.w, r7.w, r12.w
        mul r7.w, r2.y, l(0.250000)
        ishr r8.w, r16.y, l(1)
        iadd r8.w, r8.w, l(0x1fbd1df5)
        mad r8.w, r8.w, l(3.000000), r2.y
        mul r7.w, r7.w, r8.w
        add r8.w, r9.w, l(0.001000)
        div r7.w, r7.w, r8.w
        add r17.y, r7.w, r16.y
        div r17.x, r16.y, r17.y
        mov r16.x, l(1.000000)
        movc r16.xz, r5.wwww, r17.xxyx, r16.xxyx
        lt r5.w, r3.w, l(1.000000)
        add r7.w, -r3.w, l(1.000100)
        add r10.y, r3.w, l(1.000000)
        div r7.w, r7.w, r10.y
        sqrt r7.w, r7.w
        mul r10.y, r7.w, l(0.250000)
        ishr r12.w, r16.z, l(1)
        iadd r12.w, r12.w, l(0x1fbd1df5)
        mad r7.w, r12.w, l(3.000000), r7.w
        mul r7.w, r7.w, r10.y
        div r7.w, r7.w, r8.w
        add r7.w, r7.w, r16.z
        div r7.w, r16.z, r7.w
        sqrt r7.w, r7.w
        mul r7.w, r7.w, r16.x
        movc r5.w, r5.w, r7.w, r16.x
        mad r7.w, r9.z, r16.y, -r9.z
        mad r7.w, r7.w, r9.z, l(1.000000)
        sqrt r8.w, r16.y
        add r9.z, -r8.w, l(1.000000)
        add r9.w, -r9.w, l(1.000000)
        mul r10.y, r9.w, r9.w
        mul r10.y, r10.y, r10.y
        mul_sat r12.w, r11.z, l(50.000000)
        mul r13.w, r9.w, r10.y
        mad r9.w, -r10.y, r9.w, l(1.000000)
        mul r16.xzw, r9.wwww, r11.yyzw
        mad r16.xzw, r12.wwww, r13.wwww, r16.xxzw
        mul r7.w, r7.w, r7.w
        mul r7.w, r7.w, l(3.141593)
        div r7.w, r16.y, r7.w
        mul r5.w, r5.w, r7.w
        mad r7.w, r2.z, r9.z, r8.w
        mad r8.w, r1.z, r9.z, r8.w
        mul r7.w, r1.z, r7.w
        mad r2.z, r2.z, r8.w, r7.w
        div r2.z, l(0.500000), r2.z
        mul r2.z, r2.z, r5.w
        mul r16.xyz, r2.zzzz, r16.xzwx
        mul r14.xyz, r6.wwww, r16.xyzx
        mov_sat r2.w, -r2.w
        mul r2.z, r2.w, r2.w
        mad r2.z, r2.z, l(-0.640000), l(1.000000)
        mul r16.xyz, r6.wwww, r12.xyzx
        mul r13.xyz, r16.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
        add r2.x, -r2.x, l(0.500000)
        mul_sat r2.x, r2.x, l(0.444444)
        mul r2.x, r0.x, r2.x
        mul r2.z, r2.z, r2.z
        mul r2.z, r2.z, l(3.141593)
        div r2.z, l(0.360000), r2.z
        mul r2.x, r2.z, r2.x
        mul r16.xyz, r8.xyzx, r8.xyzx
        mul r15.xyz, r2.xxxx, r16.xyzx
        break 
        case l(7)
        max r2.x, r0.y, l(0.003922)
        min r2.x, r2.x, l(1.000000)
        dp3 r2.z, -r4.xyzx, r5.xyzx
        dp3 r2.w, r10.xzwx, r5.xyzx
        max r5.w, r2.w, l(-1.000000)
        min r5.w, r5.w, l(1.000000)
        dp3 r6.w, r10.xzwx, -r4.xyzx
        max r7.w, r6.w, l(-1.000000)
        min r7.w, r7.w, l(1.000000)
        mad r8.w, |r7.w|, l(-0.156583), l(1.570796)
        add r9.z, -|r7.w|, l(1.000000)
        sqrt r9.z, r9.z
        mad r9.w, |r5.w|, l(-0.156583), l(1.570796)
        add r10.y, -|r5.w|, l(1.000000)
        sqrt r10.y, r10.y
        ge r12.w, r7.w, l(0.000000)
        mul r13.w, r8.w, r9.z
        mad r8.w, -r8.w, r9.z, l(3.141593)
        movc r8.w, r12.w, r13.w, r8.w
        add r8.w, -r8.w, l(1.570796)
        ge r9.z, r5.w, l(0.000000)
        mul r12.w, r9.w, r10.y
        mad r9.w, -r9.w, r10.y, l(3.141593)
        movc r9.z, r9.z, r12.w, r9.w
        add r9.z, -r9.z, l(1.570796)
        add r8.w, r8.w, -r9.z
        mul r8.w, |r8.w|, l(0.500000)
        sincos null, r8.w, r8.w
        mad r16.xyz, -r10.xzwx, r5.wwww, r5.xyzx
        mad r17.xyz, -r10.xzwx, r7.wwww, -r4.xyzx
        dp3 r9.z, r16.xyzx, r17.xyzx
        dp3 r9.w, r16.xyzx, r16.xyzx
        dp3 r10.y, r17.xyzx, r17.xyzx
        mad r9.w, r9.w, r10.y, l(0.000100)
        rsq r9.w, r9.w
        mul r9.z, r9.w, r9.z
        mad r16.xyzw, r9.zzzz, l(0.500000, -0.800000, -3.650000, 17.000000), l(0.500000, 0.600000, -3.980000, -16.780001)
        mov_sat r16.x, r16.x
        sqrt r9.z, r16.x
        mul r2.x, r2.x, r2.x
        mul r17.xyz, r2.xxxx, l(0.500000, 1.253314, 5.013257, 0.000000)
        add r9.w, r2.x, r2.x
        mul r2.x, r9.z, r2.x
        mul r18.xy, r2.xxxx, l(1.414214, 3.544908, 0.000000, 0.000000)
        add r2.x, r5.w, r7.w
        mul r5.w, r9.z, l(0.997551)
        mad r10.y, -r7.w, r7.w, l(1.000000)
        sqrt r10.y, r10.y
        mul r5.w, r5.w, r10.y
        mad r5.w, r7.w, l(-0.069943), r5.w
        mad r5.w, r5.w, l(0.139886), r2.x
        mad_sat r2.z, r2.z, l(0.500000), l(0.500000)
        sqrt r2.z, r2.z
        add r2.z, -r2.z, l(1.000000)
        mul r7.w, r2.z, r2.z
        div r18.zw, l(0.000000, 0.000000, 1.190000, 0.800000), r8.wwww
        mad r10.y, r8.w, l(0.360000), r18.z
        div r10.y, l(1.000000, 1.000000, 1.000000, 1.000000), r10.y
        mad r12.w, r10.y, r16.y, l(1.000000)
        mul r12.w, r9.z, r12.w
        mad r13.w, -r12.w, r12.w, l(1.000000)
        max r13.w, r13.w, l(0.000000)
        sqrt r13.w, r13.w
        mad r13.w, -r8.w, r13.w, l(1.000000)
        mul r14.w, r13.w, r13.w
        mul r14.w, r14.w, r14.w
        mul r13.w, r13.w, r14.w
        mad r13.w, r13.w, l(0.953479), l(0.046521)
        add r13.w, -r13.w, l(1.000000)
        mul r10.y, r10.y, r12.w
        add r16.xy, r2.xxxx, l(-0.035000, -0.140000, 0.000000, 0.000000)
        mad r2.x, r8.w, l(-0.500000), l(1.000000)
        mul r12.w, r2.x, r2.x
        mul r12.w, r12.w, r12.w
        mul r2.x, r2.x, r12.w
        mad r2.x, r2.x, l(0.953479), l(0.046521)
        add r12.w, -r2.x, l(1.000000)
        mul r5.w, r5.w, r5.w
        mul r5.w, r5.w, l(-0.500000)
        mul r14.w, r18.x, r18.x
        div r5.w, r5.w, r14.w
        mul r5.w, r5.w, l(1.442695)
        exp r5.w, r5.w
        div r5.w, r5.w, r18.y
        mul r5.w, r9.z, r5.w
        mul r5.w, r5.w, l(0.250000)
        mul r7.w, r7.w, r7.w
        mul r2.z, r2.z, r7.w
        mad r2.z, r2.z, l(0.953479), l(0.046521)
        mul r2.z, r2.z, r5.w
        dp2 r2.z, r11.xxxx, r2.zzzz
        mad r5.w, -r10.y, r10.y, l(1.000000)
        sqrt r5.w, r5.w
        mul r5.w, r5.w, l(0.500000)
        div r5.w, r5.w, r8.w
        log r18.xyz, |r6.xyzx|
        mul r19.xyz, r5.wwww, r18.xyzx
        exp r19.xyz, r19.xyzx
        mul r16.xy, r16.xyxx, r16.xyxx
        mul r16.xy, r16.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
        mul r5.w, r17.x, r17.x
        div r5.w, r16.x, r5.w
        mul r5.w, r5.w, l(1.442695)
        exp r5.w, r5.w
        div r5.w, r5.w, r17.y
        mul r16.xz, r16.zzwz, l(1.442695, 0.000000, 1.442695, 0.000000)
        exp r16.xz, r16.xxzx
        mul r5.w, r5.w, r16.x
        mul r7.w, r13.w, r13.w
        mul r5.w, r5.w, r7.w
        mad r17.xyw, r19.xyxz, r5.wwww, r2.zzzz
        mul r18.xyz, r18.xyzx, r18.wwww
        exp r18.xyz, r18.xyzx
        mul r2.z, r9.w, r9.w
        div r2.z, r16.y, r2.z
        mul r2.z, r2.z, l(1.442695)
        exp r2.z, r2.z
        div r2.z, r2.z, r17.z
        mul r2.z, r16.z, r2.z
        mul r5.w, r12.w, r12.w
        mul r2.x, r2.x, r5.w
        mul r2.x, r2.x, r2.z
        mad r16.xyz, r18.xyzx, r2.xxxx, r17.xywx
        dp3 r2.x, r6.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
        sqrt r17.xyz, |r6.xyzx|
        mad r18.xyz, -r10.xzwx, r6.wwww, -r4.xyzx
        dp3 r2.z, r18.xyzx, r18.xyzx
        rsq r2.z, r2.z
        mul r18.xyz, r2.zzzz, r18.xyzx
        dp3 r2.z, r18.xyzx, r5.xyzx
        add r2.z, r2.z, l(1.000000)
        mul_sat r2.z, r2.z, l(0.250000)
        add r2.w, -|r2.w|, l(1.000000)
        add r2.w, -r2.z, r2.w
        mad r2.z, r2.w, l(0.330000), r2.z
        mul r0.w, r0.w, r2.z
        mul r0.w, r0.w, l(0.318310)
        mul r17.xyz, r0.wwww, r17.xyzx
        ne r0.w, r2.x, r2.x
        max r2.x, r2.x, l(0.000100)
        movc r0.w, r0.w, l(0.000100), r2.x
        div r2.xzw, r6.xxyz, r0.wwww
        add r0.w, -r9.x, l(1.000000)
        log r2.xzw, |r2.xxzw|
        mul r2.xzw, r0.wwww, r2.xxzw
        exp r2.xzw, r2.xxzw
        mul r2.xzw, r2.xxzw, r17.xxyz
        mad r2.xzw, r16.xxyz, r9.yyyy, r2.xxzw
        ne r6.xyz, -r2.xzwx, -r2.xzwx
        min r2.xzw, -r2.xxzw, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r2.xzw, r6.xxyz, l(0,0,0,0), r2.xxzw
        mul r15.xyz, r0.xxxx, -r2.xzwx
        mov r13.xyz, l(0,0,0,0)
        mov r14.xyz, l(0,0,0,0)
        break 
        case l(8)
        mul r2.xzw, r8.xxyz, r8.xxyz
        mov_sat r4.w, r4.w
        dp3 r0.w, r10.xzwx, r5.xyzx
        dp3 r5.w, r10.xzwx, -r4.xyzx
        dp3 r6.x, -r4.xyzx, r5.xyzx
        lt r6.y, l(0.000000), r2.y
        if_nz r6.y
          mad r6.z, -r2.y, r2.y, l(1.000000)
          sqrt r6.z, r6.z
          dp2 r6.w, r5.wwww, r0.wwww
          add r7.w, r6.w, -r6.x
          ge r8.x, r7.w, r6.z
          if_nz r8.x
            mov r8.x, l(1.000000)
            mov r8.w, |r5.w|
          else 
            mad r9.z, -r7.w, r7.w, l(1.000000)
            rsq r9.z, r9.z
            mul r9.z, r2.y, r9.z
            mad r9.w, -r7.w, r0.w, r5.w
            dp2 r10.y, r5.wwww, r5.wwww
            add r10.y, r10.y, l(-1.000000)
            mad r7.w, -r7.w, r6.x, r10.y
            mad r10.y, -r0.w, r0.w, l(1.000000)
            mad r10.y, -r5.w, r5.w, r10.y
            mad r10.y, -r6.x, r6.x, r10.y
            mad_sat r6.w, r6.w, r6.x, r10.y
            sqrt r6.w, r6.w
            mul r6.w, r6.w, r9.z
            mul r10.y, r5.w, r6.w
            add r12.w, r10.y, r10.y
            mad r13.w, r0.w, r6.z, r5.w
            mul r14.w, r9.w, r9.z
            mad r9.w, r9.z, r9.w, r13.w
            mad r15.w, r6.x, r6.z, l(1.000000)
            mul r16.x, r7.w, r9.z
            mad r7.w, r9.z, r7.w, r15.w
            mul r9.z, r6.w, r7.w
            mul r15.w, r7.w, r9.w
            mul r10.y, r10.y, r9.w
            mul r16.y, r9.z, l(-0.500000)
            mad r10.y, r10.y, l(0.500000), r16.y
            mul r10.y, r10.y, r15.w
            mul r16.y, r7.w, r7.w
            mad r7.w, r6.x, r6.z, r7.w
            mad r7.w, r7.w, l(-0.500000), l(-0.500000)
            mul r13.w, r13.w, r16.y
            mad r7.w, r15.w, r7.w, r13.w
            mul r13.w, r9.w, r12.w
            mad r15.w, r9.z, l(-2.000000), r13.w
            mul r9.z, r9.z, r9.z
            mad r9.z, r13.w, r15.w, r9.z
            mad r7.w, r9.w, r7.w, r9.z
            add r9.z, r10.y, r10.y
            mul r9.w, r7.w, r7.w
            mad r9.w, r10.y, r10.y, r9.w
            div r9.z, r9.z, r9.w
            mul r7.w, r7.w, r9.z
            mad r9.z, -r9.z, r10.y, l(1.000000)
            mul r9.w, r16.x, r9.z
            mad r9.w, r7.w, r12.w, r9.w
            mad r9.w, r6.x, r6.z, r9.w
            mad r10.y, r9.w, l(2.000000), l(2.000000)
            rsq r10.y, r10.y
            mul r9.z, r14.w, r9.z
            mad r6.w, r7.w, r6.w, r9.z
            mad r6.z, r0.w, r6.z, r6.w
            add r6.z, r5.w, r6.z
            mul_sat r8.x, r10.y, r6.z
            mad_sat r8.w, r10.y, r9.w, r10.y
          endif 
        else 
          mad r6.z, r6.x, l(2.000000), l(2.000000)
          rsq r6.z, r6.z
          add r0.w, r0.w, r5.w
          mul_sat r8.x, r6.z, r0.w
          mad_sat r8.w, r6.z, r6.x, r6.z
        endif 
        add r0.w, |r5.w|, l(0.000010)
        min r0.w, r0.w, l(1.000000)
        mul r5.w, r0.y, r0.y
        lt r6.x, l(0.000000), r1.y
        mul r6.z, r1.y, r1.y
        mad r6.w, r8.w, l(3.600000), l(0.400000)
        div r6.z, r6.z, r6.w
        mul r6.w, r5.w, r5.w
        mad r5.w, r5.w, r5.w, r6.z
        min r5.w, r5.w, l(1.000000)
        movc r16.y, r6.x, r5.w, r6.w
        mul r5.w, r2.y, l(0.250000)
        ishr r6.x, r16.y, l(1)
        iadd r6.x, r6.x, l(0x1fbd1df5)
        mad r6.x, r6.x, l(3.000000), r2.y
        mul r5.w, r5.w, r6.x
        add r6.x, r8.w, l(0.001000)
        div r5.w, r5.w, r6.x
        add r17.y, r5.w, r16.y
        div r17.x, r16.y, r17.y
        mov r16.x, l(1.000000)
        movc r6.yz, r6.yyyy, r17.xxyx, r16.xxyx
        lt r5.w, r3.w, l(1.000000)
        add r7.w, -r3.w, l(1.000100)
        add r9.z, r3.w, l(1.000000)
        div r7.w, r7.w, r9.z
        sqrt r7.w, r7.w
        mul r9.z, r7.w, l(0.250000)
        ishr r9.w, r6.z, l(1)
        iadd r9.w, r9.w, l(0x1fbd1df5)
        mad r7.w, r9.w, l(3.000000), r7.w
        mul r7.w, r7.w, r9.z
        div r6.x, r7.w, r6.x
        add r6.x, r6.x, r6.z
        div r6.x, r6.z, r6.x
        sqrt r6.x, r6.x
        mul r6.x, r6.x, r6.y
        movc r5.w, r5.w, r6.x, r6.y
        mad r6.x, r8.x, r16.y, -r8.x
        mad r6.x, r6.x, r8.x, l(1.000000)
        sqrt r6.y, r16.y
        add r6.z, -r6.y, l(1.000000)
        add r7.w, -r8.w, l(1.000000)
        mul r8.w, r7.w, r7.w
        mul r8.w, r8.w, r8.w
        mul r9.z, r1.z, r0.x
        mul_sat r9.w, r11.z, l(50.000000)
        mul r10.y, r7.w, r8.w
        mad r7.w, -r8.w, r7.w, l(1.000000)
        mul r11.yzw, r7.wwww, r11.yyzw
        mad r11.yzw, r9.wwww, r10.yyyy, r11.yyzw
        mul r6.x, r6.x, r6.x
        mul r6.x, r6.x, l(3.141593)
        div r6.x, r16.y, r6.x
        mul r5.w, r5.w, r6.x
        mad r6.x, r0.w, r6.z, r6.y
        mad r6.y, r1.z, r6.z, r6.y
        mul r6.x, r1.z, r6.x
        mad r6.x, r0.w, r6.y, r6.x
        div r6.x, l(0.500000), r6.x
        mul r5.w, r5.w, r6.x
        mul r6.xyz, r5.wwww, r11.yzwy
        mul r6.xyz, r6.xyzx, r9.zzzz
        mad r5.w, -r6.w, r8.x, r8.x
        mad r5.w, r5.w, r8.x, r6.w
        mul r11.yzw, r9.zzzz, r12.xxyz
        mul r13.xyz, r11.yzwy, l(0.318310, 0.318310, 0.318310, 0.000000)
        mul r8.x, r6.w, l(4.000000)
        mad r8.w, r6.w, l(4.000000), l(1.000000)
        div r8.w, l(0.318310), r8.w
        mul r6.w, r6.w, r8.x
        mul r5.w, r5.w, r5.w
        div r5.w, r6.w, r5.w
        add r5.w, r5.w, l(1.000000)
        mul r5.w, r5.w, r8.w
        add r6.w, r0.w, r1.z
        mad r0.w, -r1.z, r0.w, r6.w
        div r0.w, l(0.250000), r0.w
        mul r0.w, r0.w, r5.w
        mul r0.w, r0.w, r9.z
        mul r5.w, r2.z, l(50.000000)
        min r5.w, r5.w, l(1.000000)
        mul r2.xzw, r2.xxzw, r7.wwww
        mad r2.xzw, r5.wwww, r10.yyyy, r2.xxzw
        mad r2.xzw, r0.wwww, r2.xxzw, -r6.xxyz
        mad r14.xyz, r4.wwww, r2.xzwx, r6.xyzx
        mov r15.xyz, l(0,0,0,0)
        break 
        case l(9)
        mad r2.xz, r8.yyzy, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
        dp2 r0.w, l(1.000000, 1.000000, 0.000000, 0.000000), |r2.xzxx|
        add r6.z, -r0.w, l(1.000000)
        add r0.w, r0.w, l(-1.000000)
        ne r2.w, r0.w, r0.w
        max r0.w, r0.w, l(0.000000)
        movc r0.w, r2.w, l(0), r0.w
        ge r8.xy, r2.xzxx, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r8.xy, r8.xyxx, -r0.wwww, r0.wwww
        add r6.xy, r2.xzxx, r8.xyxx
        dp3 r0.w, r6.xyzx, r6.xyzx
        rsq r0.w, r0.w
        mul r2.xzw, r0.wwww, r6.xxyz
        add r0.w, -r4.w, l(1.000000)
        dp3 r4.w, r10.xzwx, r5.xyzx
        dp3 r5.w, r10.xzwx, -r4.xyzx
        dp3 r4.x, -r4.xyzx, r5.xyzx
        mad r4.y, r4.x, l(2.000000), l(2.000000)
        rsq r4.y, r4.y
        lt r4.z, l(0.000000), r2.y
        mad r6.x, -r2.y, r2.y, l(1.000000)
        sqrt r6.x, r6.x
        dp2 r6.y, r5.wwww, r4.wwww
        add r6.y, -r4.x, r6.y
        ge r6.z, r6.y, r6.x
        mov r8.x, |r5.w|
        mad r6.w, -r6.y, r6.y, l(1.000000)
        rsq r6.w, r6.w
        mul r6.w, r2.y, r6.w
        dp2 r7.w, r5.wwww, r5.wwww
        add r7.w, r7.w, l(-1.000000)
        mad r7.w, -r6.y, r4.x, r7.w
        mul r9.z, r4.x, r6.x
        mad r7.w, r6.w, r7.w, r9.z
        mad r9.z, r7.w, l(2.000000), l(2.000000)
        rsq r9.z, r9.z
        mad r6.y, -r6.y, r4.w, r5.w
        mul r6.x, r4.w, r6.x
        mad r6.x, r6.w, r6.y, r6.x
        add r6.x, r5.w, r6.x
        mul_sat r6.y, r9.z, r6.x
        mad_sat r6.x, r9.z, r7.w, r9.z
        mov r8.yz, l(0,1.000000,1.000000,0)
        movc r6.xy, r6.zzzz, r8.xyxx, r6.xyxx
        add r4.w, r4.w, r5.w
        mul_sat r10.y, r4.y, r4.w
        mad_sat r10.x, r4.y, r4.x, r4.y
        movc r4.xy, r4.zzzz, r6.xyxx, r10.xyxx
        add r4.w, r8.x, l(0.000010)
        min r4.w, r4.w, l(1.000000)
        add r5.w, -r4.x, l(1.000000)
        mul r6.x, r5.w, r5.w
        mul r6.x, r6.x, r6.x
        mad r6.y, -r6.x, r5.w, l(1.000000)
        mul r6.y, r6.y, r11.x
        mul r5.w, r5.w, r6.x
        mad r5.w, r6.y, l(0.080000), r5.w
        mul r0.y, r0.y, r0.y
        lt r6.x, l(0.000000), r1.y
        mul r1.y, r1.y, r1.y
        mad r6.y, r4.x, l(3.600000), l(0.400000)
        div r1.y, r1.y, r6.y
        mul r6.y, r0.y, r0.y
        mad r0.y, r0.y, r0.y, r1.y
        min r0.y, r0.y, l(1.000000)
        movc r8.w, r6.x, r0.y, r6.y
        mul r0.y, r2.y, l(0.250000)
        ishr r1.y, r8.w, l(1)
        iadd r1.y, r1.y, l(0x1fbd1df5)
        mad r1.y, r1.y, l(3.000000), r2.y
        mul r0.y, r0.y, r1.y
        add r1.y, r4.x, l(0.001000)
        div r0.y, r0.y, r1.y
        add r6.y, r0.y, r8.w
        div r6.x, r8.w, r6.y
        movc r4.xz, r4.zzzz, r6.xxyx, r8.zzwz
        lt r0.y, r3.w, l(1.000000)
        add r2.y, -r3.w, l(1.000100)
        add r3.w, r3.w, l(1.000000)
        div r2.y, r2.y, r3.w
        sqrt r2.y, r2.y
        mul r3.w, r2.y, l(0.250000)
        ishr r6.x, r4.z, l(1)
        iadd r6.x, r6.x, l(0x1fbd1df5)
        mad r2.y, r6.x, l(3.000000), r2.y
        mul r2.y, r2.y, r3.w
        div r1.y, r2.y, r1.y
        add r1.y, r1.y, r4.z
        div r1.y, r4.z, r1.y
        sqrt r1.y, r1.y
        mul r1.y, r1.y, r4.x
        movc r0.y, r0.y, r1.y, r4.x
        sqrt r1.y, r8.w
        add r2.y, -r1.y, l(1.000000)
        mad r3.w, r4.y, r8.w, -r4.y
        mad r3.w, r3.w, r4.y, l(1.000000)
        mul r4.x, r1.z, r0.x
        mul r3.w, r3.w, r3.w
        mul r3.w, r3.w, l(3.141593)
        div r3.w, r8.w, r3.w
        mul r0.y, r0.y, r3.w
        mul r0.y, r0.y, r4.x
        mad r3.w, r4.w, r2.y, r1.y
        mad r1.y, r1.z, r2.y, r1.y
        mul r2.y, r1.z, r3.w
        mad r1.y, r4.w, r1.y, r2.y
        div r1.y, l(0.500000), r1.y
        mul r0.y, r0.y, r1.y
        mul r14.xyz, r5.wwww, r0.yyyy
        dp3_sat r0.y, r2.xzwx, r5.xyzx
        mad r4.xy, r0.yyyy, l(-11.000000, -11.000000, 0.000000, 0.000000), l(12.000000, 13.000000, 0.000000, 0.000000)
        mul r1.y, r4.y, l(0.200000)
        mul r1.x, r1.x, r0.w
        mad r3.xyz, -r3.xyzx, r0.zzzz, -r2.xzwx
        mad r2.xyz, r1.xxxx, r3.xyzx, r2.xzwx
        dp3 r0.z, r2.xyzx, r2.xyzx
        rsq r0.z, r0.z
        mul r2.xyz, r0.zzzz, r2.xyzx
        dp3_sat r0.z, r2.xyzx, r5.xyzx
        log r0.z, r0.z
        mul r0.z, r0.z, r4.x
        exp r0.z, r0.z
        mad r0.z, r1.y, r0.z, l(0.800000)
        mad r0.y, r0.y, r0.z, -r1.z
        mad r0.y, r0.w, r0.y, r1.z
        mul r0.x, r0.y, r0.x
        add r0.y, -r5.w, l(1.000000)
        mul r0.x, r0.y, r0.x
        mul r0.xyz, r0.xxxx, r12.xyzx
        mul r15.xyz, r0.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
        mov r13.xyz, l(0,0,0,0)
        break 
        default 
        mov r13.xyz, l(0,0,0,0)
        mov r14.xyz, l(0,0,0,0)
        mov r15.xyz, l(0,0,0,0)
        break 
      endswitch 
      mul r0.xyz, r7.xyzx, r9.yyyy
      eq r0.w, l(0.000000), cb0[228].z
      mul r1.xyz, r0.xyzx, r13.xyzx
      dp3 r2.x, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
      and r2.x, r0.w, r2.x
      and r2.x, r1.w, r2.x
      mul r2.yzw, r7.xxyz, r9.xxxx
      mul r3.xyz, r2.yzwy, r15.xyzx
      dp3 r3.x, r3.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
      add r3.x, r2.x, r3.x
      movc r0.w, r0.w, r3.x, r2.x
      and r0.w, r0.w, r1.w
      mad r1.xyz, r15.xyzx, r2.yzwy, r1.xyzx
      mul r2.xyz, r14.xyzx, cb1[5].wwww
      mul r2.xyz, r0.xyzx, r2.xyzx
    else 
      mov r1.xyz, l(0,0,0,0)
      mov r2.xyz, l(0,0,0,0)
      mov r0.w, l(0)
    endif 
  else 
    mov r1.xyz, l(0,0,0,0)
    mov r2.xyz, l(0,0,0,0)
    mov r0.w, l(0)
  endif 
  eq r0.x, l(0.000000), cb0[228].z
  and r1.w, r0.w, r0.x
  mov r2.w, l(0)
  add r0.xyzw, r1.xyzw, r2.xyzw
else 
  mov r0.xyzw, l(0,0,0,0)
endif 
mul o0.xyzw, r0.xyzw, cb0[136].yyyy
ret 
// Approximately 2297 instruction slots used
