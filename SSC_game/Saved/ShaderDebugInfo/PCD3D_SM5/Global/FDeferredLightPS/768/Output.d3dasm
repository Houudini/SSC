//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_TranslatedWorldToClip;// Offset:    0 Size:    64
//   row_major float4x4 View_View_ViewToClip;// Offset:  512 Size:    64
//   row_major float4x4 View_View_ClipToView;// Offset:  640 Size:    64
//   float4 View_View_InvDeviceZToWorldZTransform;// Offset: 1136 Size:    16
//   float4 View_View_ScreenPositionScaleBias;// Offset: 1152 Size:    16
//   float3 View_View_TranslatedWorldCameraOrigin;// Offset: 1184 Size:    12
//   float4 View_View_BufferSizeAndInvSize;// Offset: 2112 Size:    16
//   float View_View_PreExposure;       // Offset: 2180 Size:     4
//   float4 View_View_DiffuseOverrideParameter;// Offset: 2192 Size:    16
//   float4 View_View_SpecularOverrideParameter;// Offset: 2208 Size:    16
//   uint View_View_StateFrameIndexMod8;// Offset: 2320 Size:     4
//   float4 View_View_TemporalAAParams; // Offset: 2448 Size:    16
//   float View_View_bCheckerboardSubsurfaceProfileRendering;// Offset: 3656 Size:     4
//   float View_View_MinRoughness;      // Offset: 3928 Size:     4
//   float View_View_bSubsurfacePostprocessEnabled;// Offset: 3964 Size:     4
//   float View_View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;// Offset: 4556 Size:     4
//
// }
//
// cbuffer DeferredLightUniforms
// {
//
//   float4 DeferredLightUniforms_DeferredLightUniforms_ShadowMapChannelMask;// Offset:    0 Size:    16
//   float2 DeferredLightUniforms_DeferredLightUniforms_DistanceFadeMAD;// Offset:   16 Size:     8
//   float DeferredLightUniforms_DeferredLightUniforms_ContactShadowLength;// Offset:   24 Size:     4
//   float DeferredLightUniforms_DeferredLightUniforms_ContactShadowCastingIntensity;// Offset:   28 Size:     4
//   float DeferredLightUniforms_DeferredLightUniforms_ContactShadowNonCastingIntensity;// Offset:   32 Size:     4
//   uint DeferredLightUniforms_DeferredLightUniforms_ShadowedBits;// Offset:   40 Size:     4
//   float3 DeferredLightUniforms_DeferredLightUniforms_Color;// Offset:   64 Size:    12
//   float3 DeferredLightUniforms_DeferredLightUniforms_Direction;// Offset:   80 Size:    12
//   float DeferredLightUniforms_DeferredLightUniforms_SpecularScale;// Offset:   92 Size:     4
//   float DeferredLightUniforms_DeferredLightUniforms_SourceRadius;// Offset:  108 Size:     4
//   float DeferredLightUniforms_DeferredLightUniforms_SoftSourceRadius;// Offset:  120 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_PreIntegratedBRDFSampler     sampler      NA          NA             s0      1 
// SceneTexturesStruct_PointClampSampler    sampler      NA          NA             s1      1 
// LightAttenuationTextureSampler    sampler      NA          NA             s2      1 
// View_PreIntegratedBRDF            texture  float4          2d             t0      1 
// View_SSProfilesTexture            texture  float4          2d             t1      1 
// SceneTexturesStruct_SceneDepthTexture    texture  float4          2d             t2      1 
// SceneTexturesStruct_GBufferATexture    texture  float4          2d             t3      1 
// SceneTexturesStruct_GBufferBTexture    texture  float4          2d             t4      1 
// SceneTexturesStruct_GBufferCTexture    texture  float4          2d             t5      1 
// SceneTexturesStruct_GBufferDTexture    texture  float4          2d             t6      1 
// SceneTexturesStruct_GBufferETexture    texture  float4          2d             t7      1 
// SceneTexturesStruct_GBufferFTexture    texture  float4          2d             t8      1 
// SceneTexturesStruct_ScreenSpaceAOTexture    texture  float4          2d             t9      1 
// LightAttenuationTexture           texture  float4          2d            t10      1 
// View                              cbuffer      NA          NA            cb0      1 
// DeferredLightUniforms             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// SV_Position              0   xyzw        2      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[285], immediateIndexed
dcl_constantbuffer CB1[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps_siv linear noperspective v2.xy, position
dcl_output o0.xyzw
dcl_temps 23
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v0.xyxx, t4.xyzw, s1, l(0.000000)
mad r0.w, r0.w, l(255.000000), l(0.500000)
ftou r0.w, r0.w
and r1.x, r0.w, l(15)
if_nz r1.x
  sample_l_indexable(texture2d)(float,float,float,float) r1.y, v0.xyxx, t2.yxzw, s1, l(0.000000)
  mad r1.z, r1.y, cb0[71].x, cb0[71].y
  mad r1.y, r1.y, cb0[71].z, -cb0[71].w
  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
  add r1.y, r1.y, r1.z
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t6.xyzw, s1, l(0.000000)
  ushr r1.z, r0.w, l(4)
  ieq r3.xyzw, r1.xxxx, l(2, 3, 5, 6)
  or r1.w, r3.y, r3.x
  ieq r4.xyzw, r1.xxxx, l(7, 9, 4, 8)
  or r3.x, r1.w, r4.z
  or r3.x, r3.z, r3.x
  or r3.x, r3.w, r3.x
  or r3.x, r4.x, r3.x
  or r3.x, r4.w, r3.x
  or r3.x, r4.y, r3.x
  and r2.w, r2.w, r3.x
  dp3 r3.y, v1.xyzx, v1.xyzx
  rsq r3.y, r3.y
  mul r5.xyz, r3.yyyy, v1.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, v0.xyxx, t10.xyzw, s2, l(0.000000)
  mul r7.xyzw, r6.xyzw, r6.xyzw
  mul r3.y, r1.y, cb0[41].y
  if_nz cb1[2].z
    sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, v0.xyxx, t7.xyzw, s1, l(0.000000)
    and r4.zw, r1.zzzz, l(0, 0, 2, 4)
    movc r1.z, r4.w, l(0), l(1.000000)
    movc r8.xyzw, r4.zzzz, r1.zzzz, r8.xyzw
    dp4 r1.z, r8.xyzw, cb1[0].xyzw
    dp4 r4.z, cb1[0].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    add r1.z, r1.z, l(-1.000000)
    mad r1.z, r4.z, r1.z, l(1.000000)
    mad_sat r4.z, r1.y, cb1[1].x, cb1[1].y
    mul r4.z, r4.z, r4.z
    mad r6.xy, -r6.yxyy, r6.yxyy, r1.zzzz
    mad r4.zw, r4.zzzz, r6.xxxy, r7.yyyx
    ult r1.z, l(1), cb1[2].z
    lt r5.w, l(0.000000), |cb1[1].z|
    and r1.z, r1.z, r5.w
    lt r5.w, cb1[1].z, l(0.000000)
    movc r5.w, r5.w, l(1.000000), r3.y
    mul r5.w, r5.w, |cb1[1].z|
    and r1.z, r1.z, r5.w
    ne r6.xy, r7.wyww, r7.wyww
    min r5.w, r7.w, r7.y
    movc r5.w, r6.y, r7.w, r5.w
    movc r5.w, r6.x, r7.y, r5.w
    ne r6.y, r4.z, r4.z
    min r6.z, r7.w, r4.z
    movc r6.y, r6.y, r7.w, r6.z
    movc r4.z, r6.x, r4.z, r6.y
    mul r6.xy, r7.zzzz, r4.zwzz
  else 
    sample_l_indexable(texture2d)(float,float,float,float) r6.y, v0.xyxx, t9.yxzw, s1, l(0.000000)
    mov r6.x, l(1.000000)
    mov r5.w, l(1.000000)
    mov r1.z, l(0)
  endif 
  ult r4.z, cb1[2].z, l(2)
  and r4.z, r4.x, r4.z
  mul r3.y, r3.y, l(0.200000)
  movc r1.z, r4.z, r3.y, r1.z
  movc r1.z, r4.y, l(0.500000), r1.z
  lt r3.y, l(0.000000), r1.z
  if_nz r3.y
    mad r7.xyz, v1.xyzx, r1.yyyy, cb0[74].xyzx
    mul r8.xyzw, r7.yyyy, cb0[1].xyzw
    mad r8.xyzw, r7.xxxx, cb0[0].xyzw, r8.xyzw
    mad r7.xyzw, r7.zzzz, cb0[2].xyzw, r8.xyzw
    add r7.xyzw, r7.xyzw, cb0[3].xyzw
    mul r8.xyz, r1.zzzz, cb1[5].xyzx
    mul r9.xyzw, r8.yyyy, cb0[1].xyzw
    mad r9.xyzw, r8.xxxx, cb0[0].xyzw, r9.xyzw
    mad r8.xyzw, r8.zzzz, cb0[2].xyzw, r9.xyzw
    add r8.xyzw, r7.xyzw, r8.xyzw
    div r9.xyz, r7.xyzx, r7.wwww
    div r8.xyz, r8.xyzx, r8.wwww
    add r8.xyz, -r9.xyzx, r8.xyzx
    mad r9.xy, r9.xyxx, cb0[72].xyxx, cb0[72].wzww
    mul r8.xy, r8.xyxx, cb0[72].xyxx
    mad r4.zw, r1.zzzz, cb0[34].zzzw, r7.zzzw
    div r1.y, r4.z, r4.w
    add r1.y, -r9.z, r1.y
    mul r3.y, |r1.y|, l(0.250000)
    utof r4.z, cb0[145].x
    mad r4.zw, r4.zzzz, l(0.000000, 0.000000, 32.665001, 11.815000), v2.xxxy
    dp2 r4.z, r4.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
    frc r4.z, r4.z
    mul r4.z, r4.z, l(52.982918)
    frc r4.z, r4.z
    add r4.z, r4.z, l(-0.500000)
    mad r7.xyzw, r4.zzzz, l(0.125000, 0.125000, 0.125000, 0.125000), l(0.125000, 0.250000, 0.375000, 0.500000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r9.xyxx, t2.yzwx, s1, l(0.000000)
    mad r10.xyz, r8.xyzx, r7.xxxx, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.z, r10.xyxx, t2.yzxw, s1, l(0.000000)
    add r6.w, -r6.z, r10.z
    mad r6.w, |r1.y|, l(0.250000), r6.w
    lt r6.w, |r6.w|, r3.y
    ne r6.z, r4.w, r6.z
    and r6.z, r6.z, r6.w
    movc r6.z, r6.z, r7.x, l(-1.000000)
    mad r10.xyz, r8.xyzx, r7.yyyy, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r10.xyxx, t2.yzwx, s1, l(0.000000)
    add r7.x, -r6.w, r10.z
    mad r7.x, |r1.y|, l(0.250000), r7.x
    lt r7.x, |r7.x|, r3.y
    ne r6.w, r4.w, r6.w
    and r6.w, r6.w, r7.x
    lt r7.x, r6.z, l(0.000000)
    and r6.w, r6.w, r7.x
    movc r6.z, r6.w, r7.y, r6.z
    mad r10.xyz, r8.xyzx, r7.zzzz, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r10.xyxx, t2.yzwx, s1, l(0.000000)
    add r7.x, -r6.w, r10.z
    mad r7.x, |r1.y|, l(0.250000), r7.x
    lt r7.x, |r7.x|, r3.y
    ne r6.w, r4.w, r6.w
    and r6.w, r6.w, r7.x
    lt r7.x, r6.z, l(0.000000)
    and r6.w, r6.w, r7.x
    movc r6.z, r6.w, r7.z, r6.z
    mad r7.xyz, r8.xyzx, r7.wwww, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t2.yzwx, s1, l(0.000000)
    add r7.x, -r6.w, r7.z
    mad r7.x, |r1.y|, l(0.250000), r7.x
    lt r7.x, |r7.x|, r3.y
    ne r6.w, r4.w, r6.w
    and r6.w, r6.w, r7.x
    lt r7.x, r6.z, l(0.000000)
    and r6.w, r6.w, r7.x
    movc r6.z, r6.w, r7.w, r6.z
    mad r7.xyzw, r4.zzzz, l(0.125000, 0.125000, 0.125000, 0.125000), l(0.625000, 0.750000, 0.875000, 1.000000)
    mad r10.xyz, r8.xyzx, r7.xxxx, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.z, r10.xyxx, t2.yzxw, s1, l(0.000000)
    add r6.w, -r4.z, r10.z
    mad r6.w, |r1.y|, l(0.250000), r6.w
    lt r6.w, |r6.w|, r3.y
    ne r4.z, r4.w, r4.z
    and r4.z, r4.z, r6.w
    lt r6.w, r6.z, l(0.000000)
    and r4.z, r4.z, r6.w
    movc r4.z, r4.z, r7.x, r6.z
    mad r10.xyz, r8.xyzx, r7.yyyy, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.z, r10.xyxx, t2.yzxw, s1, l(0.000000)
    add r6.w, -r6.z, r10.z
    mad r6.w, |r1.y|, l(0.250000), r6.w
    lt r6.w, |r6.w|, r3.y
    ne r6.z, r4.w, r6.z
    and r6.z, r6.z, r6.w
    lt r6.w, r4.z, l(0.000000)
    and r6.z, r6.w, r6.z
    movc r4.z, r6.z, r7.y, r4.z
    mad r10.xyz, r8.xyzx, r7.zzzz, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.z, r10.xyxx, t2.yzxw, s1, l(0.000000)
    add r6.w, -r6.z, r10.z
    mad r6.w, |r1.y|, l(0.250000), r6.w
    lt r6.w, |r6.w|, r3.y
    ne r6.z, r4.w, r6.z
    and r6.z, r6.z, r6.w
    lt r6.w, r4.z, l(0.000000)
    and r6.z, r6.w, r6.z
    movc r4.z, r6.z, r7.z, r4.z
    mad r7.xyz, r8.xyzx, r7.wwww, r9.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.z, r7.xyxx, t2.yzxw, s1, l(0.000000)
    add r6.w, -r6.z, r7.z
    mad r1.y, |r1.y|, l(0.250000), r6.w
    lt r1.y, |r1.y|, r3.y
    ne r3.y, r4.w, r6.z
    and r1.y, r1.y, r3.y
    lt r3.y, r4.z, l(0.000000)
    and r1.y, r1.y, r3.y
    movc r1.y, r1.y, r7.w, r4.z
    lt r3.y, l(0.000000), r1.y
    if_nz r3.y
      mad r4.zw, r8.xxxy, r1.yyyy, r9.xxxy
      lt r6.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r4.zzzw
      lt r7.xy, r4.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r3.y, r4.zwzz, t3.xwyz, s1, l(0.000000)
      mul r3.y, r3.y, l(3.999000)
      ftou r3.y, r3.y
      and r3.y, r3.y, l(1)
      ine r3.y, r3.y, l(0)
      sample_l_indexable(texture2d)(float,float,float,float) r4.z, r4.zwzz, t4.xywz, s1, l(0.000000)
      mad r4.z, r4.z, l(255.000000), l(0.500000)
      ftou r4.z, r4.z
      and r4.z, r4.z, l(15)
      ine r4.z, r4.z, l(9)
      and r3.y, r3.y, r4.z
      and r4.zw, r6.zzzw, r7.xxxy
      and r4.z, r4.w, r4.z
      mul r1.y, r1.z, r1.y
      movc r1.y, r4.z, r1.y, l(-1.000000)
    else 
      mov r3.y, l(0)
      mov r1.y, l(-1.000000)
    endif 
    lt r1.z, l(0.000000), r1.y
    movc r3.y, r3.y, cb1[1].w, cb1[2].x
    lt r4.z, l(0.000000), r3.y
    or r1.w, r3.z, r1.w
    or r1.w, r3.w, r1.w
    or r1.w, r4.x, r1.w
    or r1.w, r4.y, r1.w
    and r1.w, r1.w, r4.z
    ine r4.xzw, r1.xxxx, l(7, 0, 9, 5)
    and r1.w, r1.w, r4.x
    and r1.w, r4.z, r1.w
    and r1.w, r4.w, r1.w
    if_nz r1.w
      min r1.w, r2.w, l(0.990000)
      add r1.w, -r1.w, l(1.000000)
      log r1.w, r1.w
      mul r1.y, r1.y, r1.w
      mul r1.y, r1.y, l(0.050000)
      exp r1.y, r1.y
      min r1.y, r1.y, l(1.000000)
      add r1.y, -r1.y, l(1.000000)
      mul r3.y, r1.y, r3.y
    endif 
    add r1.y, -r3.y, l(1.000000)
    mul r1.yw, r1.yyyy, r6.xxxy
    movc r6.xy, r1.zzzz, r1.ywyy, r6.xyxx
  endif 
  add r1.y, r6.x, r6.y
  lt r1.y, l(0.000000), r1.y
  if_nz r1.y
    sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, v0.xyxx, t8.xyzw, s1, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r1.yzw, v0.xyxx, t3.wxyz, s1, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.xzw, v0.xyxx, t5.xwyz, s1, l(0.000000)
    mul r3.yw, v0.xxxy, cb0[132].xxxy
    ftou r3.yw, r3.yyyw
    iadd r3.y, r3.w, r3.y
    ftou r3.w, cb0[153].x
    iadd r3.y, r3.w, r3.y
    and r3.y, r3.y, l(1)
    and r2.xyz, r2.xyzx, r3.xxxx
    mad r1.yzw, r1.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
    dp3 r3.x, r1.yzwy, r1.yzwy
    rsq r3.x, r3.x
    mul r8.xyz, r1.yzwy, r3.xxxx
    movc r3.w, r4.y, l(0), r0.x
    mul r6.z, r0.y, l(0.080000)
    mad r9.xyz, -r0.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r4.xzwx
    mad r9.yzw, r3.wwww, r9.xxyz, r6.zzzz
    or r3.z, r3.z, r4.y
    ne r4.y, l(0.000000), cb0[247].w
    lt r6.z, l(0.000000), cb0[247].w
    lt r6.w, l(0.000000), cb0[228].z
    and r6.z, r6.w, r6.z
    movc r10.xy, r3.yyyy, l(0,1.000000,0,0), l(1.000000,0,0,0)
    mul r11.x, r0.y, r10.x
    mul r11.yzw, r9.yyzw, r10.xxxx
    movc r10.xzw, r4.yyyy, l(1.000000,0,1.000000,1.000000), r4.xxzw
    movc r10.xyz, r6.zzzz, r10.yyyy, r10.xzwx
    mov r9.x, r0.y
    movc r11.xyzw, r6.zzzz, r11.xyzw, r9.xyzw
    movc r4.xyz, r3.zzzz, r10.xyzx, r4.xzwx
    movc r9.xyzw, r3.zzzz, r11.xyzw, r9.xyzw
    mad r10.xyz, -r4.xyzx, r3.wwww, r4.xyzx
    mad r10.xyz, r10.xyzx, cb0[137].wwww, cb0[137].xyzx
    mad r9.yzw, r9.yyzw, cb0[138].wwww, cb0[138].xxyz
    ubfe r0.y, l(1), l(4), r0.w
    mad r7.xyzw, r7.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    dp3 r3.y, r7.xyzx, r7.xyzx
    rsq r3.y, r3.y
    mul r7.xyz, r3.yyyy, r7.xyzx
    movc r7.xyzw, r0.yyyy, r7.xyzw, l(0,0,0,0)
    max r0.y, r0.z, cb0[245].z
    dp3 r0.z, cb1[5].xyzx, cb1[5].xyzx
    rsq r3.y, r0.z
    mul r11.xyz, r3.yyyy, cb1[5].xyzx
    dp3 r12.x, r8.xyzx, r11.xyzx
    lt r4.w, l(0.000000), cb1[6].w
    mul r6.z, cb1[6].w, cb1[6].w
    add r0.z, r0.z, l(1.000000)
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    mul r0.z, r0.z, r6.z
    min r0.z, r0.z, l(1.000000)
    sqrt r0.z, r0.z
    lt r6.z, r12.x, r0.z
    ne r6.w, r12.x, r12.x
    max r8.w, -r0.z, r12.x
    movc r6.w, r6.w, -r0.z, r8.w
    add r6.w, r0.z, r6.w
    mul r6.w, r6.w, r6.w
    mul r0.z, r0.z, l(4.000000)
    div r0.z, r6.w, r0.z
    movc r0.z, r6.z, r0.z, r12.x
    movc_sat r13.z, r4.w, r0.z, r12.x
    max r0.z, r0.y, cb0[245].z
    mul r4.w, r3.y, cb1[6].w
    mad r0.z, -r0.z, r0.z, l(1.000000)
    mul_sat r0.z, r0.z, r4.w
    mul_sat r3.y, r3.y, cb1[7].z
    switch r1.x
      case l(1)
      and r1.x, r0.w, l(16)
      if_nz r1.x
        mul r17.xyz, r7.yzxy, r8.zxyz
        mad r17.xyz, r8.yzxy, r7.zxyz, -r17.xyzx
        dp3 r4.w, r17.xyzx, r17.xyzx
        rsq r4.w, r4.w
        mul r17.xyz, r4.wwww, r17.xyzx
        dp3 r4.w, r8.xyzx, -r5.xyzx
        dp3 r6.z, -r5.xyzx, r11.xyzx
        mad r6.w, r6.z, l(2.000000), l(2.000000)
        rsq r6.w, r6.w
        add r8.w, r4.w, r12.x
        mul_sat r8.w, r6.w, r8.w
        mad_sat r6.z, r6.w, r6.z, r6.w
        dp3 r18.x, r7.xyzx, -r5.xyzx
        dp3 r18.y, r7.xyzx, r11.xyzx
        add r10.w, r18.x, r18.y
        mul r18.z, r6.w, r10.w
        dp3 r18.w, r17.xyzx, -r5.xyzx
        dp3 r17.x, r17.xyzx, r11.xyzx
        add r10.w, r18.w, r17.x
        mul r17.y, r6.w, r10.w
      else 
        dp3 r4.w, r8.xyzx, -r5.xyzx
        dp3 r6.w, -r5.xyzx, r11.xyzx
        mad r10.w, r6.w, l(2.000000), l(2.000000)
        rsq r10.w, r10.w
        add r11.w, r4.w, r12.x
        mul_sat r8.w, r10.w, r11.w
        mad_sat r6.z, r10.w, r6.w, r10.w
        lt r10.w, l(0.000000), r0.z
        if_nz r10.w
          mad r10.w, -r0.z, r0.z, l(1.000000)
          sqrt r10.w, r10.w
          dp2 r11.w, r4.wwww, r12.xxxx
          add r12.w, -r6.w, r11.w
          ge r13.w, r12.w, r10.w
          if_nz r13.w
            mov r8.w, l(1.000000)
            mov r6.z, |r4.w|
          else 
            mad r13.w, -r12.w, r12.w, l(1.000000)
            rsq r13.w, r13.w
            mul r13.w, r0.z, r13.w
            mad r14.w, -r12.w, r12.x, r4.w
            mul r15.w, r13.w, r14.w
            dp2 r16.w, r4.wwww, r4.wwww
            add r16.w, r16.w, l(-1.000000)
            mad r12.w, -r12.w, r6.w, r16.w
            mul r16.w, r12.w, r13.w
            mad r17.z, -r12.x, r12.x, l(1.000000)
            mad r17.z, -r4.w, r4.w, r17.z
            mad r17.z, -r6.w, r6.w, r17.z
            mad_sat r11.w, r11.w, r6.w, r17.z
            sqrt r11.w, r11.w
            mul r11.w, r11.w, r13.w
            mul r17.z, r4.w, r11.w
            add r17.w, r17.z, r17.z
            mad r19.x, r12.x, r10.w, r4.w
            mad r14.w, r13.w, r14.w, r19.x
            mul r19.y, r6.w, r10.w
            mad r12.w, r13.w, r12.w, r19.y
            add r12.w, r12.w, l(1.000000)
            mul r13.w, r11.w, r12.w
            mul r19.y, r12.w, r14.w
            mul r19.z, r14.w, r17.w
            mul r17.z, r17.z, r14.w
            mul r19.w, r13.w, l(-0.500000)
            mad r17.z, r17.z, l(0.500000), r19.w
            mul r17.z, r17.z, r19.y
            mad r19.w, r13.w, l(-2.000000), r19.z
            mul r13.w, r13.w, r13.w
            mad r13.w, r19.z, r19.w, r13.w
            mul r19.z, r12.w, r12.w
            mad r12.w, r6.w, r10.w, r12.w
            mad r12.w, r12.w, l(-0.500000), l(-0.500000)
            mul r19.x, r19.z, r19.x
            mad r12.w, r19.y, r12.w, r19.x
            mad r12.w, r14.w, r12.w, r13.w
            add r13.w, r17.z, r17.z
            mul r14.w, r12.w, r12.w
            mad r14.w, r17.z, r17.z, r14.w
            div r13.w, r13.w, r14.w
            mul r12.w, r12.w, r13.w
            mad r13.w, -r13.w, r17.z, l(1.000000)
            mul r14.w, r15.w, r13.w
            mad r11.w, r12.w, r11.w, r14.w
            mul r13.w, r16.w, r13.w
            mad r12.w, r12.w, r17.w, r13.w
            mad r11.w, r12.x, r10.w, r11.w
            mad r6.w, r6.w, r10.w, r12.w
            mad r10.w, r6.w, l(2.000000), l(2.000000)
            rsq r10.w, r10.w
            add r11.w, r4.w, r11.w
            mul_sat r8.w, r10.w, r11.w
            mad_sat r6.z, r10.w, r6.w, r10.w
          endif 
        endif 
        mov r18.xyzw, l(0,0,0,0)
        mov r17.xy, l(0,0,0,0)
      endif 
      add r4.w, |r4.w|, l(0.000010)
      min r19.z, r4.w, l(1.000000)
      mul r20.xyz, r10.xyzx, r13.zzzz
      mul r14.xyz, r20.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
      if_nz r1.x
        mul r1.x, r0.y, r0.y
        add r4.w, r7.w, l(1.000000)
        mul r4.w, r1.x, r4.w
        ne r6.w, r4.w, r4.w
        max r4.w, r4.w, l(0.001000)
        movc r4.w, r6.w, l(0.001000), r4.w
        add r6.w, -r7.w, l(1.000000)
        mul r1.x, r1.x, r6.w
        ne r6.w, r1.x, r1.x
        max r1.x, r1.x, l(0.001000)
        movc r1.x, r6.w, l(0.001000), r1.x
        mul r6.w, r1.x, r4.w
        mul r20.xy, r18.zwzz, r1.xxxx
        mul r20.z, r17.y, r4.w
        mul r20.w, r8.w, r6.w
        dp3 r10.w, r20.xzwx, r20.xzwx
        mul r11.w, r6.w, l(0.318310)
        div r6.w, r6.w, r10.w
        mul r6.w, r6.w, r6.w
        mul r6.w, r6.w, r11.w
        mul r19.xy, r18.xyxx, r4.wwww
        mov r19.w, r20.y
        dp3 r4.w, r19.xzwx, r19.xzwx
        sqrt r4.w, r4.w
        mul r13.y, r17.x, r1.x
        mov r13.x, r19.y
        dp3 r1.x, r13.xyzx, r13.xyzx
        sqrt r1.x, r1.x
        mul r4.w, r4.w, r13.z
        mad r1.x, r19.z, r1.x, r4.w
        div r1.x, l(0.500000), r1.x
        add r4.w, -r6.z, l(1.000000)
        mul r10.w, r4.w, r4.w
        mul r10.w, r10.w, r10.w
        mul r11.w, r4.w, r10.w
        mul_sat r12.w, r9.z, l(50.000000)
        mad r4.w, -r10.w, r4.w, l(1.000000)
        mul r13.xyw, r4.wwww, r9.yzyw
        mad r13.xyw, r12.wwww, r11.wwww, r13.xyxw
        mul r1.x, r1.x, r6.w
        mul r13.xyw, r13.xyxw, r1.xxxx
        mul r15.xyz, r13.xywx, r13.zzzz
      else 
        mul r1.x, r0.y, r0.y
        mul r4.w, r1.x, r1.x
        lt r6.w, l(0.000000), r3.y
        mul r10.w, r3.y, r3.y
        mad r11.w, r6.z, l(3.600000), l(0.400000)
        div r10.w, r10.w, r11.w
        mad r1.x, r1.x, r1.x, r10.w
        min r1.x, r1.x, l(1.000000)
        movc r1.x, r6.w, r1.x, r4.w
        lt r4.w, l(0.000000), r0.z
        mul r6.w, r0.z, l(0.250000)
        ishr r10.w, r1.x, l(1)
        iadd r10.w, r10.w, l(0x1fbd1df5)
        mad r10.w, r10.w, l(3.000000), r0.z
        mul r6.w, r6.w, r10.w
        add r10.w, r6.z, l(0.001000)
        div r6.w, r6.w, r10.w
        add r6.w, r1.x, r6.w
        div r6.w, r1.x, r6.w
        movc r4.w, r4.w, r6.w, l(1.000000)
        mad r6.w, r8.w, r1.x, -r8.w
        mad r6.w, r6.w, r8.w, l(1.000000)
        mul r6.w, r6.w, r6.w
        mul r6.w, r6.w, l(3.141593)
        div r6.w, r1.x, r6.w
        mul r4.w, r4.w, r6.w
        sqrt r1.x, r1.x
        add r6.w, -r1.x, l(1.000000)
        mad r8.w, r19.z, r6.w, r1.x
        mad r1.x, r13.z, r6.w, r1.x
        mul r6.w, r8.w, r13.z
        mad r1.x, r19.z, r1.x, r6.w
        div r1.x, l(0.500000), r1.x
        add r6.z, -r6.z, l(1.000000)
        mul r6.w, r6.z, r6.z
        mul r6.w, r6.w, r6.w
        mul r8.w, r6.z, r6.w
        mul_sat r10.w, r9.z, l(50.000000)
        mad r6.z, -r6.w, r6.z, l(1.000000)
        mul r13.xyw, r6.zzzz, r9.yzyw
        mad r13.xyw, r10.wwww, r8.wwww, r13.xyxw
        mul r1.x, r1.x, r4.w
        mul r13.xyw, r1.xxxx, r13.xyxw
        mul r15.xyz, r13.xywx, r13.zzzz
      endif 
      mov r16.xyz, l(0,0,0,0)
      break 
      case l(10)
      and r1.x, r0.w, l(16)
      if_nz r1.x
        mul r13.xyw, r7.yzyx, r8.zxzy
        mad r13.xyw, r8.yzyx, r7.zxzy, -r13.xyxw
        dp3 r4.w, r13.xywx, r13.xywx
        rsq r4.w, r4.w
        mul r13.xyw, r4.wwww, r13.xyxw
        dp3 r4.w, r8.xyzx, -r5.xyzx
        dp3 r6.z, -r5.xyzx, r11.xyzx
        mad r6.w, r6.z, l(2.000000), l(2.000000)
        rsq r6.w, r6.w
        add r8.w, r4.w, r12.x
        mul_sat r8.w, r6.w, r8.w
        mad_sat r6.z, r6.w, r6.z, r6.w
        dp3 r17.x, r7.xyzx, -r5.xyzx
        dp3 r17.y, r7.xyzx, r11.xyzx
        add r10.w, r17.x, r17.y
        mul r17.z, r6.w, r10.w
        dp3 r17.w, r13.xywx, -r5.xyzx
        dp3 r13.x, r13.xywx, r11.xyzx
        add r10.w, r17.w, r13.x
        mul r13.y, r6.w, r10.w
      else 
        dp3 r4.w, r8.xyzx, -r5.xyzx
        dp3 r6.w, -r5.xyzx, r11.xyzx
        mad r10.w, r6.w, l(2.000000), l(2.000000)
        rsq r10.w, r10.w
        add r11.w, r4.w, r12.x
        mul_sat r8.w, r10.w, r11.w
        mad_sat r6.z, r10.w, r6.w, r10.w
        lt r10.w, l(0.000000), r0.z
        if_nz r10.w
          mad r10.w, -r0.z, r0.z, l(1.000000)
          sqrt r10.w, r10.w
          dp2 r11.w, r4.wwww, r12.xxxx
          add r12.w, -r6.w, r11.w
          ge r13.w, r12.w, r10.w
          if_nz r13.w
            mov r8.w, l(1.000000)
            mov r6.z, |r4.w|
          else 
            mad r13.w, -r12.w, r12.w, l(1.000000)
            rsq r13.w, r13.w
            mul r13.w, r0.z, r13.w
            mad r14.w, -r12.w, r12.x, r4.w
            mul r15.w, r13.w, r14.w
            dp2 r16.w, r4.wwww, r4.wwww
            add r16.w, r16.w, l(-1.000000)
            mad r12.w, -r12.w, r6.w, r16.w
            mul r16.w, r12.w, r13.w
            mad r18.x, -r12.x, r12.x, l(1.000000)
            mad r18.x, -r4.w, r4.w, r18.x
            mad r18.x, -r6.w, r6.w, r18.x
            mad_sat r11.w, r11.w, r6.w, r18.x
            sqrt r11.w, r11.w
            mul r11.w, r11.w, r13.w
            mul r18.x, r4.w, r11.w
            add r18.y, r18.x, r18.x
            mad r18.z, r12.x, r10.w, r4.w
            mad r14.w, r13.w, r14.w, r18.z
            mul r18.w, r6.w, r10.w
            mad r12.w, r13.w, r12.w, r18.w
            add r12.w, r12.w, l(1.000000)
            mul r13.w, r11.w, r12.w
            mul r18.w, r12.w, r14.w
            mul r19.x, r14.w, r18.y
            mul r18.x, r18.x, r14.w
            mul r19.y, r13.w, l(-0.500000)
            mad r18.x, r18.x, l(0.500000), r19.y
            mul r18.x, r18.x, r18.w
            mad r19.y, r13.w, l(-2.000000), r19.x
            mul r13.w, r13.w, r13.w
            mad r13.w, r19.x, r19.y, r13.w
            mul r19.x, r12.w, r12.w
            mad r12.w, r6.w, r10.w, r12.w
            mad r12.w, r12.w, l(-0.500000), l(-0.500000)
            mul r18.z, r18.z, r19.x
            mad r12.w, r18.w, r12.w, r18.z
            mad r12.w, r14.w, r12.w, r13.w
            add r13.w, r18.x, r18.x
            mul r14.w, r12.w, r12.w
            mad r14.w, r18.x, r18.x, r14.w
            div r13.w, r13.w, r14.w
            mul r12.w, r12.w, r13.w
            mad r13.w, -r13.w, r18.x, l(1.000000)
            mul r14.w, r15.w, r13.w
            mad r11.w, r12.w, r11.w, r14.w
            mul r13.w, r16.w, r13.w
            mad r12.w, r12.w, r18.y, r13.w
            mad r11.w, r12.x, r10.w, r11.w
            mad r6.w, r6.w, r10.w, r12.w
            mad r10.w, r6.w, l(2.000000), l(2.000000)
            rsq r10.w, r10.w
            add r11.w, r4.w, r11.w
            mul_sat r8.w, r10.w, r11.w
            mad_sat r6.z, r10.w, r6.w, r10.w
          endif 
        endif 
        mov r17.xyzw, l(0,0,0,0)
        mov r13.xy, l(0,0,0,0)
      endif 
      add r4.w, |r4.w|, l(0.000010)
      min r18.z, r4.w, l(1.000000)
      mul r19.xyz, r10.xyzx, r13.zzzz
      mul r14.xyz, r19.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
      if_nz r1.x
        mul r1.x, r0.y, r0.y
        add r4.w, r7.w, l(1.000000)
        mul r4.w, r1.x, r4.w
        ne r6.w, r4.w, r4.w
        max r4.w, r4.w, l(0.001000)
        movc r4.w, r6.w, l(0.001000), r4.w
        add r6.w, -r7.w, l(1.000000)
        mul r1.x, r1.x, r6.w
        ne r6.w, r1.x, r1.x
        max r1.x, r1.x, l(0.001000)
        movc r1.x, r6.w, l(0.001000), r1.x
        mul r6.w, r1.x, r4.w
        mul r19.xy, r17.zwzz, r1.xxxx
        mul r19.z, r13.y, r4.w
        mul r19.w, r8.w, r6.w
        dp3 r10.w, r19.xzwx, r19.xzwx
        mul r11.w, r6.w, l(0.318310)
        div r6.w, r6.w, r10.w
        mul r6.w, r6.w, r6.w
        mul r6.w, r6.w, r11.w
        mul r18.xy, r17.xyxx, r4.wwww
        mov r18.w, r19.y
        dp3 r4.w, r18.xzwx, r18.xzwx
        sqrt r4.w, r4.w
        mul r17.y, r13.x, r1.x
        mov r17.x, r18.y
        mov r17.z, r13.z
        dp3 r1.x, r17.xyzx, r17.xyzx
        sqrt r1.x, r1.x
        mul r4.w, r4.w, r13.z
        mad r1.x, r18.z, r1.x, r4.w
        div r1.x, l(0.500000), r1.x
        add r4.w, -r6.z, l(1.000000)
        mul r10.w, r4.w, r4.w
        mul r10.w, r10.w, r10.w
        mul r11.w, r4.w, r10.w
        mul_sat r12.w, r9.z, l(50.000000)
        mad r4.w, -r10.w, r4.w, l(1.000000)
        mul r13.xyw, r4.wwww, r9.yzyw
        mad r13.xyw, r12.wwww, r11.wwww, r13.xyxw
        mul r1.x, r1.x, r6.w
        mul r13.xyw, r13.xyxw, r1.xxxx
        mul r15.xyz, r13.xywx, r13.zzzz
      else 
        mul r1.x, r0.y, r0.y
        mul r4.w, r1.x, r1.x
        lt r6.w, l(0.000000), r3.y
        mul r10.w, r3.y, r3.y
        mad r11.w, r6.z, l(3.600000), l(0.400000)
        div r10.w, r10.w, r11.w
        mad r1.x, r1.x, r1.x, r10.w
        min r1.x, r1.x, l(1.000000)
        movc r1.x, r6.w, r1.x, r4.w
        lt r4.w, l(0.000000), r0.z
        mul r6.w, r0.z, l(0.250000)
        ishr r10.w, r1.x, l(1)
        iadd r10.w, r10.w, l(0x1fbd1df5)
        mad r10.w, r10.w, l(3.000000), r0.z
        mul r6.w, r6.w, r10.w
        add r10.w, r6.z, l(0.001000)
        div r6.w, r6.w, r10.w
        add r6.w, r1.x, r6.w
        div r6.w, r1.x, r6.w
        movc r4.w, r4.w, r6.w, l(1.000000)
        mad r6.w, r8.w, r1.x, -r8.w
        mad r6.w, r6.w, r8.w, l(1.000000)
        mul r6.w, r6.w, r6.w
        mul r6.w, r6.w, l(3.141593)
        div r6.w, r1.x, r6.w
        mul r4.w, r4.w, r6.w
        sqrt r1.x, r1.x
        add r6.w, -r1.x, l(1.000000)
        mad r8.w, r18.z, r6.w, r1.x
        mad r1.x, r13.z, r6.w, r1.x
        mul r6.w, r8.w, r13.z
        mad r1.x, r18.z, r1.x, r6.w
        div r1.x, l(0.500000), r1.x
        add r6.z, -r6.z, l(1.000000)
        mul r6.w, r6.z, r6.z
        mul r6.w, r6.w, r6.w
        mul r8.w, r6.z, r6.w
        mul_sat r10.w, r9.z, l(50.000000)
        mad r6.z, -r6.w, r6.z, l(1.000000)
        mul r13.xyw, r6.zzzz, r9.yzyw
        mad r13.xyw, r10.wwww, r8.wwww, r13.xyxw
        mul r1.x, r1.x, r4.w
        mul r13.xyw, r1.xxxx, r13.xyxw
        mul r15.xyz, r13.xywx, r13.zzzz
      endif 
      mov r16.xyz, l(0,0,0,0)
      break 
      case l(11)
      and r1.x, r0.w, l(16)
      if_nz r1.x
        mul r13.xyw, r7.yzyx, r8.zxzy
        mad r13.xyw, r8.yzyx, r7.zxzy, -r13.xyxw
        dp3 r4.w, r13.xywx, r13.xywx
        rsq r4.w, r4.w
        mul r13.xyw, r4.wwww, r13.xyxw
        dp3 r4.w, r8.xyzx, -r5.xyzx
        dp3 r6.z, -r5.xyzx, r11.xyzx
        mad r6.w, r6.z, l(2.000000), l(2.000000)
        rsq r6.w, r6.w
        add r8.w, r4.w, r12.x
        mul_sat r8.w, r6.w, r8.w
        mad_sat r6.z, r6.w, r6.z, r6.w
        dp3 r17.x, r7.xyzx, -r5.xyzx
        dp3 r17.y, r7.xyzx, r11.xyzx
        add r10.w, r17.x, r17.y
        mul r17.z, r6.w, r10.w
        dp3 r17.w, r13.xywx, -r5.xyzx
        dp3 r13.x, r13.xywx, r11.xyzx
        add r10.w, r17.w, r13.x
        mul r13.y, r6.w, r10.w
      else 
        dp3 r4.w, r8.xyzx, -r5.xyzx
        dp3 r6.w, -r5.xyzx, r11.xyzx
        mad r10.w, r6.w, l(2.000000), l(2.000000)
        rsq r10.w, r10.w
        add r11.w, r4.w, r12.x
        mul_sat r8.w, r10.w, r11.w
        mad_sat r6.z, r10.w, r6.w, r10.w
        lt r10.w, l(0.000000), r0.z
        if_nz r10.w
          mad r10.w, -r0.z, r0.z, l(1.000000)
          sqrt r10.w, r10.w
          dp2 r11.w, r4.wwww, r12.xxxx
          add r12.w, -r6.w, r11.w
          ge r13.w, r12.w, r10.w
          if_nz r13.w
            mov r8.w, l(1.000000)
            mov r6.z, |r4.w|
          else 
            mad r13.w, -r12.w, r12.w, l(1.000000)
            rsq r13.w, r13.w
            mul r13.w, r0.z, r13.w
            mad r14.w, -r12.w, r12.x, r4.w
            mul r15.w, r13.w, r14.w
            dp2 r16.w, r4.wwww, r4.wwww
            add r16.w, r16.w, l(-1.000000)
            mad r12.w, -r12.w, r6.w, r16.w
            mul r16.w, r12.w, r13.w
            mad r18.x, -r12.x, r12.x, l(1.000000)
            mad r18.x, -r4.w, r4.w, r18.x
            mad r18.x, -r6.w, r6.w, r18.x
            mad_sat r11.w, r11.w, r6.w, r18.x
            sqrt r11.w, r11.w
            mul r11.w, r11.w, r13.w
            mul r18.x, r4.w, r11.w
            add r18.y, r18.x, r18.x
            mad r18.z, r12.x, r10.w, r4.w
            mad r14.w, r13.w, r14.w, r18.z
            mul r18.w, r6.w, r10.w
            mad r12.w, r13.w, r12.w, r18.w
            add r12.w, r12.w, l(1.000000)
            mul r13.w, r11.w, r12.w
            mul r18.w, r12.w, r14.w
            mul r19.x, r14.w, r18.y
            mul r18.x, r18.x, r14.w
            mul r19.y, r13.w, l(-0.500000)
            mad r18.x, r18.x, l(0.500000), r19.y
            mul r18.x, r18.x, r18.w
            mad r19.y, r13.w, l(-2.000000), r19.x
            mul r13.w, r13.w, r13.w
            mad r13.w, r19.x, r19.y, r13.w
            mul r19.x, r12.w, r12.w
            mad r12.w, r6.w, r10.w, r12.w
            mad r12.w, r12.w, l(-0.500000), l(-0.500000)
            mul r18.z, r18.z, r19.x
            mad r12.w, r18.w, r12.w, r18.z
            mad r12.w, r14.w, r12.w, r13.w
            add r13.w, r18.x, r18.x
            mul r14.w, r12.w, r12.w
            mad r14.w, r18.x, r18.x, r14.w
            div r13.w, r13.w, r14.w
            mul r12.w, r12.w, r13.w
            mad r13.w, -r13.w, r18.x, l(1.000000)
            mul r14.w, r15.w, r13.w
            mad r11.w, r12.w, r11.w, r14.w
            mul r13.w, r16.w, r13.w
            mad r12.w, r12.w, r18.y, r13.w
            mad r11.w, r12.x, r10.w, r11.w
            mad r6.w, r6.w, r10.w, r12.w
            mad r10.w, r6.w, l(2.000000), l(2.000000)
            rsq r10.w, r10.w
            add r11.w, r4.w, r11.w
            mul_sat r8.w, r10.w, r11.w
            mad_sat r6.z, r10.w, r6.w, r10.w
          endif 
        endif 
        mov r17.xyzw, l(0,0,0,0)
        mov r13.xy, l(0,0,0,0)
      endif 
      add r4.w, |r4.w|, l(0.000010)
      min r18.z, r4.w, l(1.000000)
      mul r19.xyz, r10.xyzx, r13.zzzz
      mul r14.xyz, r19.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
      if_nz r1.x
        mul r1.x, r0.y, r0.y
        add r4.w, r7.w, l(1.000000)
        mul r4.w, r1.x, r4.w
        ne r6.w, r4.w, r4.w
        max r4.w, r4.w, l(0.001000)
        movc r4.w, r6.w, l(0.001000), r4.w
        add r6.w, -r7.w, l(1.000000)
        mul r1.x, r1.x, r6.w
        ne r6.w, r1.x, r1.x
        max r1.x, r1.x, l(0.001000)
        movc r1.x, r6.w, l(0.001000), r1.x
        mul r6.w, r1.x, r4.w
        mul r19.xy, r17.zwzz, r1.xxxx
        mul r19.z, r13.y, r4.w
        mul r19.w, r8.w, r6.w
        dp3 r10.w, r19.xzwx, r19.xzwx
        mul r11.w, r6.w, l(0.318310)
        div r6.w, r6.w, r10.w
        mul r6.w, r6.w, r6.w
        mul r6.w, r6.w, r11.w
        mul r18.xy, r17.xyxx, r4.wwww
        mov r18.w, r19.y
        dp3 r4.w, r18.xzwx, r18.xzwx
        sqrt r4.w, r4.w
        mul r17.y, r13.x, r1.x
        mov r17.x, r18.y
        mov r17.z, r13.z
        dp3 r1.x, r17.xyzx, r17.xyzx
        sqrt r1.x, r1.x
        mul r4.w, r4.w, r13.z
        mad r1.x, r18.z, r1.x, r4.w
        div r1.x, l(0.500000), r1.x
        add r4.w, -r6.z, l(1.000000)
        mul r10.w, r4.w, r4.w
        mul r10.w, r10.w, r10.w
        mul r11.w, r4.w, r10.w
        mul_sat r12.w, r9.z, l(50.000000)
        mad r4.w, -r10.w, r4.w, l(1.000000)
        mul r13.xyw, r4.wwww, r9.yzyw
        mad r13.xyw, r12.wwww, r11.wwww, r13.xyxw
        mul r1.x, r1.x, r6.w
        mul r13.xyw, r13.xyxw, r1.xxxx
        mul r15.xyz, r13.xywx, r13.zzzz
      else 
        mul r1.x, r0.y, r0.y
        mul r4.w, r1.x, r1.x
        lt r6.w, l(0.000000), r3.y
        mul r10.w, r3.y, r3.y
        mad r11.w, r6.z, l(3.600000), l(0.400000)
        div r10.w, r10.w, r11.w
        mad r1.x, r1.x, r1.x, r10.w
        min r1.x, r1.x, l(1.000000)
        movc r1.x, r6.w, r1.x, r4.w
        lt r4.w, l(0.000000), r0.z
        mul r6.w, r0.z, l(0.250000)
        ishr r10.w, r1.x, l(1)
        iadd r10.w, r10.w, l(0x1fbd1df5)
        mad r10.w, r10.w, l(3.000000), r0.z
        mul r6.w, r6.w, r10.w
        add r10.w, r6.z, l(0.001000)
        div r6.w, r6.w, r10.w
        add r6.w, r1.x, r6.w
        div r6.w, r1.x, r6.w
        movc r4.w, r4.w, r6.w, l(1.000000)
        mad r6.w, r8.w, r1.x, -r8.w
        mad r6.w, r6.w, r8.w, l(1.000000)
        mul r6.w, r6.w, r6.w
        mul r6.w, r6.w, l(3.141593)
        div r6.w, r1.x, r6.w
        mul r4.w, r4.w, r6.w
        sqrt r1.x, r1.x
        add r6.w, -r1.x, l(1.000000)
        mad r8.w, r18.z, r6.w, r1.x
        mad r1.x, r13.z, r6.w, r1.x
        mul r6.w, r8.w, r13.z
        mad r1.x, r18.z, r1.x, r6.w
        div r1.x, l(0.500000), r1.x
        add r6.z, -r6.z, l(1.000000)
        mul r6.w, r6.z, r6.z
        mul r6.w, r6.w, r6.w
        mul r8.w, r6.z, r6.w
        mul_sat r10.w, r9.z, l(50.000000)
        mad r6.z, -r6.w, r6.z, l(1.000000)
        mul r13.xyw, r6.zzzz, r9.yzyw
        mad r13.xyw, r10.wwww, r8.wwww, r13.xyxw
        mul r1.x, r1.x, r4.w
        mul r13.xyw, r1.xxxx, r13.xyxw
        mul r15.xyz, r13.xywx, r13.zzzz
      endif 
      mov r16.xyz, l(0,0,0,0)
      break 
      case l(2)
      and r1.x, r0.w, l(16)
      if_nz r1.x
        mul r13.xyw, r7.yzyx, r8.zxzy
        mad r13.xyw, r8.yzyx, r7.zxzy, -r13.xyxw
        dp3 r4.w, r13.xywx, r13.xywx
        rsq r4.w, r4.w
        mul r13.xyw, r4.wwww, r13.xyxw
        dp3 r4.w, r8.xyzx, -r5.xyzx
        dp3 r6.z, -r5.xyzx, r11.xyzx
        mad r6.w, r6.z, l(2.000000), l(2.000000)
        rsq r6.w, r6.w
        dp3 r17.x, r7.xyzx, -r5.xyzx
        dp3 r17.y, r7.xyzx, r11.xyzx
        dp3 r17.z, r13.xywx, -r5.xyzx
        dp3 r17.w, r13.xywx, r11.xyzx
        add r8.w, r4.w, r12.x
        mul_sat r8.w, r6.w, r8.w
        mad_sat r6.z, r6.w, r6.z, r6.w
        add r13.xy, r17.xzxx, r17.ywyy
        mul r13.xy, r6.wwww, r13.xyxx
      else 
        dp3 r4.w, r8.xyzx, -r5.xyzx
        dp3 r6.w, -r5.xyzx, r11.xyzx
        mad r10.w, r6.w, l(2.000000), l(2.000000)
        rsq r10.w, r10.w
        lt r11.w, l(0.000000), r0.z
        if_nz r11.w
          mad r11.w, -r0.z, r0.z, l(1.000000)
          sqrt r11.w, r11.w
          dp2 r12.w, r4.wwww, r12.xxxx
          add r13.w, -r6.w, r12.w
          ge r14.w, r13.w, r11.w
          if_nz r14.w
            mov r8.w, l(1.000000)
            mov r6.z, |r4.w|
          else 
            mad r14.w, -r13.w, r13.w, l(1.000000)
            rsq r14.w, r14.w
            mul r14.w, r0.z, r14.w
            mad r15.w, -r13.w, r12.x, r4.w
            dp2 r16.w, r4.wwww, r4.wwww
            add r16.w, r16.w, l(-1.000000)
            mad r13.w, -r13.w, r6.w, r16.w
            mad r16.w, -r12.x, r12.x, l(1.000000)
            mad r16.w, -r4.w, r4.w, r16.w
            mad r16.w, -r6.w, r6.w, r16.w
            mad_sat r12.w, r12.w, r6.w, r16.w
            sqrt r12.w, r12.w
            mul r12.w, r12.w, r14.w
            mul r16.w, r4.w, r12.w
            add r18.x, r16.w, r16.w
            mad r18.y, r12.x, r11.w, r4.w
            mul r18.z, r14.w, r15.w
            mad r15.w, r14.w, r15.w, r18.y
            mad r18.w, r6.w, r11.w, l(1.000000)
            mul r19.x, r13.w, r14.w
            mad r13.w, r14.w, r13.w, r18.w
            mul r14.w, r12.w, r13.w
            mul r18.w, r13.w, r15.w
            mul r16.w, r16.w, r15.w
            mul r19.y, r14.w, l(-0.500000)
            mad r16.w, r16.w, l(0.500000), r19.y
            mul r16.w, r16.w, r18.w
            mul r19.y, r13.w, r13.w
            mad r13.w, r6.w, r11.w, r13.w
            mad r13.w, r13.w, l(-0.500000), l(-0.500000)
            mul r18.y, r18.y, r19.y
            mad r13.w, r18.w, r13.w, r18.y
            mul r18.y, r15.w, r18.x
            mad r18.w, r14.w, l(-2.000000), r18.y
            mul r14.w, r14.w, r14.w
            mad r14.w, r18.y, r18.w, r14.w
            mad r13.w, r15.w, r13.w, r14.w
            add r14.w, r16.w, r16.w
            mul r15.w, r13.w, r13.w
            mad r15.w, r16.w, r16.w, r15.w
            div r14.w, r14.w, r15.w
            mul r13.w, r13.w, r14.w
            mad r14.w, -r14.w, r16.w, l(1.000000)
            mul r15.w, r19.x, r14.w
            mad r15.w, r13.w, r18.x, r15.w
            mad r15.w, r6.w, r11.w, r15.w
            mad r16.w, r15.w, l(2.000000), l(2.000000)
            rsq r16.w, r16.w
            mul r14.w, r18.z, r14.w
            mad r12.w, r13.w, r12.w, r14.w
            mad r11.w, r12.x, r11.w, r12.w
            add r11.w, r4.w, r11.w
            mul_sat r8.w, r16.w, r11.w
            mad_sat r6.z, r16.w, r15.w, r16.w
          endif 
        else 
          add r11.w, r4.w, r12.x
          mul_sat r8.w, r10.w, r11.w
          mad_sat r6.z, r10.w, r6.w, r10.w
        endif 
        mov r17.xyzw, l(0,0,0,0)
        mov r13.xy, l(0,0,0,0)
      endif 
      add r4.w, |r4.w|, l(0.000010)
      min r18.z, r4.w, l(1.000000)
      if_nz r1.x
        mul r1.x, r0.y, r0.y
        add r4.w, r7.w, l(1.000000)
        mul r4.w, r1.x, r4.w
        ne r6.w, r4.w, r4.w
        max r4.w, r4.w, l(0.001000)
        movc r4.w, r6.w, l(0.001000), r4.w
        add r6.w, -r7.w, l(1.000000)
        mul r1.x, r1.x, r6.w
        ne r6.w, r1.x, r1.x
        max r1.x, r1.x, l(0.001000)
        movc r1.x, r6.w, l(0.001000), r1.x
        mul r6.w, r1.x, r4.w
        mul r19.x, r13.x, r1.x
        mul r19.y, r13.y, r4.w
        mul r19.z, r8.w, r6.w
        dp3 r10.w, r19.xyzx, r19.xyzx
        div r10.w, r6.w, r10.w
        add r11.w, -r6.z, l(1.000000)
        mul r12.w, r11.w, r11.w
        mul r12.w, r12.w, r12.w
        mul r6.w, r6.w, l(0.318310)
        mul r10.w, r10.w, r10.w
        mul r6.w, r6.w, r10.w
        mul r18.xy, r17.xyxx, r4.wwww
        mul r17.xy, r17.zwzz, r1.xxxx
        mov r18.w, r17.x
        dp3 r1.x, r18.xzwx, r18.xzwx
        sqrt r1.x, r1.x
        mov r17.z, r18.y
        mov r17.w, r13.z
        dp3 r4.w, r17.yzwy, r17.yzwy
        sqrt r4.w, r4.w
        mul r1.x, r1.x, r13.z
        mad r1.x, r18.z, r4.w, r1.x
        div r1.x, l(0.500000), r1.x
        mul r1.x, r1.x, r6.w
        mul_sat r4.w, r9.z, l(50.000000)
        mul r6.w, r11.w, r12.w
        mad r10.w, -r12.w, r11.w, l(1.000000)
        mul r13.xyw, r9.yzyw, r10.wwww
        mad r13.xyw, r4.wwww, r6.wwww, r13.xyxw
        mul r13.xyw, r1.xxxx, r13.xyxw
        mul r15.xyz, r13.xywx, r13.zzzz
      else 
        mul r1.x, r0.y, r0.y
        lt r4.w, l(0.000000), r3.y
        mul r6.w, r3.y, r3.y
        mad r10.w, r6.z, l(3.600000), l(0.400000)
        div r6.w, r6.w, r10.w
        mul r10.w, r1.x, r1.x
        mad r1.x, r1.x, r1.x, r6.w
        min r1.x, r1.x, l(1.000000)
        movc r1.x, r4.w, r1.x, r10.w
        lt r4.w, l(0.000000), r0.z
        mul r6.w, r0.z, l(0.250000)
        ishr r10.w, r1.x, l(1)
        iadd r10.w, r10.w, l(0x1fbd1df5)
        mad r10.w, r10.w, l(3.000000), r0.z
        mul r6.w, r6.w, r10.w
        add r10.w, r6.z, l(0.001000)
        div r6.w, r6.w, r10.w
        add r6.w, r1.x, r6.w
        div r6.w, r1.x, r6.w
        movc r4.w, r4.w, r6.w, l(1.000000)
        mad r6.w, r8.w, r1.x, -r8.w
        mad r6.w, r6.w, r8.w, l(1.000000)
        sqrt r8.w, r1.x
        add r10.w, -r8.w, l(1.000000)
        add r6.z, -r6.z, l(1.000000)
        mul r11.w, r6.z, r6.z
        mul r11.w, r11.w, r11.w
        mul_sat r12.w, r9.z, l(50.000000)
        mul r13.x, r6.z, r11.w
        mad r6.z, -r11.w, r6.z, l(1.000000)
        mul r17.xyz, r6.zzzz, r9.yzwy
        mad r13.xyw, r12.wwww, r13.xxxx, r17.xyxz
        mul r6.z, r6.w, r6.w
        mul r6.z, r6.z, l(3.141593)
        div r1.x, r1.x, r6.z
        mul r1.x, r4.w, r1.x
        mad r4.w, r18.z, r10.w, r8.w
        mad r6.z, r13.z, r10.w, r8.w
        mul r4.w, r4.w, r13.z
        mad r4.w, r18.z, r6.z, r4.w
        div r4.w, l(0.500000), r4.w
        mul r1.x, r1.x, r4.w
        mul r13.xyw, r1.xxxx, r13.xyxw
        mul r15.xyz, r13.xywx, r13.zzzz
      endif 
      mul r13.xyw, r2.xyxz, r2.xyxz
      max r17.xyz, r13.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r17.xyz, r17.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      log r17.xyz, r17.xyzx
      mul r17.xyz, r17.xyzx, l(0.693147, 0.693147, 0.693147, 0.000000)
      max r1.x, l(0.000000), cb0[284].w
      div r17.xyz, -r17.xyzx, r1.xxxx
      mul r17.xyz, r17.xyzx, l(-1.442695, -1.442695, -1.442695, 0.000000)
      exp r17.xyz, r17.xyzx
      lt r1.x, r17.y, r17.z
      max r4.w, r17.z, r17.y
      min r6.z, r17.y, r17.z
      and r6.w, r1.x, l(0xbf800000)
      movc r1.x, r1.x, l(0.666667), l(-0.333333)
      lt r8.w, r17.x, r4.w
      max r10.w, r4.w, r17.x
      movc r1.x, r8.w, r1.x, r6.w
      min r4.w, r17.x, r4.w
      min r6.w, r6.z, r4.w
      add r6.w, -r6.w, r10.w
      add r4.w, -r6.z, r4.w
      mad r6.z, r6.w, l(6.000000), l(0.000000)
      div r4.w, r4.w, r6.z
      add r1.x, r1.x, r4.w
      lt r4.w, r13.y, r13.w
      movc r4.w, r4.w, r13.w, r13.y
      lt r6.z, r13.x, r4.w
      mul r17.xyz, r10.xyzx, r13.zzzz
      mul r14.xyz, r17.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
      mad_sat r8.w, r12.x, l(0.666667), l(0.333333)
      log r8.w, r8.w
      mul r8.w, r8.w, l(1.500000)
      exp r8.w, r8.w
      mad r8.w, r8.w, l(1.666667), l(-1.000000)
      mad r8.w, r2.w, r8.w, l(1.000000)
      mul r11.w, r8.w, l(0.159155)
      dp3_sat r12.w, r11.xyzx, r5.xyzx
      log r12.w, r12.w
      mul r12.w, r12.w, l(12.000000)
      exp r12.w, r12.w
      mad r13.y, r2.w, l(-2.900000), l(3.000000)
      mul r12.w, r12.w, r13.y
      mad r8.w, -r8.w, l(0.159155), l(1.000000)
      mad r8.w, r12.w, r8.w, r11.w
      mad r17.xyz, |r1.xxxx|, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
      mad_sat r17.xyz, |r17.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
      add r17.xyz, r17.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      add r1.x, r10.w, l(0.000000)
      div r1.x, r6.w, r1.x
      mad r17.xyz, r17.xyzx, r1.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
      movc r1.x, r6.z, r4.w, r13.x
      mul r13.xyw, r1.xxxx, r17.xyxz
      mad r17.xyz, r2.xyzx, r2.xyzx, -r13.xywx
      mad r13.xyw, r5.wwww, r17.xyxz, r13.xyxw
      mul r16.xyz, r8.wwww, r13.xywx
      break 
      case l(3)
      and r1.x, r0.w, l(16)
      if_nz r1.x
        mul r13.xyw, r7.yzyx, r8.zxzy
        mad r13.xyw, r8.yzyx, r7.zxzy, -r13.xyxw
        dp3 r4.w, r13.xywx, r13.xywx
        rsq r4.w, r4.w
        mul r13.xyw, r4.wwww, r13.xyxw
        dp3 r4.w, r8.xyzx, -r5.xyzx
        dp3 r5.w, -r5.xyzx, r11.xyzx
        mad r6.z, r5.w, l(2.000000), l(2.000000)
        rsq r6.z, r6.z
        dp3 r17.x, r7.xyzx, -r5.xyzx
        dp3 r17.y, r7.xyzx, r11.xyzx
        dp3 r17.z, r13.xywx, -r5.xyzx
        dp3 r17.w, r13.xywx, r11.xyzx
        add r6.w, r4.w, r12.x
        mul_sat r6.w, r6.z, r6.w
        mad_sat r5.w, r6.z, r5.w, r6.z
        add r13.xy, r17.xzxx, r17.ywyy
        mul r13.xy, r6.zzzz, r13.xyxx
      else 
        dp3 r4.w, r8.xyzx, -r5.xyzx
        dp3 r6.z, -r5.xyzx, r11.xyzx
        mad r8.w, r6.z, l(2.000000), l(2.000000)
        rsq r8.w, r8.w
        lt r10.w, l(0.000000), r0.z
        if_nz r10.w
          mad r10.w, -r0.z, r0.z, l(1.000000)
          sqrt r10.w, r10.w
          dp2 r11.w, r4.wwww, r12.xxxx
          add r12.w, -r6.z, r11.w
          ge r13.w, r12.w, r10.w
          if_nz r13.w
            mov r6.w, l(1.000000)
            mov r5.w, |r4.w|
          else 
            mad r13.w, -r12.w, r12.w, l(1.000000)
            rsq r13.w, r13.w
            mul r13.w, r0.z, r13.w
            mad r14.w, -r12.w, r12.x, r4.w
            dp2 r15.w, r4.wwww, r4.wwww
            add r15.w, r15.w, l(-1.000000)
            mad r12.w, -r12.w, r6.z, r15.w
            mad r15.w, -r12.x, r12.x, l(1.000000)
            mad r15.w, -r4.w, r4.w, r15.w
            mad r15.w, -r6.z, r6.z, r15.w
            mad_sat r11.w, r11.w, r6.z, r15.w
            sqrt r11.w, r11.w
            mul r11.w, r11.w, r13.w
            mul r15.w, r4.w, r11.w
            add r16.w, r15.w, r15.w
            mad r18.x, r12.x, r10.w, r4.w
            mul r18.y, r13.w, r14.w
            mad r14.w, r13.w, r14.w, r18.x
            mad r18.z, r6.z, r10.w, l(1.000000)
            mul r18.w, r12.w, r13.w
            mad r12.w, r13.w, r12.w, r18.z
            mul r13.w, r11.w, r12.w
            mul r18.z, r12.w, r14.w
            mul r15.w, r15.w, r14.w
            mul r19.x, r13.w, l(-0.500000)
            mad r15.w, r15.w, l(0.500000), r19.x
            mul r15.w, r15.w, r18.z
            mul r19.x, r12.w, r12.w
            mad r12.w, r6.z, r10.w, r12.w
            mad r12.w, r12.w, l(-0.500000), l(-0.500000)
            mul r18.x, r18.x, r19.x
            mad r12.w, r18.z, r12.w, r18.x
            mul r18.x, r14.w, r16.w
            mad r18.z, r13.w, l(-2.000000), r18.x
            mul r13.w, r13.w, r13.w
            mad r13.w, r18.x, r18.z, r13.w
            mad r12.w, r14.w, r12.w, r13.w
            add r13.w, r15.w, r15.w
            mul r14.w, r12.w, r12.w
            mad r14.w, r15.w, r15.w, r14.w
            div r13.w, r13.w, r14.w
            mul r12.w, r12.w, r13.w
            mad r13.w, -r13.w, r15.w, l(1.000000)
            mul r14.w, r18.w, r13.w
            mad r14.w, r12.w, r16.w, r14.w
            mad r14.w, r6.z, r10.w, r14.w
            mad r15.w, r14.w, l(2.000000), l(2.000000)
            rsq r15.w, r15.w
            mul r13.w, r18.y, r13.w
            mad r11.w, r12.w, r11.w, r13.w
            mad r10.w, r12.x, r10.w, r11.w
            add r10.w, r4.w, r10.w
            mul_sat r6.w, r15.w, r10.w
            mad_sat r5.w, r15.w, r14.w, r15.w
          endif 
        else 
          add r10.w, r4.w, r12.x
          mul_sat r6.w, r8.w, r10.w
          mad_sat r5.w, r8.w, r6.z, r8.w
        endif 
        mov r17.xyzw, l(0,0,0,0)
        mov r13.xy, l(0,0,0,0)
      endif 
      add r4.w, |r4.w|, l(0.000010)
      min r18.z, r4.w, l(1.000000)
      if_nz r1.x
        mul r1.x, r0.y, r0.y
        add r4.w, r7.w, l(1.000000)
        mul r4.w, r1.x, r4.w
        ne r6.z, r4.w, r4.w
        max r4.w, r4.w, l(0.001000)
        movc r4.w, r6.z, l(0.001000), r4.w
        add r6.z, -r7.w, l(1.000000)
        mul r1.x, r1.x, r6.z
        ne r6.z, r1.x, r1.x
        max r1.x, r1.x, l(0.001000)
        movc r1.x, r6.z, l(0.001000), r1.x
        mul r6.z, r1.x, r4.w
        mul r19.x, r13.x, r1.x
        mul r19.y, r13.y, r4.w
        mul r19.z, r6.w, r6.z
        dp3 r8.w, r19.xyzx, r19.xyzx
        div r8.w, r6.z, r8.w
        add r10.w, -r5.w, l(1.000000)
        mul r11.w, r10.w, r10.w
        mul r11.w, r11.w, r11.w
        mul r6.z, r6.z, l(0.318310)
        mul r8.w, r8.w, r8.w
        mul r6.z, r6.z, r8.w
        mul r18.xy, r17.xyxx, r4.wwww
        mul r17.xy, r17.zwzz, r1.xxxx
        mov r18.w, r17.x
        dp3 r1.x, r18.xzwx, r18.xzwx
        sqrt r1.x, r1.x
        mov r17.z, r18.y
        mov r17.w, r13.z
        dp3 r4.w, r17.yzwy, r17.yzwy
        sqrt r4.w, r4.w
        mul r1.x, r1.x, r13.z
        mad r1.x, r18.z, r4.w, r1.x
        div r1.x, l(0.500000), r1.x
        mul r1.x, r1.x, r6.z
        mul_sat r4.w, r9.z, l(50.000000)
        mul r6.z, r10.w, r11.w
        mad r8.w, -r11.w, r10.w, l(1.000000)
        mul r13.xyw, r8.wwww, r9.yzyw
        mad r13.xyw, r4.wwww, r6.zzzz, r13.xyxw
        mul r13.xyw, r1.xxxx, r13.xyxw
        mul r15.xyz, r13.xywx, r13.zzzz
      else 
        mul r1.x, r0.y, r0.y
        lt r4.w, l(0.000000), r3.y
        mul r6.z, r3.y, r3.y
        mad r8.w, r5.w, l(3.600000), l(0.400000)
        div r6.z, r6.z, r8.w
        mul r8.w, r1.x, r1.x
        mad r1.x, r1.x, r1.x, r6.z
        min r1.x, r1.x, l(1.000000)
        movc r1.x, r4.w, r1.x, r8.w
        lt r4.w, l(0.000000), r0.z
        mul r6.z, r0.z, l(0.250000)
        ishr r8.w, r1.x, l(1)
        iadd r8.w, r8.w, l(0x1fbd1df5)
        mad r8.w, r8.w, l(3.000000), r0.z
        mul r6.z, r6.z, r8.w
        add r8.w, r5.w, l(0.001000)
        div r6.z, r6.z, r8.w
        add r6.z, r1.x, r6.z
        div r6.z, r1.x, r6.z
        movc r4.w, r4.w, r6.z, l(1.000000)
        mad r6.z, r6.w, r1.x, -r6.w
        mad r6.z, r6.z, r6.w, l(1.000000)
        sqrt r6.w, r1.x
        add r8.w, -r6.w, l(1.000000)
        add r5.w, -r5.w, l(1.000000)
        mul r10.w, r5.w, r5.w
        mul r10.w, r10.w, r10.w
        mul_sat r11.w, r9.z, l(50.000000)
        mul r12.w, r5.w, r10.w
        mad r5.w, -r10.w, r5.w, l(1.000000)
        mul r13.xyw, r5.wwww, r9.yzyw
        mad r13.xyw, r11.wwww, r12.wwww, r13.xyxw
        mul r5.w, r6.z, r6.z
        mul r5.w, r5.w, l(3.141593)
        div r1.x, r1.x, r5.w
        mul r1.x, r4.w, r1.x
        mad r4.w, r18.z, r8.w, r6.w
        mad r5.w, r13.z, r8.w, r6.w
        mul r4.w, r4.w, r13.z
        mad r4.w, r18.z, r5.w, r4.w
        div r4.w, l(0.500000), r4.w
        mul r1.x, r1.x, r4.w
        mul r13.xyw, r1.xxxx, r13.xyxw
        mul r15.xyz, r13.xywx, r13.zzzz
      endif 
      mul r13.xyw, r10.xyxz, r13.zzzz
      mul r14.xyz, r13.xywx, l(0.318310, 0.318310, 0.318310, 0.000000)
      mad_sat r13.x, r12.x, l(0.500000), l(0.500000)
      add r13.y, -r2.w, l(1.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r13.xyw, r13.xyxx, t0.xywz, s0, l(0.000000)
      mul r17.xyz, r2.xyzx, r2.xyzx
      mul r16.xyz, r13.xywx, r17.xyzx
      break 
      case l(4)
      max r1.x, r2.y, l(0.020000)
      and r4.w, r0.w, l(16)
      dp3 r5.w, r8.xyzx, -r5.xyzx
      dp3 r6.z, -r5.xyzx, r11.xyzx
      mad r6.w, r6.z, l(2.000000), l(2.000000)
      rsq r6.w, r6.w
      add r8.w, r5.w, r12.x
      mul_sat r12.z, r6.w, r8.w
      mad_sat r8.w, r6.w, r6.z, r6.w
      mad r10.w, -r0.y, r0.y, l(1.000000)
      mul r11.w, r1.x, r1.x
      lt r12.w, l(0.000000), r10.w
      mad r1.x, -r1.x, r1.x, l(1.000000)
      div r1.x, r1.x, r10.w
      and r1.x, r1.x, r12.w
      mul_sat r1.x, r0.z, r1.x
      lt r10.w, l(0.000000), r1.x
      if_nz r10.w
        mad r12.w, -r1.x, r1.x, l(1.000000)
        sqrt r12.w, r12.w
        dp2 r13.x, r5.wwww, r12.xxxx
        add r13.y, -r6.z, r13.x
        ge r13.w, r13.y, r12.w
        if_nz r13.w
          mov r12.y, l(1.000000)
          mov r17.xy, r12.xyxx
          mov r12.y, |r5.w|
        else 
          mad r13.w, -r13.y, r13.y, l(1.000000)
          rsq r13.w, r13.w
          mul r13.w, r1.x, r13.w
          mad r14.w, -r13.y, r12.x, r5.w
          dp2 r15.w, r5.wwww, r5.wwww
          add r15.w, r15.w, l(-1.000000)
          mad r13.y, -r13.y, r6.z, r15.w
          mad r15.w, -r12.x, r12.x, l(1.000000)
          mad r15.w, -r5.w, r5.w, r15.w
          mad r15.w, -r6.z, r6.z, r15.w
          mad_sat r13.x, r13.x, r6.z, r15.w
          sqrt r13.x, r13.x
          mul r13.x, r13.x, r13.w
          mul r15.w, r5.w, r13.x
          add r16.w, r15.w, r15.w
          mad r17.z, r12.x, r12.w, r5.w
          mul r17.w, r13.w, r14.w
          mad r14.w, r13.w, r14.w, r17.z
          mad r18.x, r6.z, r12.w, l(1.000000)
          mul r18.y, r13.y, r13.w
          mad r13.y, r13.w, r13.y, r18.x
          mul r13.w, r13.y, r13.x
          mul r18.x, r13.y, r14.w
          mul r15.w, r15.w, r14.w
          mul r18.z, r13.w, l(-0.500000)
          mad r15.w, r15.w, l(0.500000), r18.z
          mul r15.w, r15.w, r18.x
          mul r18.z, r13.y, r13.y
          mad r13.y, r6.z, r12.w, r13.y
          mad r13.y, r13.y, l(-0.500000), l(-0.500000)
          mul r17.z, r17.z, r18.z
          mad r13.y, r18.x, r13.y, r17.z
          mul r17.z, r14.w, r16.w
          mad r18.x, r13.w, l(-2.000000), r17.z
          mul r13.w, r13.w, r13.w
          mad r13.w, r17.z, r18.x, r13.w
          mad r13.y, r14.w, r13.y, r13.w
          add r13.w, r15.w, r15.w
          mul r14.w, r13.y, r13.y
          mad r14.w, r15.w, r15.w, r14.w
          div r13.w, r13.w, r14.w
          mul r13.y, r13.y, r13.w
          mad r13.w, -r13.w, r15.w, l(1.000000)
          mul r14.w, r17.w, r13.w
          mad r13.x, r13.y, r13.x, r14.w
          mad r17.x, r12.x, r12.w, r13.x
          mul r13.x, r18.y, r13.w
          mad r13.x, r13.y, r16.w, r13.x
          mad r6.z, r6.z, r12.w, r13.x
          mad r12.w, r6.z, l(2.000000), l(2.000000)
          rsq r12.w, r12.w
          add r13.x, r5.w, r17.x
          mul_sat r17.y, r12.w, r13.x
          mad_sat r12.y, r12.w, r6.z, r12.w
        endif 
      else 
        mov r17.xy, r12.xzxx
        mov r12.y, r8.w
      endif 
      add r6.z, |r5.w|, l(0.000010)
      min r6.z, r6.z, l(1.000000)
      add r12.w, -r12.y, l(1.000000)
      mul r13.x, r12.w, r12.w
      mul r13.x, r13.x, r13.x
      mad r13.y, -r13.x, r12.w, l(1.000000)
      mul r12.w, r12.w, r13.x
      mad r12.w, r13.y, l(0.040000), r12.w
      lt r13.x, l(0.000000), r3.y
      mul r13.y, r3.y, r3.y
      mad r13.w, r12.y, l(3.600000), l(0.400000)
      div r13.w, r13.y, r13.w
      mul r14.w, r11.w, r11.w
      mad r11.w, r11.w, r11.w, r13.w
      min r11.w, r11.w, l(1.000000)
      movc r11.w, r13.x, r11.w, r14.w
      mul r13.w, r1.x, l(0.250000)
      ishr r14.w, r11.w, l(1)
      iadd r14.w, r14.w, l(0x1fbd1df5)
      mad r1.x, r14.w, l(3.000000), r1.x
      mul r1.x, r1.x, r13.w
      add r13.w, r12.y, l(0.001000)
      div r1.x, r1.x, r13.w
      add r1.x, r1.x, r11.w
      div r1.x, r11.w, r1.x
      movc r1.x, r10.w, r1.x, l(1.000000)
      sqrt r10.w, r11.w
      add r13.w, -r10.w, l(1.000000)
      mad r14.w, r17.y, r11.w, -r17.y
      mad r14.w, r14.w, r17.y, l(1.000000)
      mul r14.w, r14.w, r14.w
      mul r14.w, r14.w, l(3.141593)
      div r11.w, r11.w, r14.w
      mul r1.x, r1.x, r11.w
      mad r11.w, r6.z, r13.w, r10.w
      mad r10.w, r13.z, r13.w, r10.w
      mul r11.w, r11.w, r13.z
      mad r10.w, r6.z, r10.w, r11.w
      div r10.w, l(0.500000), r10.w
      mul r1.x, r1.x, r10.w
      mul r1.x, r12.w, r1.x
      mul r1.x, r1.x, r13.z
      mul r10.w, r0.y, r0.y
      add r11.w, -r12.w, l(1.000000)
      movc r12.zw, r4.wwww, r12.zzzx, r17.yyyx
      movc r8.w, r4.w, r8.w, r12.y
      mad r12.y, r8.w, l(-0.220000), l(0.630000)
      mad r12.y, r12.y, r8.w, l(-0.745000)
      mul r13.w, r12.z, r12.y
      movc r5.w, r4.w, r5.w, r6.z
      mad r5.w, r5.w, l(0.666667), -r13.w
      max r5.w, r5.w, l(0.001000)
      min r17.z, r5.w, l(1.000000)
      mad r5.w, r12.w, l(0.666667), -r13.w
      max r5.w, r5.w, l(0.001000)
      min r18.z, r5.w, l(1.000000)
      lt r5.w, l(0.000000), r3.w
      mul r19.xyz, r4.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
      max r19.xyz, r19.xyzx, l(0.000100, 0.000100, 0.000100, 0.000000)
      div r6.z, l(1.000000, 1.000000, 1.000000, 1.000000), r17.z
      div r12.w, l(1.000000, 1.000000, 1.000000, 1.000000), r18.z
      add r6.z, r6.z, r12.w
      add r6.z, r6.z, l(-2.000000)
      log r19.xyz, r19.xyzx
      mul r19.xyz, r6.zzzz, r19.xyzx
      mul r19.xyz, r19.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      exp r19.xyz, r19.xyzx
      add r19.xyz, r19.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r19.xyz, r3.wwww, r19.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      movc r19.xyz, r5.wwww, r19.xyzx, l(1.000000,1.000000,1.000000,0)
      mul r20.xyz, r10.xyzx, r13.zzzz
      mul r20.xyz, r20.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
      mul r5.w, r11.w, r11.w
      mul r19.xyz, r5.wwww, r19.xyzx
      mul r5.w, r10.w, r10.w
      if_nz r4.w
        mul r21.xyz, r7.yzxy, r8.zxyz
        mad r21.xyz, r8.yzxy, r7.zxyz, -r21.xyzx
        dp3 r6.z, r21.xyzx, r21.xyzx
        rsq r6.z, r6.z
        mul r21.xyz, r6.zzzz, r21.xyzx
        dp3 r22.x, r7.xyzx, -r5.xyzx
        dp3 r22.y, r7.xyzx, r11.xyzx
        dp3 r22.w, r21.xyzx, -r5.xyzx
        dp3 r21.x, r21.xyzx, r11.xyzx
        add r6.z, r22.x, r22.y
        mul r22.z, r6.w, r6.z
        add r6.z, r22.w, r21.x
        mul r21.y, r6.w, r6.z
        movc r22.xyzw, r4.wwww, r22.xyzw, l(0,0,0,0)
        movc r6.zw, r4.wwww, r21.xxxy, l(0,0,0,0)
        add r11.w, r7.w, l(1.000000)
        mul r11.w, r10.w, r11.w
        ne r12.w, r11.w, r11.w
        max r11.w, r11.w, l(0.001000)
        movc r11.w, r12.w, l(0.001000), r11.w
        add r12.w, -r7.w, l(1.000000)
        mul r12.w, r10.w, r12.w
        ne r13.w, r12.w, r12.w
        max r12.w, r12.w, l(0.001000)
        movc r12.w, r13.w, l(0.001000), r12.w
        mul r13.w, r11.w, r12.w
        mul r21.xy, r22.zwzz, r12.wwww
        mul r21.z, r6.w, r11.w
        mul r21.w, r12.z, r13.w
        dp3 r6.w, r21.xzwx, r21.xzwx
        div r6.w, r13.w, r6.w
        mul r17.xy, r22.xyxx, r11.wwww
        mov r17.w, r21.y
        dp3 r11.w, r17.xzwx, r17.xzwx
        sqrt r11.w, r11.w
        mul r18.y, r6.z, r12.w
        mov r18.x, r17.y
        dp3 r6.z, r18.xyzx, r18.xyzx
        sqrt r6.z, r6.z
        mul r11.w, r11.w, r18.z
        mad r6.z, r17.z, r6.z, r11.w
        div r17.x, l(0.500000), r6.z
        mul r6.z, r13.w, l(0.318310)
        mul r6.w, r6.w, r6.w
        mul r17.y, r6.w, r6.z
      else 
        mad r6.z, -r0.y, r0.y, l(1.000000)
        mad r6.w, r12.z, r5.w, -r12.z
        mad r6.w, r6.w, r12.z, l(1.000000)
        mad r11.w, r17.z, r6.z, r10.w
        mad r6.z, r13.z, r6.z, r10.w
        mul r11.w, r11.w, r13.z
        mad r6.z, r17.z, r6.z, r11.w
        div r17.x, l(0.500000), r6.z
        mul r6.z, r6.w, r6.w
        mul r6.z, r6.z, l(3.141593)
        div r17.y, r5.w, r6.z
      endif 
      mad_sat r6.z, r8.w, l(0.666667), -r12.y
      add r6.z, -r6.z, l(1.000000)
      mul r6.w, r6.z, r6.z
      mul r6.w, r6.w, r6.w
      mul_sat r11.w, r9.z, l(50.000000)
      add r12.y, -r8.w, l(1.000000)
      mul r12.z, r12.y, r12.y
      mul r12.z, r12.z, r12.z
      if_nz r4.w
        mov r4.w, l(1.000000)
      else 
        mad r12.w, r8.w, l(3.600000), l(0.400000)
        div r12.w, r13.y, r12.w
        mad r10.w, r10.w, r10.w, r12.w
        min r10.w, r10.w, l(1.000000)
        movc r5.w, r13.x, r10.w, r5.w
        lt r10.w, l(0.000000), r0.z
        mul r12.w, r0.z, l(0.250000)
        ishr r13.x, r5.w, l(1)
        iadd r13.x, r13.x, l(0x1fbd1df5)
        mad r13.x, r13.x, l(3.000000), r0.z
        mul r12.w, r12.w, r13.x
        add r8.w, r8.w, l(0.001000)
        div r8.w, r12.w, r8.w
        add r8.w, r5.w, r8.w
        div r5.w, r5.w, r8.w
        movc r4.w, r10.w, r5.w, l(1.000000)
      endif 
      mul r4.w, r13.z, r4.w
      mul r4.w, r17.y, r4.w
      mul r4.w, r17.x, r4.w
      mul r5.w, r12.y, r12.z
      mad r8.w, -r12.z, r12.y, l(1.000000)
      mul r12.yzw, r8.wwww, r9.yyzw
      mad r12.yzw, r11.wwww, r5.wwww, r12.yyzw
      mul r5.w, r6.z, r6.w
      mad r6.z, -r6.w, r6.z, l(1.000000)
      mul r13.xyw, r6.zzzz, r9.yzyw
      mad r13.xyw, r11.wwww, r5.wwww, r13.xyxw
      mad r13.xyw, r19.xyxz, r13.xyxw, -r12.yzyw
      mad r12.yzw, r2.xxxx, r13.xxyw, r12.yyzw
      mul r12.yzw, r4.wwww, r12.yyzw
      mad r15.xyz, r2.xxxx, r1.xxxx, r12.yzwy
      mad r12.yzw, r19.xxyz, r20.xxyz, -r20.xxyz
      mad r14.xyz, r2.xxxx, r12.yzwy, r20.xyzx
      mov r16.xyz, l(0,0,0,0)
      break 
      case l(5)
      dp3 r1.x, r8.xyzx, -r5.xyzx
      dp3 r4.w, -r5.xyzx, r11.xyzx
      lt r5.w, l(0.000000), r0.z
      if_nz r5.w
        mad r6.z, -r0.z, r0.z, l(1.000000)
        sqrt r6.z, r6.z
        dp2 r6.w, r1.xxxx, r12.xxxx
        add r8.w, -r4.w, r6.w
        ge r10.w, r8.w, r6.z
        if_nz r10.w
          mov r10.w, l(1.000000)
          mov r11.w, |r1.x|
        else 
          mad r12.y, -r8.w, r8.w, l(1.000000)
          rsq r12.y, r12.y
          mul r12.y, r0.z, r12.y
          mad r12.z, -r8.w, r12.x, r1.x
          dp2 r12.w, r1.xxxx, r1.xxxx
          add r12.w, r12.w, l(-1.000000)
          mad r8.w, -r8.w, r4.w, r12.w
          mad r12.w, -r12.x, r12.x, l(1.000000)
          mad r12.w, -r1.x, r1.x, r12.w
          mad r12.w, -r4.w, r4.w, r12.w
          mad_sat r6.w, r6.w, r4.w, r12.w
          sqrt r6.w, r6.w
          mul r6.w, r6.w, r12.y
          mul r12.w, r1.x, r6.w
          add r13.x, r12.w, r12.w
          mad r13.y, r12.x, r6.z, r1.x
          mul r13.w, r12.z, r12.y
          mad r12.z, r12.y, r12.z, r13.y
          mad r14.w, r4.w, r6.z, l(1.000000)
          mul r15.w, r8.w, r12.y
          mad r8.w, r12.y, r8.w, r14.w
          mul r12.y, r6.w, r8.w
          mul r14.w, r8.w, r12.z
          mul r12.w, r12.w, r12.z
          mul r16.w, r12.y, l(-0.500000)
          mad r12.w, r12.w, l(0.500000), r16.w
          mul r12.w, r12.w, r14.w
          mul r16.w, r8.w, r8.w
          mad r8.w, r4.w, r6.z, r8.w
          mad r8.w, r8.w, l(-0.500000), l(-0.500000)
          mul r13.y, r13.y, r16.w
          mad r8.w, r14.w, r8.w, r13.y
          mul r13.y, r12.z, r13.x
          mad r14.w, r12.y, l(-2.000000), r13.y
          mul r12.y, r12.y, r12.y
          mad r12.y, r13.y, r14.w, r12.y
          mad r8.w, r12.z, r8.w, r12.y
          add r12.y, r12.w, r12.w
          mul r12.z, r8.w, r8.w
          mad r12.z, r12.w, r12.w, r12.z
          div r12.y, r12.y, r12.z
          mul r8.w, r8.w, r12.y
          mad r12.y, -r12.y, r12.w, l(1.000000)
          mul r12.z, r15.w, r12.y
          mad r12.z, r8.w, r13.x, r12.z
          mad r12.z, r4.w, r6.z, r12.z
          mad r12.w, r12.z, l(2.000000), l(2.000000)
          rsq r12.w, r12.w
          mul r12.y, r13.w, r12.y
          mad r6.w, r8.w, r6.w, r12.y
          mad r6.z, r12.x, r6.z, r6.w
          add r6.z, r1.x, r6.z
          mul_sat r10.w, r12.w, r6.z
          mad_sat r11.w, r12.w, r12.z, r12.w
        endif 
      else 
        mad r6.z, r4.w, l(2.000000), l(2.000000)
        rsq r6.z, r6.z
        add r6.w, r1.x, r12.x
        mul_sat r10.w, r6.z, r6.w
        mad_sat r11.w, r6.z, r4.w, r6.z
      endif 
      add r1.x, |r1.x|, l(0.000010)
      min r1.x, r1.x, l(1.000000)
      mad r4.w, r2.x, l(255.000000), l(0.500000)
      ftou r17.y, r4.w
      mov r17.xzw, l(5,0,0,0)
      ld_indexable(texture2d)(float,float,float,float) r12.yzw, r17.xyzw, t1.wxyz
      add r4.w, r2.w, l(-0.100000)
      mul_sat r4.w, r4.w, l(10.000000)
      mad r6.zw, r12.yyyz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
      mad r6.zw, r4.wwww, r6.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      mul_sat r6.zw, r0.yyyy, r6.zzzw
      max r4.w, r6.z, l(0.020000)
      add r6.z, -r4.w, r6.w
      mad r6.z, r12.w, r6.z, r4.w
      mul r8.w, r11.w, r11.w
      dp2 r8.w, r8.wwww, r0.yyyy
      add r8.w, r8.w, l(-0.500000)
      add r12.y, -r1.x, l(1.000000)
      mul r12.z, r12.y, r12.y
      add r13.x, -r13.z, l(1.000000)
      mul r13.y, r13.x, r13.x
      mul r13.w, r6.z, r6.z
      mul r4.w, r4.w, r4.w
      mul r6.w, r6.w, r6.w
      lt r14.w, l(0.000000), r3.y
      mul r15.w, r3.y, r3.y
      mad r16.w, r11.w, l(3.600000), l(0.400000)
      div r15.w, r15.w, r16.w
      mul r16.w, r4.w, r4.w
      mad r4.w, r4.w, r4.w, r15.w
      min r4.w, r4.w, l(1.000000)
      movc r4.w, r14.w, r4.w, r16.w
      mul r16.w, r0.z, l(0.250000)
      ishr r17.x, r4.w, l(1)
      iadd r17.x, r17.x, l(0x1fbd1df5)
      mad r17.x, r17.x, l(3.000000), r0.z
      mul r17.x, r16.w, r17.x
      add r17.y, r11.w, l(0.001000)
      div r17.x, r17.x, r17.y
      add r17.x, r4.w, r17.x
      div r17.x, r4.w, r17.x
      movc r17.x, r5.w, r17.x, l(1.000000)
      mul r17.z, r6.w, r6.w
      mad r6.w, r6.w, r6.w, r15.w
      min r6.w, r6.w, l(1.000000)
      movc r6.w, r14.w, r6.w, r17.z
      ishr r14.w, r6.w, l(1)
      iadd r14.w, r14.w, l(0x1fbd1df5)
      mad r14.w, r14.w, l(3.000000), r0.z
      mul r14.w, r14.w, r16.w
      div r14.w, r14.w, r17.y
      add r14.w, r6.w, r14.w
      div r14.w, r6.w, r14.w
      movc r5.w, r5.w, r14.w, l(1.000000)
      mad r14.w, r10.w, r4.w, -r10.w
      mad r14.w, r14.w, r10.w, l(1.000000)
      mad r15.w, r10.w, r6.w, -r10.w
      mad r10.w, r15.w, r10.w, l(1.000000)
      mad r6.z, -r6.z, r6.z, l(1.000000)
      add r11.w, -r11.w, l(1.000000)
      mul r15.w, r11.w, r11.w
      mul r15.w, r15.w, r15.w
      mul_sat r16.w, r9.z, l(50.000000)
      mul r17.y, r11.w, r15.w
      mad r11.w, -r15.w, r11.w, l(1.000000)
      mul r18.xyz, r9.yzwy, r11.wwww
      mad r17.yzw, r16.wwww, r17.yyyy, r18.xxyz
      mul r11.w, r14.w, r14.w
      mul r11.w, r11.w, l(3.141593)
      div r4.w, r4.w, r11.w
      mul r4.w, r17.x, r4.w
      mul r10.w, r10.w, r10.w
      mul r10.w, r10.w, l(3.141593)
      div r6.w, r6.w, r10.w
      mad r5.w, r6.w, r5.w, -r4.w
      mad r4.w, r12.w, r5.w, r4.w
      mad r5.w, r1.x, r6.z, r13.w
      mad r6.z, r13.z, r6.z, r13.w
      mul r5.w, r5.w, r13.z
      mad r1.x, r1.x, r6.z, r5.w
      div r1.x, l(0.500000), r1.x
      mul r1.x, r1.x, r4.w
      mul r17.xyz, r1.xxxx, r17.yzwy
      mul r15.xyz, r13.zzzz, r17.xyzx
      mul r1.x, r12.z, r12.z
      mul r1.x, r12.y, r1.x
      mad r1.x, r8.w, r1.x, l(1.000000)
      mul r1.x, r1.x, l(0.318310)
      mul r4.w, r13.y, r13.y
      mul r4.w, r13.x, r4.w
      mad r4.w, r8.w, r4.w, l(1.000000)
      mul r1.x, r1.x, r4.w
      mul r12.yzw, r1.xxxx, r10.xxyz
      mul r14.xyz, r12.yzwy, r13.zzzz
      mov r16.xyz, l(0,0,0,0)
      break 
      case l(6)
      and r0.w, r0.w, l(16)
      if_nz r0.w
        mul r12.yzw, r7.yyzx, r8.zzxy
        mad r12.yzw, r8.yyzx, r7.zzxy, -r12.yyzw
        dp3 r1.x, r12.yzwy, r12.yzwy
        rsq r1.x, r1.x
        mul r12.yzw, r1.xxxx, r12.yyzw
        dp3 r1.x, r8.xyzx, -r5.xyzx
        dp3 r4.w, -r5.xyzx, r11.xyzx
        mad r5.w, r4.w, l(2.000000), l(2.000000)
        rsq r5.w, r5.w
        dp3 r17.x, r7.xyzx, -r5.xyzx
        dp3 r17.y, r7.xyzx, r11.xyzx
        dp3 r17.z, r12.yzwy, -r5.xyzx
        dp3 r17.w, r12.yzwy, r11.xyzx
        add r6.z, r1.x, r12.x
        mul_sat r6.z, r5.w, r6.z
        mad_sat r4.w, r5.w, r4.w, r5.w
        add r7.xy, r17.xzxx, r17.ywyy
        mul r7.xy, r5.wwww, r7.xyxx
      else 
        dp3 r1.x, r8.xyzx, -r5.xyzx
        dp3 r5.w, -r5.xyzx, r11.xyzx
        mad r6.w, r5.w, l(2.000000), l(2.000000)
        rsq r6.w, r6.w
        lt r7.z, l(0.000000), r0.z
        if_nz r7.z
          mad r7.z, -r0.z, r0.z, l(1.000000)
          sqrt r7.z, r7.z
          dp2 r8.w, r1.xxxx, r12.xxxx
          add r10.w, -r5.w, r8.w
          ge r11.w, r10.w, r7.z
          if_nz r11.w
            mov r6.z, l(1.000000)
            mov r4.w, |r1.x|
          else 
            mad r11.w, -r10.w, r10.w, l(1.000000)
            rsq r11.w, r11.w
            mul r11.w, r0.z, r11.w
            mad r12.y, -r10.w, r12.x, r1.x
            dp2 r12.z, r1.xxxx, r1.xxxx
            add r12.z, r12.z, l(-1.000000)
            mad r10.w, -r10.w, r5.w, r12.z
            mad r12.z, -r12.x, r12.x, l(1.000000)
            mad r12.z, -r1.x, r1.x, r12.z
            mad r12.z, -r5.w, r5.w, r12.z
            mad_sat r8.w, r8.w, r5.w, r12.z
            sqrt r8.w, r8.w
            mul r8.w, r8.w, r11.w
            mul r12.z, r1.x, r8.w
            add r12.w, r12.z, r12.z
            mad r13.x, r12.x, r7.z, r1.x
            mul r13.y, r11.w, r12.y
            mad r12.y, r11.w, r12.y, r13.x
            mad r13.w, r5.w, r7.z, l(1.000000)
            mul r14.w, r10.w, r11.w
            mad r10.w, r11.w, r10.w, r13.w
            mul r11.w, r8.w, r10.w
            mul r13.w, r10.w, r12.y
            mul r12.z, r12.z, r12.y
            mul r15.w, r11.w, l(-0.500000)
            mad r12.z, r12.z, l(0.500000), r15.w
            mul r12.z, r12.z, r13.w
            mul r15.w, r10.w, r10.w
            mad r10.w, r5.w, r7.z, r10.w
            mad r10.w, r10.w, l(-0.500000), l(-0.500000)
            mul r13.x, r13.x, r15.w
            mad r10.w, r13.w, r10.w, r13.x
            mul r13.x, r12.y, r12.w
            mad r13.w, r11.w, l(-2.000000), r13.x
            mul r11.w, r11.w, r11.w
            mad r11.w, r13.x, r13.w, r11.w
            mad r10.w, r12.y, r10.w, r11.w
            add r11.w, r12.z, r12.z
            mul r12.y, r10.w, r10.w
            mad r12.y, r12.z, r12.z, r12.y
            div r11.w, r11.w, r12.y
            mul r10.w, r10.w, r11.w
            mad r11.w, -r11.w, r12.z, l(1.000000)
            mul r12.y, r14.w, r11.w
            mad r12.y, r10.w, r12.w, r12.y
            mad r12.y, r5.w, r7.z, r12.y
            mad r12.z, r12.y, l(2.000000), l(2.000000)
            rsq r12.z, r12.z
            mul r11.w, r13.y, r11.w
            mad r8.w, r10.w, r8.w, r11.w
            mad r7.z, r12.x, r7.z, r8.w
            add r7.z, r1.x, r7.z
            mul_sat r6.z, r12.z, r7.z
            mad_sat r4.w, r12.z, r12.y, r12.z
          endif 
        else 
          add r7.z, r1.x, r12.x
          mul_sat r6.z, r6.w, r7.z
          mad_sat r4.w, r6.w, r5.w, r6.w
        endif 
        mov r17.xyzw, l(0,0,0,0)
        mov r7.xy, l(0,0,0,0)
      endif 
      add r1.x, |r1.x|, l(0.000010)
      min r18.z, r1.x, l(1.000000)
      if_nz r0.w
        mul r0.w, r0.y, r0.y
        add r1.x, r7.w, l(1.000000)
        mul r1.x, r0.w, r1.x
        ne r5.w, r1.x, r1.x
        max r1.x, r1.x, l(0.001000)
        movc r1.x, r5.w, l(0.001000), r1.x
        add r5.w, -r7.w, l(1.000000)
        mul r0.w, r0.w, r5.w
        ne r5.w, r0.w, r0.w
        max r0.w, r0.w, l(0.001000)
        movc r0.w, r5.w, l(0.001000), r0.w
        mul r5.w, r0.w, r1.x
        mul r19.x, r7.x, r0.w
        mul r19.y, r7.y, r1.x
        mul r19.z, r6.z, r5.w
        dp3 r6.w, r19.xyzx, r19.xyzx
        div r6.w, r5.w, r6.w
        add r7.x, -r4.w, l(1.000000)
        mul r7.y, r7.x, r7.x
        mul r7.y, r7.y, r7.y
        mul r5.w, r5.w, l(0.318310)
        mul r6.w, r6.w, r6.w
        mul r5.w, r5.w, r6.w
        mul r18.xy, r17.xyxx, r1.xxxx
        mul r17.xy, r17.zwzz, r0.wwww
        mov r18.w, r17.x
        dp3 r0.w, r18.xzwx, r18.xzwx
        sqrt r0.w, r0.w
        mov r17.z, r18.y
        mov r17.w, r13.z
        dp3 r1.x, r17.yzwy, r17.yzwy
        sqrt r1.x, r1.x
        mul r0.w, r0.w, r13.z
        mad r0.w, r18.z, r1.x, r0.w
        div r0.w, l(0.500000), r0.w
        mul r0.w, r0.w, r5.w
        mul_sat r1.x, r9.z, l(50.000000)
        mul r5.w, r7.x, r7.y
        mad r6.w, -r7.y, r7.x, l(1.000000)
        mul r7.xyz, r6.wwww, r9.yzwy
        mad r7.xyz, r1.xxxx, r5.wwww, r7.xyzx
        mul r7.xyz, r0.wwww, r7.xyzx
        mul r15.xyz, r7.xyzx, r13.zzzz
      else 
        mul r0.w, r0.y, r0.y
        lt r1.x, l(0.000000), r3.y
        mul r5.w, r3.y, r3.y
        mad r6.w, r4.w, l(3.600000), l(0.400000)
        div r5.w, r5.w, r6.w
        mul r6.w, r0.w, r0.w
        mad r0.w, r0.w, r0.w, r5.w
        min r0.w, r0.w, l(1.000000)
        movc r0.w, r1.x, r0.w, r6.w
        lt r1.x, l(0.000000), r0.z
        mul r5.w, r0.z, l(0.250000)
        ishr r6.w, r0.w, l(1)
        iadd r6.w, r6.w, l(0x1fbd1df5)
        mad r6.w, r6.w, l(3.000000), r0.z
        mul r5.w, r5.w, r6.w
        add r6.w, r4.w, l(0.001000)
        div r5.w, r5.w, r6.w
        add r5.w, r0.w, r5.w
        div r5.w, r0.w, r5.w
        movc r1.x, r1.x, r5.w, l(1.000000)
        mad r5.w, r6.z, r0.w, -r6.z
        mad r5.w, r5.w, r6.z, l(1.000000)
        sqrt r6.z, r0.w
        add r6.w, -r6.z, l(1.000000)
        add r4.w, -r4.w, l(1.000000)
        mul r7.x, r4.w, r4.w
        mul r7.x, r7.x, r7.x
        mul_sat r7.y, r9.z, l(50.000000)
        mul r7.z, r4.w, r7.x
        mad r4.w, -r7.x, r4.w, l(1.000000)
        mul r12.yzw, r4.wwww, r9.yyzw
        mad r7.xyz, r7.yyyy, r7.zzzz, r12.yzwy
        mul r4.w, r5.w, r5.w
        mul r4.w, r4.w, l(3.141593)
        div r0.w, r0.w, r4.w
        mul r0.w, r1.x, r0.w
        mad r1.x, r18.z, r6.w, r6.z
        mad r4.w, r13.z, r6.w, r6.z
        mul r1.x, r1.x, r13.z
        mad r1.x, r18.z, r4.w, r1.x
        div r1.x, l(0.500000), r1.x
        mul r0.w, r0.w, r1.x
        mul r7.xyz, r0.wwww, r7.xyzx
        mul r15.xyz, r7.xyzx, r13.zzzz
      endif 
      dp3 r0.w, -r5.xyzx, r11.xyzx
      mov_sat r0.w, -r0.w
      mul r0.w, r0.w, r0.w
      mad r0.w, r0.w, l(-0.640000), l(1.000000)
      mul r7.xyz, r10.xyzx, r13.zzzz
      mul r14.xyz, r7.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
      add r1.x, -r12.x, l(0.500000)
      mul_sat r1.x, r1.x, l(0.444444)
      mul r0.w, r0.w, r0.w
      mul r0.w, r0.w, l(3.141593)
      div r0.w, l(0.360000), r0.w
      mul r0.w, r0.w, r1.x
      mul r7.xyz, r2.xyzx, r2.xyzx
      mul r16.xyz, r0.wwww, r7.xyzx
      break 
      case l(7)
      max r0.w, r0.y, l(0.003922)
      min r0.w, r0.w, l(1.000000)
      dp3 r1.x, -r5.xyzx, r11.xyzx
      max r4.w, r12.x, l(-1.000000)
      min r4.w, r4.w, l(1.000000)
      dp3 r5.w, r8.xyzx, -r5.xyzx
      max r6.z, r5.w, l(-1.000000)
      min r6.z, r6.z, l(1.000000)
      mad r6.w, |r6.z|, l(-0.156583), l(1.570796)
      add r7.x, -|r6.z|, l(1.000000)
      mad r7.y, |r4.w|, l(-0.156583), l(1.570796)
      add r7.z, -|r4.w|, l(1.000000)
      sqrt r7.xz, r7.xxzx
      ge r7.w, r6.z, l(0.000000)
      mul r8.w, r6.w, r7.x
      mad r6.w, -r6.w, r7.x, l(3.141593)
      movc r6.w, r7.w, r8.w, r6.w
      add r6.w, -r6.w, l(1.570796)
      ge r7.x, r4.w, l(0.000000)
      mul r7.w, r7.z, r7.y
      mad r7.y, -r7.y, r7.z, l(3.141593)
      movc r7.x, r7.x, r7.w, r7.y
      add r7.x, -r7.x, l(1.570796)
      add r6.w, r6.w, -r7.x
      mul r6.w, |r6.w|, l(0.500000)
      sincos null, r6.w, r6.w
      mad r7.xyz, -r8.xyzx, r4.wwww, r11.xyzx
      mad r12.yzw, -r8.xxyz, r6.zzzz, -r5.xxyz
      dp3 r7.w, r7.xyzx, r12.yzwy
      dp3 r7.x, r7.xyzx, r7.xyzx
      dp3 r7.y, r12.yzwy, r12.yzwy
      mad r7.x, r7.x, r7.y, l(0.000100)
      rsq r7.x, r7.x
      mul r7.x, r7.x, r7.w
      mad r7.xyzw, r7.xxxx, l(0.500000, -0.800000, -3.650000, 17.000000), l(0.500000, 0.600000, -3.980000, -16.780001)
      mov_sat r7.x, r7.x
      sqrt r7.x, r7.x
      mul r0.w, r0.w, r0.w
      mul r12.yzw, r0.wwww, l(0.000000, 0.500000, 1.253314, 5.013257)
      add r8.w, r0.w, r0.w
      mul r0.w, r7.x, r0.w
      mul r13.xy, r0.wwww, l(1.414214, 3.544908, 0.000000, 0.000000)
      add r0.w, r4.w, r6.z
      mul r4.w, r7.x, l(0.997551)
      mad r10.w, -r6.z, r6.z, l(1.000000)
      sqrt r10.w, r10.w
      mul r4.w, r4.w, r10.w
      mad r4.w, r6.z, l(-0.069943), r4.w
      mad r4.w, r4.w, l(0.139886), r0.w
      mad_sat r1.x, r1.x, l(0.500000), l(0.500000)
      sqrt r1.x, r1.x
      add r1.x, -r1.x, l(1.000000)
      mul r6.z, r1.x, r1.x
      div r17.xy, l(1.190000, 0.800000, 0.000000, 0.000000), r6.wwww
      mad r10.w, r6.w, l(0.360000), r17.x
      div r10.w, l(1.000000, 1.000000, 1.000000, 1.000000), r10.w
      mad r7.y, r10.w, r7.y, l(1.000000)
      mul r7.y, r7.y, r7.x
      mad r11.w, -r7.y, r7.y, l(1.000000)
      max r11.w, r11.w, l(0.000000)
      sqrt r11.w, r11.w
      mad r11.w, -r6.w, r11.w, l(1.000000)
      mul r13.w, r11.w, r11.w
      mul r13.xw, r13.xxxw, r13.xxxw
      mul r11.w, r11.w, r13.w
      mad r11.w, r11.w, l(0.953479), l(0.046521)
      add r11.w, -r11.w, l(1.000000)
      mul r7.y, r10.w, r7.y
      add r17.xz, r0.wwww, l(-0.035000, 0.000000, -0.140000, 0.000000)
      mad r0.w, r6.w, l(-0.500000), l(1.000000)
      mul r10.w, r0.w, r0.w
      mul r10.w, r10.w, r10.w
      mul r0.w, r0.w, r10.w
      mad r0.w, r0.w, l(0.953479), l(0.046521)
      add r10.w, -r0.w, l(1.000000)
      mul r4.w, r4.w, r4.w
      mul r4.w, r4.w, l(-0.500000)
      div r4.w, r4.w, r13.x
      mul r4.w, r4.w, l(1.442695)
      exp r4.w, r4.w
      div r4.w, r4.w, r13.y
      mul r4.w, r7.x, r4.w
      mul r4.w, r4.w, l(0.250000)
      mul r6.z, r6.z, r6.z
      mul r1.x, r1.x, r6.z
      mad r1.x, r1.x, l(0.953479), l(0.046521)
      mul r1.x, r1.x, r4.w
      dp2 r1.x, r9.xxxx, r1.xxxx
      mad r4.w, -r7.y, r7.y, l(1.000000)
      sqrt r4.w, r4.w
      mul r4.w, r4.w, l(0.500000)
      div r4.w, r4.w, r6.w
      log r13.xyw, |r4.xyxz|
      mul r18.xyz, r4.wwww, r13.xywx
      exp r18.xyz, r18.xyzx
      mul r6.zw, r17.xxxz, r17.xxxz
      mul r6.zw, r6.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
      mul r4.w, r12.y, r12.y
      div r4.w, r6.z, r4.w
      mul r4.w, r4.w, l(1.442695)
      exp r4.w, r4.w
      div r4.w, r4.w, r12.z
      mul r7.xy, r7.zwzz, l(1.442695, 1.442695, 0.000000, 0.000000)
      exp r7.xy, r7.xyxx
      mul r4.w, r4.w, r7.x
      mul r6.z, r11.w, r11.w
      mul r4.w, r4.w, r6.z
      mad r7.xzw, r18.xxyz, r4.wwww, r1.xxxx
      mul r13.xyw, r13.xyxw, r17.yyyy
      exp r13.xyw, r13.xyxw
      mul r1.x, r8.w, r8.w
      div r1.x, r6.w, r1.x
      mul r1.x, r1.x, l(1.442695)
      exp r1.x, r1.x
      div r1.x, r1.x, r12.w
      mul r1.x, r7.y, r1.x
      mul r4.w, r10.w, r10.w
      mul r0.w, r0.w, r4.w
      mul r0.w, r0.w, r1.x
      mad r7.xyz, r13.xywx, r0.wwww, r7.xzwx
      dp3 r0.w, r4.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
      sqrt r12.yzw, |r4.xxyz|
      mad r13.xyw, -r8.xyxz, r5.wwww, -r5.xyxz
      dp3 r1.x, r13.xywx, r13.xywx
      rsq r1.x, r1.x
      mul r13.xyw, r1.xxxx, r13.xyxw
      dp3 r1.x, r13.xywx, r11.xyzx
      add r1.x, r1.x, l(1.000000)
      mul_sat r1.x, r1.x, l(0.250000)
      add r4.w, -|r12.x|, l(1.000000)
      add r4.w, -r1.x, r4.w
      mad r1.x, r4.w, l(0.330000), r1.x
      mul r1.x, r1.x, r3.w
      mul r1.x, r1.x, l(0.318310)
      mul r12.yzw, r1.xxxx, r12.yyzw
      ne r1.x, r0.w, r0.w
      max r0.w, r0.w, l(0.000100)
      movc r0.w, r1.x, l(0.000100), r0.w
      div r4.xyz, r4.xyzx, r0.wwww
      add r0.w, -r6.x, l(1.000000)
      log r4.xyz, |r4.xyzx|
      mul r4.xyz, r0.wwww, r4.xyzx
      exp r4.xyz, r4.xyzx
      mul r4.xyz, r4.xyzx, r12.yzwy
      mad r4.xyz, r7.xyzx, r6.yyyy, r4.xyzx
      ne r7.xyz, -r4.xyzx, -r4.xyzx
      min r4.xyz, -r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      movc r16.xyz, r7.xyzx, l(0,0,0,0), r4.xyzx
      mov r14.xyz, l(0,0,0,0)
      mov r15.xyz, l(0,0,0,0)
      mov r16.xyz, -r16.xyzx
      break 
      case l(8)
      mul r4.xyz, r2.xyzx, r2.xyzx
      mov_sat r2.w, r2.w
      dp3 r0.w, r8.xyzx, -r5.xyzx
      dp3 r1.x, -r5.xyzx, r11.xyzx
      lt r2.x, l(0.000000), r0.z
      if_nz r2.x
        mad r3.w, -r0.z, r0.z, l(1.000000)
        sqrt r3.w, r3.w
        dp2 r4.w, r0.wwww, r12.xxxx
        add r5.w, -r1.x, r4.w
        ge r6.z, r5.w, r3.w
        if_nz r6.z
          mov r6.z, l(1.000000)
          mov r6.w, |r0.w|
        else 
          mad r7.x, -r5.w, r5.w, l(1.000000)
          rsq r7.x, r7.x
          mul r7.x, r0.z, r7.x
          mad r7.y, -r5.w, r12.x, r0.w
          dp2 r7.z, r0.wwww, r0.wwww
          add r7.z, r7.z, l(-1.000000)
          mad r5.w, -r5.w, r1.x, r7.z
          mad r7.z, -r12.x, r12.x, l(1.000000)
          mad r7.z, -r0.w, r0.w, r7.z
          mad r7.z, -r1.x, r1.x, r7.z
          mad_sat r4.w, r4.w, r1.x, r7.z
          sqrt r4.w, r4.w
          mul r4.w, r4.w, r7.x
          mul r7.z, r0.w, r4.w
          add r7.w, r7.z, r7.z
          mad r8.w, r12.x, r3.w, r0.w
          mul r10.w, r7.y, r7.x
          mad r7.y, r7.x, r7.y, r8.w
          mad r11.w, r1.x, r3.w, l(1.000000)
          mul r12.y, r5.w, r7.x
          mad r5.w, r7.x, r5.w, r11.w
          mul r7.x, r4.w, r5.w
          mul r11.w, r5.w, r7.y
          mul r7.z, r7.z, r7.y
          mul r12.z, r7.x, l(-0.500000)
          mad r7.z, r7.z, l(0.500000), r12.z
          mul r7.z, r7.z, r11.w
          mul r12.z, r5.w, r5.w
          mad r5.w, r1.x, r3.w, r5.w
          mad r5.w, r5.w, l(-0.500000), l(-0.500000)
          mul r8.w, r8.w, r12.z
          mad r5.w, r11.w, r5.w, r8.w
          mul r8.w, r7.y, r7.w
          mad r11.w, r7.x, l(-2.000000), r8.w
          mul r7.x, r7.x, r7.x
          mad r7.x, r8.w, r11.w, r7.x
          mad r5.w, r7.y, r5.w, r7.x
          add r7.x, r7.z, r7.z
          mul r7.y, r5.w, r5.w
          mad r7.y, r7.z, r7.z, r7.y
          div r7.x, r7.x, r7.y
          mul r5.w, r5.w, r7.x
          mad r7.x, -r7.x, r7.z, l(1.000000)
          mul r7.y, r12.y, r7.x
          mad r7.y, r5.w, r7.w, r7.y
          mad r7.y, r1.x, r3.w, r7.y
          mad r7.z, r7.y, l(2.000000), l(2.000000)
          rsq r7.z, r7.z
          mul r7.x, r10.w, r7.x
          mad r4.w, r5.w, r4.w, r7.x
          mad r3.w, r12.x, r3.w, r4.w
          add r3.w, r0.w, r3.w
          mul_sat r6.z, r7.z, r3.w
          mad_sat r6.w, r7.z, r7.y, r7.z
        endif 
      else 
        mad r3.w, r1.x, l(2.000000), l(2.000000)
        rsq r3.w, r3.w
        add r4.w, r0.w, r12.x
        mul_sat r6.z, r3.w, r4.w
        mad_sat r6.w, r3.w, r1.x, r3.w
      endif 
      add r0.w, |r0.w|, l(0.000010)
      min r0.w, r0.w, l(1.000000)
      mul r1.x, r0.y, r0.y
      lt r3.w, l(0.000000), r3.y
      mul r4.w, r3.y, r3.y
      mad r5.w, r6.w, l(3.600000), l(0.400000)
      div r4.w, r4.w, r5.w
      mul r5.w, r1.x, r1.x
      mad r1.x, r1.x, r1.x, r4.w
      min r1.x, r1.x, l(1.000000)
      movc r1.x, r3.w, r1.x, r5.w
      mul r3.w, r0.z, l(0.250000)
      ishr r4.w, r1.x, l(1)
      iadd r4.w, r4.w, l(0x1fbd1df5)
      mad r4.w, r4.w, l(3.000000), r0.z
      mul r3.w, r3.w, r4.w
      add r4.w, r6.w, l(0.001000)
      div r3.w, r3.w, r4.w
      add r3.w, r1.x, r3.w
      div r3.w, r1.x, r3.w
      movc r2.x, r2.x, r3.w, l(1.000000)
      mad r3.w, r6.z, r1.x, -r6.z
      mad r3.w, r3.w, r6.z, l(1.000000)
      sqrt r4.w, r1.x
      add r7.x, -r4.w, l(1.000000)
      add r6.w, -r6.w, l(1.000000)
      mul r7.y, r6.w, r6.w
      mul r7.y, r7.y, r7.y
      mul_sat r7.z, r9.z, l(50.000000)
      mul r7.w, r6.w, r7.y
      mad r6.w, -r7.y, r6.w, l(1.000000)
      mul r9.yzw, r6.wwww, r9.yyzw
      mad r9.yzw, r7.zzzz, r7.wwww, r9.yyzw
      mul r3.w, r3.w, r3.w
      mul r3.w, r3.w, l(3.141593)
      div r1.x, r1.x, r3.w
      mul r1.x, r2.x, r1.x
      mad r2.x, r0.w, r7.x, r4.w
      mad r3.w, r13.z, r7.x, r4.w
      mul r2.x, r2.x, r13.z
      mad r2.x, r0.w, r3.w, r2.x
      div r2.x, l(0.500000), r2.x
      mul r1.x, r1.x, r2.x
      mul r7.xyz, r1.xxxx, r9.yzwy
      mul r7.xyz, r7.xyzx, r13.zzzz
      mad r1.x, -r5.w, r6.z, r6.z
      mad r1.x, r1.x, r6.z, r5.w
      mul r9.yzw, r10.xxyz, r13.zzzz
      mul r14.xyz, r9.yzwy, l(0.318310, 0.318310, 0.318310, 0.000000)
      mul r2.x, r5.w, l(4.000000)
      mad r3.w, r5.w, l(4.000000), l(1.000000)
      div r3.w, l(0.318310), r3.w
      mul r2.x, r5.w, r2.x
      mul r1.x, r1.x, r1.x
      div r1.x, r2.x, r1.x
      add r1.x, r1.x, l(1.000000)
      mul r1.x, r1.x, r3.w
      add r2.x, r0.w, r13.z
      mad r0.w, -r13.z, r0.w, r2.x
      div r0.w, l(0.250000), r0.w
      mul r0.w, r0.w, r1.x
      mul r0.w, r0.w, r13.z
      mul r1.x, r4.y, l(50.000000)
      min r1.x, r1.x, l(1.000000)
      mul r4.xyz, r4.xyzx, r6.wwww
      mad r4.xyz, r1.xxxx, r7.wwww, r4.xyzx
      mad r4.xyz, r0.wwww, r4.xyzx, -r7.xyzx
      mad r15.xyz, r2.wwww, r4.xyzx, r7.xyzx
      mov r16.xyz, l(0,0,0,0)
      break 
      case l(9)
      mad r2.xy, r2.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
      dp2 r0.w, l(1.000000, 1.000000, 0.000000, 0.000000), |r2.xyxx|
      add r4.z, -r0.w, l(1.000000)
      add r0.w, r0.w, l(-1.000000)
      ne r1.x, r0.w, r0.w
      max r0.w, r0.w, l(0.000000)
      movc r0.w, r1.x, l(0), r0.w
      ge r6.zw, r2.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
      movc r6.zw, r6.zzzw, -r0.wwww, r0.wwww
      add r4.xy, r2.xyxx, r6.zwzz
      dp3 r0.w, r4.xyzx, r4.xyzx
      rsq r0.w, r0.w
      mul r2.xyz, r0.wwww, r4.xyzx
      add r0.w, -r2.w, l(1.000000)
      dp3 r1.x, r8.xyzx, -r5.xyzx
      dp3 r2.w, -r5.xyzx, r11.xyzx
      mad r3.w, r2.w, l(2.000000), l(2.000000)
      rsq r3.w, r3.w
      lt r4.x, l(0.000000), r0.z
      mad r4.y, -r0.z, r0.z, l(1.000000)
      sqrt r4.y, r4.y
      dp2 r4.z, r1.xxxx, r12.xxxx
      add r4.z, -r2.w, r4.z
      ge r4.w, r4.z, r4.y
      mov r5.x, |r1.x|
      mad r5.z, -r4.z, r4.z, l(1.000000)
      rsq r5.z, r5.z
      mul r5.z, r0.z, r5.z
      dp2 r5.w, r1.xxxx, r1.xxxx
      add r5.w, r5.w, l(-1.000000)
      mad r5.w, -r4.z, r2.w, r5.w
      mul r6.z, r2.w, r4.y
      mad r5.w, r5.z, r5.w, r6.z
      mad r6.z, r5.w, l(2.000000), l(2.000000)
      rsq r6.z, r6.z
      mad r4.z, -r4.z, r12.x, r1.x
      mul r4.y, r4.y, r12.x
      mad r4.y, r5.z, r4.z, r4.y
      add r4.y, r1.x, r4.y
      mul_sat r7.y, r6.z, r4.y
      mad_sat r7.x, r6.z, r5.w, r6.z
      mov r5.y, l(1.000000)
      movc r4.yz, r4.wwww, r5.xxyx, r7.xxyx
      add r1.x, r1.x, r12.x
      mul_sat r7.y, r3.w, r1.x
      mad_sat r7.x, r3.w, r2.w, r3.w
      movc r4.yz, r4.xxxx, r4.yyzy, r7.xxyx
      add r1.x, r5.x, l(0.000010)
      min r1.x, r1.x, l(1.000000)
      add r2.w, -r4.y, l(1.000000)
      mul r3.w, r2.w, r2.w
      mul r3.w, r3.w, r3.w
      mad r4.w, -r3.w, r2.w, l(1.000000)
      mul r4.w, r4.w, r9.x
      mul r2.w, r2.w, r3.w
      mad r2.w, r4.w, l(0.080000), r2.w
      mul r0.y, r0.y, r0.y
      lt r3.w, l(0.000000), r3.y
      mul r3.y, r3.y, r3.y
      mad r4.w, r4.y, l(3.600000), l(0.400000)
      div r3.y, r3.y, r4.w
      mul r4.w, r0.y, r0.y
      mad r0.y, r0.y, r0.y, r3.y
      min r0.y, r0.y, l(1.000000)
      movc r0.y, r3.w, r0.y, r4.w
      mul r3.y, r0.z, l(0.250000)
      ishr r3.w, r0.y, l(1)
      iadd r3.w, r3.w, l(0x1fbd1df5)
      mad r0.z, r3.w, l(3.000000), r0.z
      mul r0.z, r0.z, r3.y
      add r3.y, r4.y, l(0.001000)
      div r0.z, r0.z, r3.y
      add r0.z, r0.z, r0.y
      div r0.z, r0.y, r0.z
      movc r0.z, r4.x, r0.z, l(1.000000)
      sqrt r3.y, r0.y
      add r3.w, -r3.y, l(1.000000)
      mad r4.x, r4.z, r0.y, -r4.z
      mad r4.x, r4.x, r4.z, l(1.000000)
      mul r4.x, r4.x, r4.x
      mul r4.x, r4.x, l(3.141593)
      div r0.y, r0.y, r4.x
      mul r0.y, r0.z, r0.y
      mad r0.z, r1.x, r3.w, r3.y
      mad r3.y, r13.z, r3.w, r3.y
      mul r0.yz, r0.yyzy, r13.zzzz
      mad r0.z, r1.x, r3.y, r0.z
      div r0.z, l(0.500000), r0.z
      mul r0.y, r0.z, r0.y
      mul r15.xyz, r2.wwww, r0.yyyy
      dp3_sat r0.y, r2.xyzx, r11.xyzx
      mad r3.yw, r0.yyyy, l(0.000000, -11.000000, 0.000000, -11.000000), l(0.000000, 12.000000, 0.000000, 13.000000)
      mul r0.z, r3.w, l(0.200000)
      mul r0.x, r0.x, r0.w
      mad r1.xyz, -r1.yzwy, r3.xxxx, -r2.xyzx
      mad r1.xyz, r0.xxxx, r1.xyzx, r2.xyzx
      dp3 r0.x, r1.xyzx, r1.xyzx
      rsq r0.x, r0.x
      mul r1.xyz, r0.xxxx, r1.xyzx
      dp3_sat r0.x, r1.xyzx, r11.xyzx
      log r0.x, r0.x
      mul r0.x, r0.x, r3.y
      exp r0.x, r0.x
      mad r0.x, r0.z, r0.x, l(0.800000)
      mad r0.x, r0.y, r0.x, -r13.z
      mad r0.x, r0.w, r0.x, r13.z
      add r0.y, -r2.w, l(1.000000)
      mul r0.x, r0.y, r0.x
      mul r0.xyz, r0.xxxx, r10.xyzx
      mul r16.xyz, r0.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
      mov r14.xyz, l(0,0,0,0)
      break 
      default 
      mov r14.xyz, l(0,0,0,0)
      mov r15.xyz, l(0,0,0,0)
      mov r16.xyz, l(0,0,0,0)
      break 
    endswitch 
    mul r0.xyz, r6.yyyy, cb1[4].xyzx
    eq r0.w, l(0.000000), cb0[228].z
    mul r1.xyz, r0.xyzx, r14.xyzx
    dp3 r1.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
    and r1.w, r0.w, r1.w
    and r1.w, r1.w, r3.z
    mul r2.xyz, r6.xxxx, cb1[4].xyzx
    mul r3.xyw, r2.xyxz, r16.xyxz
    dp3 r2.w, r3.xywx, l(0.300000, 0.590000, 0.110000, 0.000000)
    add r2.w, r1.w, r2.w
    movc r0.w, r0.w, r2.w, r1.w
    and r0.w, r0.w, r3.z
    mad r1.xyz, r16.xyzx, r2.xyzx, r1.xyzx
    mul r2.xyz, r15.xyzx, cb1[5].wwww
    mul r2.xyz, r0.xyzx, r2.xyzx
  else 
    mov r1.xyz, l(0,0,0,0)
    mov r2.xyz, l(0,0,0,0)
    mov r0.w, l(0)
  endif 
  eq r0.x, l(0.000000), cb0[228].z
  and r1.w, r0.w, r0.x
  mov r2.w, l(0)
  add r0.xyzw, r1.xyzw, r2.xyzw
else 
  mov r0.xyzw, l(0,0,0,0)
endif 
mul o0.xyzw, r0.xyzw, cb0[136].yyyy
ret 
// Approximately 2438 instruction slots used
