//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _RootShaderParameters
// {
//
//   uint ScreenProbeTracingOctahedronResolution;// Offset:   32 Size:     4
//   uint ScreenProbeLightSampleResolutionXY;// Offset:   36 Size:     4 [unused]
//   uint ScreenProbeGatherOctahedronResolution;// Offset:   40 Size:     4 [unused]
//   uint ScreenProbeGatherOctahedronResolutionWithBorder;// Offset:   44 Size:     4 [unused]
//   uint ScreenProbeDownsampleFactor;  // Offset:   48 Size:     4 [unused]
//   uint2 ScreenProbeViewSize;         // Offset:   56 Size:     8 [unused]
//   uint2 ScreenProbeAtlasViewSize;    // Offset:   64 Size:     8
//   uint2 ScreenProbeAtlasBufferSize;  // Offset:   72 Size:     8 [unused]
//   float ScreenProbeGatherMaxMip;     // Offset:   80 Size:     4 [unused]
//   float RelativeSpeedDifferenceToConsiderLightingMoving;// Offset:   84 Size:     4 [unused]
//   float ScreenTraceNoFallbackThicknessScale;// Offset:   88 Size:     4 [unused]
//   float2 SampleRadianceProbeUVMul;   // Offset:   96 Size:     8 [unused]
//   float2 SampleRadianceProbeUVAdd;   // Offset:  104 Size:     8 [unused]
//   float2 SampleRadianceAtlasUVMul;   // Offset:  112 Size:     8 [unused]
//   uint NumUniformScreenProbes;       // Offset:  124 Size:     4
//   uint MaxNumAdaptiveProbes;         // Offset:  128 Size:     4
//   int FixedJitterIndex;              // Offset:  132 Size:     4 [unused]
//   uint MaxImportanceSamplingOctahedronResolution;// Offset:  288 Size:     4 [unused]
//   uint ScreenProbeBRDFOctahedronResolution;// Offset:  292 Size:     4 [unused]
//   float ReprojectionRadiusScale;     // Offset:  336 Size:     4 [unused]
//   float InvClipmapFadeSize;          // Offset:  348 Size:     4 [unused]
//   uint2 ProbeAtlasResolutionInProbes;// Offset:  352 Size:     8 [unused]
//   uint RadianceProbeClipmapResolution;// Offset:  360 Size:     4 [unused]
//   uint NumRadianceProbeClipmaps;     // Offset:  364 Size:     4 [unused]
//   uint RadianceProbeResolution;      // Offset:  368 Size:     4 [unused]
//   uint FinalProbeResolution;         // Offset:  372 Size:     4 [unused]
//   uint FinalRadianceAtlasMaxMip;     // Offset:  376 Size:     4 [unused]
//   uint CalculateIrradiance;          // Offset:  380 Size:     4 [unused]
//   uint IrradianceProbeResolution;    // Offset:  384 Size:     4 [unused]
//   uint OcclusionProbeResolution;     // Offset:  388 Size:     4 [unused]
//   float4 RadianceProbeSettings[6];   // Offset:  448 Size:    96 [unused]
//   float4 PaddedWorldPositionToRadianceProbeCoordBias[6];// Offset:  544 Size:    96 [unused]
//   float4 PaddedRadianceProbeCoordToWorldPositionBias[6];// Offset:  640 Size:    96 [unused]
//   float2 InvProbeFinalRadianceAtlasResolution;// Offset:  736 Size:     8 [unused]
//   float2 InvProbeFinalIrradianceAtlasResolution;// Offset:  744 Size:     8 [unused]
//   float2 InvProbeDepthAtlasResolution;// Offset:  752 Size:     8 [unused]
//   uint OverrideCacheOcclusionLighting;// Offset:  760 Size:     4 [unused]
//   uint ShowBlackRadianceCacheLighting;// Offset:  764 Size:     4 [unused]
//   uint ProbeAtlasResolutionModuloMask;// Offset:  768 Size:     4 [unused]
//   uint ProbeAtlasResolutionDivideShift;// Offset:  772 Size:     4 [unused]
//   float4 ProbeHistoryScreenPositionScaleBias;// Offset:  784 Size:    16 [unused]
//   float4 ImportanceSamplingHistoryUVMinMax;// Offset:  800 Size:    16 [unused]
//   float ImportanceSamplingHistoryDistanceThreshold;// Offset:  816 Size:     4 [unused]
//   float PrevInvPreExposure;          // Offset:  820 Size:     4 [unused]
//
// }
//
// Resource bind info for NumAdaptiveScreenProbes
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// ScreenProbeSceneDepth             texture    uint          2d             t0      1 
// NumAdaptiveScreenProbes           texture  struct         r/o             t1      1 
// RWLightingProbabilityDensityFunction        UAV   float          2d             u0      1 
// _RootShaderParameters             cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[9], immediateIndexed
dcl_resource_texture2d (uint,uint,uint,uint) t0
dcl_resource_structured t1, 4
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.xy
dcl_input vThreadIDInGroup.xy
dcl_temps 4
dcl_tgsm_structured g0, 4, 64
dcl_thread_group 4, 4, 1
imad r0.x, vThreadGroupID.y, cb0[4].x, vThreadGroupID.x
mov r1.xy, vThreadGroupID.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(uint,uint,uint,uint) r0.y, r1.xyzw, t0.yxzw
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.z, l(0), l(0), t1.xxxx
umin r0.z, r0.z, cb0[8].x
iadd r0.z, r0.z, cb0[7].w
ult r0.x, r0.x, r0.z
ult r0.z, vThreadGroupID.x, cb0[4].x
and r0.x, r0.z, r0.x
lt r0.y, l(0.000000), r0.y
and r0.x, r0.y, r0.x
if_nz r0.x
  ult r0.xy, vThreadIDInGroup.xyxx, cb0[2].xxxx
  and r0.x, r0.y, r0.x
  if_nz r0.x
    imad r0.y, vThreadIDInGroup.y, cb0[2].x, vThreadIDInGroup.x
    store_structured g0.x, r0.y, l(0), l(1.000000)
    mov r0.y, l(1.000000)
  else 
    mov r0.y, l(0)
  endif 
  sync_g_t
  imad r0.z, vThreadIDInGroup.y, cb0[2].x, vThreadIDInGroup.x
  imul null, r0.w, cb0[2].x, cb0[2].x
  ishl r1.x, r0.z, l(2)
  bfi r1.yzw, l(0, 30, 30, 30), l(0, 2, 2, 2), r0.zzzz, l(0, 1, 2, 3)
  mov r2.x, r0.w
  mov r2.y, l(0)
  loop 
    uge r2.z, l(1), r2.x
    breakc_nz r2.z
    ult r2.z, r1.x, r2.x
    if_nz r2.z
      iadd r2.z, r1.x, r2.y
      ld_structured r2.z, r2.z, l(0), g0.xxxx
      ult r3.xyz, r1.yzwy, r2.xxxx
      if_nz r3.x
        iadd r2.w, r1.y, r2.y
        ld_structured r2.w, r2.w, l(0), g0.xxxx
        add r2.z, r2.w, r2.z
      endif 
      if_nz r3.y
        iadd r2.w, r1.z, r2.y
        ld_structured r2.w, r2.w, l(0), g0.xxxx
        add r2.z, r2.w, r2.z
      endif 
      if_nz r3.z
        iadd r2.w, r1.w, r2.y
        ld_structured r2.w, r2.w, l(0), g0.xxxx
        add r2.z, r2.w, r2.z
      endif 
      iadd r2.w, r0.z, r2.y
      iadd r2.w, r2.x, r2.w
      store_structured g0.x, r2.w, l(0), r2.z
    endif 
    iadd r2.y, r2.x, r2.y
    iadd r2.z, r2.x, l(3)
    ushr r2.x, r2.z, l(2)
    sync_g_t
  endloop 
  if_nz r0.x
    ld_structured r0.x, r2.y, l(0), g0.xxxx
    imad r1.xyzw, vThreadGroupID.xyyy, cb0[2].xxxx, vThreadIDInGroup.xyyy
    max r0.x, r0.x, l(0.000100)
    div r0.x, r0.y, r0.x
    store_uav_typed u0.xyzw, r1.xyzw, r0.xxxx
  endif 
endif 
ret 
// Approximately 70 instruction slots used
