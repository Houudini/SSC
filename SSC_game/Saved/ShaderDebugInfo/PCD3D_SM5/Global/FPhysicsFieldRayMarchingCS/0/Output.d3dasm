//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _RootShaderParameters
// {
//
//   float TimeSeconds;                 // Offset:  168 Size:     4
//   uint BoundsOffset;                 // Offset:  172 Size:     4
//   uint BoundsSize;                   // Offset:  176 Size:     4
//   uint LocalTarget;                  // Offset:  180 Size:     4 [unused]
//   uint GlobalTarget;                 // Offset:  184 Size:     4
//   float2 OutputResolution;           // Offset:  192 Size:     8 [unused]
//
// }
//
// cbuffer ShaderPrintData
// {
//
//   int2 ShaderPrintData_Resolution;   // Offset:    0 Size:     8
//   int2 ShaderPrintData_CursorCoord;  // Offset:    8 Size:     8 [unused]
//   float3 ShaderPrintData_TranslatedWorldOffset;// Offset:   16 Size:    12
//   float PrePadding_ShaderPrintData_28;// Offset:   28 Size:     4 [unused]
//   float2 ShaderPrintData_FontSize;   // Offset:   32 Size:     8 [unused]
//   float2 ShaderPrintData_FontSpacing;// Offset:   40 Size:     8
//   uint ShaderPrintData_MaxValueCount;// Offset:   48 Size:     4
//   uint ShaderPrintData_MaxSymbolCount;// Offset:   52 Size:     4 [unused]
//   uint ShaderPrintData_MaxStateCount;// Offset:   56 Size:     4 [unused]
//   uint ShaderPrintData_MaxLineCount; // Offset:   60 Size:     4
//   uint ShaderPrintData_MaxTriangleCount;// Offset:   64 Size:     4 [unused]
//
// }
//
// Resource bind info for ShaderPrint_RWEntryBuffer
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// NodesParams                       texture   float         buf             t0      1 
// NodesOffsets                      texture    sint         buf             t1      1 
// TargetsOffsets                    texture    sint         buf             t2      1 
// BoundsMin                         texture  float4         buf             t3      1 
// BoundsMax                         texture  float4         buf             t4      1 
// ShaderPrint_RWEntryBuffer             UAV  struct         r/w             u0      1 
// _RootShaderParameters             cbuffer      NA          NA            cb0      1 
// ShaderPrintData                   cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { 151, 89, 0, 0},
                              { 160, 101, 0, 0},
                              { 137, 115, 0, 0},
                              { 91, 32, 0, 0},
                              { 90, 78, 0, 0},
                              { 15, 111, 0, 0},
                              { 131, 32, 0, 0},
                              { 13, 32, 0, 0},
                              { 201, 89, 0, 0},
                              { 95, 101, 0, 0},
                              { 96, 115, 0, 0},
                              { 53, 32, 0, 0},
                              { 194, 78, 0, 0},
                              { 233, 111, 0, 0},
                              { 7, 32, 0, 0},
                              { 225, 32, 0, 0},
                              { 140, 86, 0, 0},
                              { 36, 101, 0, 0},
                              { 103, 99, 0, 0},
                              { 30, 116, 0, 0},
                              { 69, 111, 0, 0},
                              { 142, 114, 0, 0},
                              { 8, 32, 0, 0},
                              { 99, 70, 0, 0},
                              { 37, 105, 0, 0},
                              { 240, 101, 0, 0},
                              { 21, 108, 0, 0},
                              { 10, 100, 0, 0},
                              { 23, 32, 0, 0},
                              { 190, 84, 0, 0},
                              { 6, 121, 0, 0},
                              { 148, 112, 0, 0},
                              { 247, 101, 0, 0},
                              { 120, 32, 0, 0},
                              { 234, 45, 0, 0},
                              { 75, 32, 0, 0},
                              { 0, 76, 0, 0},
                              { 26, 105, 0, 0},
                              { 197, 110, 0, 0},
                              { 62, 101, 0, 0},
                              { 94, 97, 0, 0},
                              { 252, 114, 0, 0},
                              { 219, 32, 0, 0},
                              { 203, 70, 0, 0},
                              { 117, 111, 0, 0},
                              { 35, 114, 0, 0},
                              { 11, 99, 0, 0},
                              { 32, 101, 0, 0},
                              { 57, 32, 0, 0},
                              { 177, 76, 0, 0},
                              { 33, 105, 0, 0},
                              { 88, 110, 0, 0},
                              { 237, 101, 0, 0},
                              { 149, 97, 0, 0},
                              { 56, 114, 0, 0},
                              { 87, 32, 0, 0},
                              { 174, 86, 0, 0},
                              { 20, 101, 0, 0},
                              { 125, 108, 0, 0},
                              { 136, 111, 0, 0},
                              { 171, 99, 0, 0},
                              { 168, 105, 0, 0},
                              { 68, 116, 0, 0},
                              { 175, 121, 0, 0},
                              { 74, 32, 0, 0},
                              { 165, 65, 0, 0},
                              { 71, 110, 0, 0},
                              { 134, 103, 0, 0},
                              { 139, 117, 0, 0},
                              { 48, 108, 0, 0},
                              { 27, 97, 0, 0},
                              { 166, 114, 0, 0},
                              { 77, 32, 0, 0},
                              { 146, 84, 0, 0},
                              { 158, 111, 0, 0},
                              { 231, 114, 0, 0},
                              { 83, 113, 0, 0},
                              { 111, 117, 0, 0},
                              { 229, 101, 0, 0},
                              { 122, 32, 0, 0},
                              { 60, 65, 0, 0},
                              { 211, 110, 0, 0},
                              { 133, 103, 0, 0},
                              { 230, 117, 0, 0},
                              { 220, 108, 0, 0},
                              { 105, 97, 0, 0},
                              { 92, 114, 0, 0},
                              { 41, 32, 0, 0},
                              { 55, 86, 0, 0},
                              { 46, 101, 0, 0},
                              { 245, 108, 0, 0},
                              { 40, 111, 0, 0},
                              { 244, 99, 0, 0},
                              { 102, 105, 0, 0},
                              { 143, 116, 0, 0},
                              { 54, 121, 0, 0},
                              { 65, 32, 0, 0},
                              { 25, 86, 0, 0},
                              { 63, 101, 0, 0},
                              { 161, 99, 0, 0},
                              { 1, 116, 0, 0},
                              { 216, 111, 0, 0},
                              { 80, 114, 0, 0},
                              { 73, 32, 0, 0},
                              { 209, 70, 0, 0},
                              { 76, 105, 0, 0},
                              { 132, 101, 0, 0},
                              { 187, 108, 0, 0},
                              { 208, 100, 0, 0},
                              { 89, 32, 0, 0},
                              { 18, 67, 0, 0},
                              { 169, 111, 0, 0},
                              { 200, 117, 0, 0},
                              { 196, 110, 0, 0},
                              { 135, 116, 0, 0},
                              { 130, 32, 0, 0},
                              { 116, 45, 0, 0},
                              { 188, 32, 0, 0},
                              { 159, 0, 0, 0},
                              { 86, 0, 0, 0},
                              { 164, 0, 0, 0},
                              { 100, 0, 0, 0},
                              { 109, 0, 0, 0},
                              { 198, 0, 0, 0},
                              { 173, 0, 0, 0},
                              { 186, 0, 0, 0},
                              { 3, 0, 0, 0},
                              { 64, 0, 0, 0},
                              { 52, 0, 0, 0},
                              { 217, 0, 0, 0},
                              { 226, 0, 0, 0},
                              { 250, 0, 0, 0},
                              { 124, 0, 0, 0},
                              { 123, 0, 0, 0},
                              { 5, 0, 0, 0},
                              { 202, 0, 0, 0},
                              { 38, 0, 0, 0},
                              { 147, 0, 0, 0},
                              { 118, 0, 0, 0},
                              { 126, 0, 0, 0},
                              { 255, 0, 0, 0},
                              { 82, 0, 0, 0},
                              { 85, 0, 0, 0},
                              { 212, 0, 0, 0},
                              { 207, 0, 0, 0},
                              { 206, 0, 0, 0},
                              { 59, 0, 0, 0},
                              { 227, 0, 0, 0},
                              { 47, 0, 0, 0},
                              { 16, 0, 0, 0},
                              { 58, 0, 0, 0},
                              { 17, 0, 0, 0},
                              { 182, 0, 0, 0},
                              { 189, 0, 0, 0},
                              { 28, 0, 0, 0},
                              { 42, 0, 0, 0},
                              { 223, 0, 0, 0},
                              { 183, 0, 0, 0},
                              { 170, 0, 0, 0},
                              { 213, 0, 0, 0},
                              { 119, 0, 0, 0},
                              { 248, 0, 0, 0},
                              { 152, 0, 0, 0},
                              { 2, 0, 0, 0},
                              { 44, 0, 0, 0},
                              { 154, 0, 0, 0},
                              { 163, 0, 0, 0},
                              { 70, 0, 0, 0},
                              { 221, 0, 0, 0},
                              { 153, 0, 0, 0},
                              { 101, 0, 0, 0},
                              { 155, 0, 0, 0},
                              { 167, 0, 0, 0},
                              { 43, 0, 0, 0},
                              { 172, 0, 0, 0},
                              { 9, 0, 0, 0},
                              { 129, 0, 0, 0},
                              { 22, 0, 0, 0},
                              { 39, 0, 0, 0},
                              { 253, 0, 0, 0},
                              { 19, 0, 0, 0},
                              { 98, 0, 0, 0},
                              { 108, 0, 0, 0},
                              { 110, 0, 0, 0},
                              { 79, 0, 0, 0},
                              { 113, 0, 0, 0},
                              { 224, 0, 0, 0},
                              { 232, 0, 0, 0},
                              { 178, 0, 0, 0},
                              { 185, 0, 0, 0},
                              { 112, 0, 0, 0},
                              { 104, 0, 0, 0},
                              { 218, 0, 0, 0},
                              { 246, 0, 0, 0},
                              { 97, 0, 0, 0},
                              { 228, 0, 0, 0},
                              { 251, 0, 0, 0},
                              { 34, 0, 0, 0},
                              { 242, 0, 0, 0},
                              { 193, 0, 0, 0},
                              { 238, 0, 0, 0},
                              { 210, 0, 0, 0},
                              { 144, 0, 0, 0},
                              { 12, 0, 0, 0},
                              { 191, 0, 0, 0},
                              { 179, 0, 0, 0},
                              { 162, 0, 0, 0},
                              { 241, 0, 0, 0},
                              { 81, 0, 0, 0},
                              { 51, 0, 0, 0},
                              { 145, 0, 0, 0},
                              { 235, 0, 0, 0},
                              { 249, 0, 0, 0},
                              { 14, 0, 0, 0},
                              { 239, 0, 0, 0},
                              { 107, 0, 0, 0},
                              { 49, 0, 0, 0},
                              { 192, 0, 0, 0},
                              { 214, 0, 0, 0},
                              { 31, 0, 0, 0},
                              { 181, 0, 0, 0},
                              { 199, 0, 0, 0},
                              { 106, 0, 0, 0},
                              { 157, 0, 0, 0},
                              { 184, 0, 0, 0},
                              { 84, 0, 0, 0},
                              { 204, 0, 0, 0},
                              { 176, 0, 0, 0},
                              { 115, 0, 0, 0},
                              { 121, 0, 0, 0},
                              { 50, 0, 0, 0},
                              { 45, 0, 0, 0},
                              { 127, 0, 0, 0},
                              { 4, 0, 0, 0},
                              { 150, 0, 0, 0},
                              { 254, 0, 0, 0},
                              { 138, 0, 0, 0},
                              { 236, 0, 0, 0},
                              { 205, 0, 0, 0},
                              { 93, 0, 0, 0},
                              { 222, 0, 0, 0},
                              { 114, 0, 0, 0},
                              { 67, 0, 0, 0},
                              { 29, 0, 0, 0},
                              { 24, 0, 0, 0},
                              { 72, 0, 0, 0},
                              { 243, 0, 0, 0},
                              { 141, 0, 0, 0},
                              { 128, 0, 0, 0},
                              { 195, 0, 0, 0},
                              { 78, 0, 0, 0},
                              { 66, 0, 0, 0},
                              { 215, 0, 0, 0},
                              { 61, 0, 0, 0},
                              { 156, 0, 0, 0},
                              { 180, 0, 0, 0},
                              { 151, 0, 0, 0},
                              { 160, 0, 0, 0},
                              { 137, 0, 0, 0},
                              { 91, 0, 0, 0},
                              { 90, 0, 0, 0},
                              { 15, 0, 0, 0},
                              { 131, 0, 0, 0},
                              { 13, 0, 0, 0},
                              { 201, 0, 0, 0},
                              { 95, 0, 0, 0},
                              { 96, 0, 0, 0},
                              { 53, 0, 0, 0},
                              { 194, 0, 0, 0},
                              { 233, 0, 0, 0},
                              { 7, 0, 0, 0},
                              { 225, 0, 0, 0},
                              { 140, 0, 0, 0},
                              { 36, 0, 0, 0},
                              { 103, 0, 0, 0},
                              { 30, 0, 0, 0},
                              { 69, 0, 0, 0},
                              { 142, 0, 0, 0},
                              { 8, 0, 0, 0},
                              { 99, 0, 0, 0},
                              { 37, 0, 0, 0},
                              { 240, 0, 0, 0},
                              { 21, 0, 0, 0},
                              { 10, 0, 0, 0},
                              { 23, 0, 0, 0},
                              { 190, 0, 0, 0},
                              { 6, 0, 0, 0},
                              { 148, 0, 0, 0},
                              { 247, 0, 0, 0},
                              { 120, 0, 0, 0},
                              { 234, 0, 0, 0},
                              { 75, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 26, 0, 0, 0},
                              { 197, 0, 0, 0},
                              { 62, 0, 0, 0},
                              { 94, 0, 0, 0},
                              { 252, 0, 0, 0},
                              { 219, 0, 0, 0},
                              { 203, 0, 0, 0},
                              { 117, 0, 0, 0},
                              { 35, 0, 0, 0},
                              { 11, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 57, 0, 0, 0},
                              { 177, 0, 0, 0},
                              { 33, 0, 0, 0},
                              { 88, 0, 0, 0},
                              { 237, 0, 0, 0},
                              { 149, 0, 0, 0},
                              { 56, 0, 0, 0},
                              { 87, 0, 0, 0},
                              { 174, 0, 0, 0},
                              { 20, 0, 0, 0},
                              { 125, 0, 0, 0},
                              { 136, 0, 0, 0},
                              { 171, 0, 0, 0},
                              { 168, 0, 0, 0},
                              { 68, 0, 0, 0},
                              { 175, 0, 0, 0},
                              { 74, 0, 0, 0},
                              { 165, 0, 0, 0},
                              { 71, 0, 0, 0},
                              { 134, 0, 0, 0},
                              { 139, 0, 0, 0},
                              { 48, 0, 0, 0},
                              { 27, 0, 0, 0},
                              { 166, 0, 0, 0},
                              { 77, 0, 0, 0},
                              { 146, 0, 0, 0},
                              { 158, 0, 0, 0},
                              { 231, 0, 0, 0},
                              { 83, 0, 0, 0},
                              { 111, 0, 0, 0},
                              { 229, 0, 0, 0},
                              { 122, 0, 0, 0},
                              { 60, 0, 0, 0},
                              { 211, 0, 0, 0},
                              { 133, 0, 0, 0},
                              { 230, 0, 0, 0},
                              { 220, 0, 0, 0},
                              { 105, 0, 0, 0},
                              { 92, 0, 0, 0},
                              { 41, 0, 0, 0},
                              { 55, 0, 0, 0},
                              { 46, 0, 0, 0},
                              { 245, 0, 0, 0},
                              { 40, 0, 0, 0},
                              { 244, 0, 0, 0},
                              { 102, 0, 0, 0},
                              { 143, 0, 0, 0},
                              { 54, 0, 0, 0},
                              { 65, 0, 0, 0},
                              { 25, 0, 0, 0},
                              { 63, 0, 0, 0},
                              { 161, 0, 0, 0},
                              { 1, 0, 0, 0},
                              { 216, 0, 0, 0},
                              { 80, 0, 0, 0},
                              { 73, 0, 0, 0},
                              { 209, 0, 0, 0},
                              { 76, 0, 0, 0},
                              { 132, 0, 0, 0},
                              { 187, 0, 0, 0},
                              { 208, 0, 0, 0},
                              { 89, 0, 0, 0},
                              { 18, 0, 0, 0},
                              { 169, 0, 0, 0},
                              { 200, 0, 0, 0},
                              { 196, 0, 0, 0},
                              { 135, 0, 0, 0},
                              { 130, 0, 0, 0},
                              { 116, 0, 0, 0},
                              { 188, 0, 0, 0},
                              { 159, 0, 0, 0},
                              { 86, 0, 0, 0},
                              { 164, 0, 0, 0},
                              { 100, 0, 0, 0},
                              { 109, 0, 0, 0},
                              { 198, 0, 0, 0},
                              { 173, 0, 0, 0},
                              { 186, 0, 0, 0},
                              { 3, 0, 0, 0},
                              { 64, 0, 0, 0},
                              { 52, 0, 0, 0},
                              { 217, 0, 0, 0},
                              { 226, 0, 0, 0},
                              { 250, 0, 0, 0},
                              { 124, 0, 0, 0},
                              { 123, 0, 0, 0},
                              { 5, 0, 0, 0},
                              { 202, 0, 0, 0},
                              { 38, 0, 0, 0},
                              { 147, 0, 0, 0},
                              { 118, 0, 0, 0},
                              { 126, 0, 0, 0},
                              { 255, 0, 0, 0},
                              { 82, 0, 0, 0},
                              { 85, 0, 0, 0},
                              { 212, 0, 0, 0},
                              { 207, 0, 0, 0},
                              { 206, 0, 0, 0},
                              { 59, 0, 0, 0},
                              { 227, 0, 0, 0},
                              { 47, 0, 0, 0},
                              { 16, 0, 0, 0},
                              { 58, 0, 0, 0},
                              { 17, 0, 0, 0},
                              { 182, 0, 0, 0},
                              { 189, 0, 0, 0},
                              { 28, 0, 0, 0},
                              { 42, 0, 0, 0},
                              { 223, 0, 0, 0},
                              { 183, 0, 0, 0},
                              { 170, 0, 0, 0},
                              { 213, 0, 0, 0},
                              { 119, 0, 0, 0},
                              { 248, 0, 0, 0},
                              { 152, 0, 0, 0},
                              { 2, 0, 0, 0},
                              { 44, 0, 0, 0},
                              { 154, 0, 0, 0},
                              { 163, 0, 0, 0},
                              { 70, 0, 0, 0},
                              { 221, 0, 0, 0},
                              { 153, 0, 0, 0},
                              { 101, 0, 0, 0},
                              { 155, 0, 0, 0},
                              { 167, 0, 0, 0},
                              { 43, 0, 0, 0},
                              { 172, 0, 0, 0},
                              { 9, 0, 0, 0},
                              { 129, 0, 0, 0},
                              { 22, 0, 0, 0},
                              { 39, 0, 0, 0},
                              { 253, 0, 0, 0},
                              { 19, 0, 0, 0},
                              { 98, 0, 0, 0},
                              { 108, 0, 0, 0},
                              { 110, 0, 0, 0},
                              { 79, 0, 0, 0},
                              { 113, 0, 0, 0},
                              { 224, 0, 0, 0},
                              { 232, 0, 0, 0},
                              { 178, 0, 0, 0},
                              { 185, 0, 0, 0},
                              { 112, 0, 0, 0},
                              { 104, 0, 0, 0},
                              { 218, 0, 0, 0},
                              { 246, 0, 0, 0},
                              { 97, 0, 0, 0},
                              { 228, 0, 0, 0},
                              { 251, 0, 0, 0},
                              { 34, 0, 0, 0},
                              { 242, 0, 0, 0},
                              { 193, 0, 0, 0},
                              { 238, 0, 0, 0},
                              { 210, 0, 0, 0},
                              { 144, 0, 0, 0},
                              { 12, 0, 0, 0},
                              { 191, 0, 0, 0},
                              { 179, 0, 0, 0},
                              { 162, 0, 0, 0},
                              { 241, 0, 0, 0},
                              { 81, 0, 0, 0},
                              { 51, 0, 0, 0},
                              { 145, 0, 0, 0},
                              { 235, 0, 0, 0},
                              { 249, 0, 0, 0},
                              { 14, 0, 0, 0},
                              { 239, 0, 0, 0},
                              { 107, 0, 0, 0},
                              { 49, 0, 0, 0},
                              { 192, 0, 0, 0},
                              { 214, 0, 0, 0},
                              { 31, 0, 0, 0},
                              { 181, 0, 0, 0},
                              { 199, 0, 0, 0},
                              { 106, 0, 0, 0},
                              { 157, 0, 0, 0},
                              { 184, 0, 0, 0},
                              { 84, 0, 0, 0},
                              { 204, 0, 0, 0},
                              { 176, 0, 0, 0},
                              { 115, 0, 0, 0},
                              { 121, 0, 0, 0},
                              { 50, 0, 0, 0},
                              { 45, 0, 0, 0},
                              { 127, 0, 0, 0},
                              { 4, 0, 0, 0},
                              { 150, 0, 0, 0},
                              { 254, 0, 0, 0},
                              { 138, 0, 0, 0},
                              { 236, 0, 0, 0},
                              { 205, 0, 0, 0},
                              { 93, 0, 0, 0},
                              { 222, 0, 0, 0},
                              { 114, 0, 0, 0},
                              { 67, 0, 0, 0},
                              { 29, 0, 0, 0},
                              { 24, 0, 0, 0},
                              { 72, 0, 0, 0},
                              { 243, 0, 0, 0},
                              { 141, 0, 0, 0},
                              { 128, 0, 0, 0},
                              { 195, 0, 0, 0},
                              { 78, 0, 0, 0},
                              { 66, 0, 0, 0},
                              { 215, 0, 0, 0},
                              { 61, 0, 0, 0},
                              { 156, 0, 0, 0},
                              { 180, 0, 0, 0} }
dcl_constantbuffer CB0[12], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (sint,sint,sint,sint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_uav_structured u0, 4
dcl_input vThreadIDInGroup.xyz
dcl_input vThreadID.xyz
dcl_temps 11
dcl_tgsm_structured g0, 64, 64
dcl_thread_group 4, 4, 4
imul null, r0.x, l(10), cb0[11].x
ult r0.x, vThreadID.x, r0.x
ult r0.yz, vThreadID.yyzy, l(0, 10, 10, 0)
and r0.x, r0.y, r0.x
and r0.x, r0.z, r0.x
if_nz r0.x
  udiv r0.x, r1.x, vThreadID.x, l(10)
  iadd r0.x, r0.x, cb0[10].w
  ld_indexable(buffer)(float,float,float,float) r0.yzw, r0.xxxx, t4.wxyz
  ld_indexable(buffer)(float,float,float,float) r1.yzw, r0.xxxx, t3.wxyz
  add r0.xyz, r0.yzwy, -r1.yzwy
  mul r2.xyz, r0.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)
  max r0.w, r2.y, r2.x
  max r0.w, r2.z, r0.w
  div r0.xyz, r0.xyzx, r0.wwww
  ftou r0.xyz, r0.xyzx
  ult r0.x, r1.x, r0.x
  ult r0.yz, vThreadID.yyzy, r0.yyzy
  and r0.x, r0.y, r0.x
  and r0.x, r0.z, r0.x
  if_nz r0.x
    ishl r0.x, vThreadIDInGroup.y, l(2)
    imad r0.x, vThreadIDInGroup.x, l(16), r0.x
    iadd r0.x, r0.x, vThreadIDInGroup.z
    utof r2.x, r1.x
    utof r2.yz, vThreadID.yyzy
    add r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mad r1.xyz, r2.xyzx, r0.wwww, r1.yzwy
    ld_indexable(buffer)(sint,sint,sint,sint) r0.y, cb0[11].zzzz, t2.yxzw
    iadd r0.z, l(1), cb0[11].z
    ld_indexable(buffer)(sint,sint,sint,sint) r0.z, r0.zzzz, t2.yzxw
    iadd r1.w, -r0.z, r0.y
    store_structured g0.xyzw, r0.x, l(0), l(0,0,0,0)
    store_structured g0.xyzw, r0.x, l(16), l(0,0,0,0)
    store_structured g0.xyzw, r0.x, l(32), l(0,0,0,0)
    store_structured g0.xyzw, r0.x, l(48), l(0,0,0,0)
    if_nz r1.w
      ftoi r2.xyz, r1.xyzx
      imad r2.xyz, r2.xyzx, l(0x0019660d, 0x0019660d, 0x0019660d, 0), l(0x3c6ef35f, 0x3c6ef35f, 0x3c6ef35f, 0)
      imad r1.w, r2.y, r2.z, r2.x
      imad r2.x, r2.z, r1.w, r2.y
      imad r2.y, r1.w, r2.x, r2.z
      imad r3.x, r2.x, r2.y, r1.w
      imad r3.y, r2.y, r3.x, r2.x
      imad r3.z, r3.x, r3.y, r2.y
      ushr r2.xyz, r3.xyzx, l(16, 16, 16, 0)
      utof r2.xyz, r2.xyzx
      mad r2.xyz, r2.xyzx, l(0.000015, 0.000015, 0.000015, 0.000000), l(-0.500000, -0.500000, -0.500000, 0.000000)
      dp3 r1.w, r2.xyzx, r2.xyzx
      sqrt r1.w, r1.w
      ne r2.w, r1.w, l(0.000000)
      mov r3.x, l(0)
      mov r3.y, r0.y
      loop 
        ige r3.z, r3.y, r0.z
        breakc_nz r3.z
        ld_indexable(buffer)(sint,sint,sint,sint) r3.z, r3.yyyy, t1.yzxw
        ld_indexable(buffer)(float,float,float,float) r3.w, r3.zzzz, t0.yzwx
        ftoi r3.w, r3.w
        ieq r4.x, r3.w, l(3)
        if_nz r4.x
          iadd r4.x, r3.z, l(1)
          ld_indexable(buffer)(float,float,float,float) r4.x, r4.xxxx, t0.xyzw
          ftoi r4.x, r4.x
          ieq r4.y, r4.x, l(3)
          if_nz r4.y
            iadd r4.y, r3.z, l(2)
            iadd r4.z, r3.x, l(1)
            ishl r4.w, r3.x, l(2)
            ld_indexable(buffer)(float,float,float,float) r4.y, r4.yyyy, t0.yxzw
            store_structured g0.x, r0.x, r4.w, r4.y
            mov r3.x, r4.z
          else 
            ieq r4.y, r4.x, l(15)
            if_nz r4.y
              iadd r5.xyzw, r3.zzzz, l(2, 3, 4, 5)
              ld_indexable(buffer)(float,float,float,float) r4.y, r5.yyyy, t0.wxyz
              ld_indexable(buffer)(float,float,float,float) r4.z, r5.zzzz, t0.wyxz
              ld_indexable(buffer)(float,float,float,float) r4.w, r5.wwww, t0.wyzx
              add r4.yzw, -r1.xxyz, r4.yyzw
              dp3 r4.y, r4.yzwy, r4.yzwy
              sqrt r4.y, r4.y
              iadd r6.xyzw, r3.zzzz, l(6, 7, 8, 9)
              ld_indexable(buffer)(float,float,float,float) r4.z, r6.xxxx, t0.yzxw
              ld_indexable(buffer)(float,float,float,float) r4.w, r6.yyyy, t0.yzwx
              div r5.y, r4.z, r4.w
              max r4.z, r4.z, l(0.000000)
              div r4.z, l(6.283185), r4.z
              ld_indexable(buffer)(float,float,float,float) r5.z, r6.zzzz, t0.yzxw
              add r5.z, -r5.z, cb0[10].z
              max r5.z, r5.z, l(0.000000)
              mul r5.w, r5.z, r5.y
              mad r5.y, -r5.y, r5.z, r4.y
              mul r4.z, r4.z, r5.y
              ld_indexable(buffer)(float,float,float,float) r5.y, r6.wwww, t0.yxzw
              ftoi r5.y, r5.y
              ld_indexable(buffer)(float,float,float,float) r5.x, r5.xxxx, t0.xyzw
              ieq r6.x, r5.y, l(1)
              if_nz r6.x
                mul r6.x, r4.z, -r4.z
                mul r6.x, r6.x, l(1.442695)
                exp r6.x, r6.x
                mul r6.x, r5.x, r6.x
              else 
                if_z r5.y
                  sincos null, r4.z, r4.z
                  mul r6.x, r4.z, r5.x
                else 
                  ieq r4.z, r5.y, l(2)
                  if_nz r4.z
                    lt r4.z, r4.y, r5.w
                    lt r6.y, l(0.000000), r5.w
                    and r4.z, r4.z, r6.y
                    if_nz r4.z
                      iadd r4.z, r3.z, l(10)
                      ld_indexable(buffer)(float,float,float,float) r4.z, r4.zzzz, t0.yzxw
                      ftoi r4.z, r4.z
                      div r4.y, r4.y, r5.w
                      add r6.yz, -r4.yyyy, l(0.000000, 1.000000, 2.000000, 0.000000)
                      mul r4.y, r5.x, r6.y
                      mul r5.w, r6.y, r4.y
                      add r6.y, r5.x, r5.x
                      div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.z
                      add r6.w, -r6.w, l(1.000000)
                      mul r6.y, r6.w, r6.y
                      ieq r7.xyzw, r4.zzzz, l(1, 3, 2, 4)
                      log r6.z, r6.z
                      mul r6.z, r5.x, r6.z
                      and r6.z, r6.z, r7.w
                      movc r6.y, r7.z, r6.y, r6.z
                      movc r5.w, r7.y, r5.w, r6.y
                      movc r4.y, r7.x, r4.y, r5.w
                      movc r6.x, r4.z, r4.y, r5.x
                    else 
                      mov r6.x, l(0)
                    endif 
                  else 
                    ieq r4.y, r5.y, l(3)
                    if_nz r4.y
                      div r4.y, r5.z, r4.w
                      mul r4.y, r4.y, -r4.y
                      mul r4.y, r4.y, l(1.442695)
                      exp r4.y, r4.y
                      mul r6.x, r4.y, r5.x
                    else 
                      mov r6.x, l(0)
                    endif 
                  endif 
                endif 
              endif 
              iadd r4.y, r3.x, l(1)
              ishl r4.z, r3.x, l(2)
              store_structured g0.x, r0.x, r4.z, r6.x
              mov r3.x, r4.y
            else 
              ieq r4.y, r4.x, l(4)
              if_nz r4.y
                iadd r5.xyzw, r3.zzzz, l(7, 8, 9, 6)
                ld_indexable(buffer)(float,float,float,float) r4.y, r5.xxxx, t0.wxyz
                ld_indexable(buffer)(float,float,float,float) r4.z, r5.yyyy, t0.wyxz
                ld_indexable(buffer)(float,float,float,float) r4.w, r5.zzzz, t0.wyzx
                add r4.yzw, -r1.xxyz, r4.yyzw
                dp3 r4.y, r4.yzwy, r4.yzwy
                sqrt r4.y, r4.y
                ld_indexable(buffer)(float,float,float,float) r4.z, r5.wwww, t0.yzxw
                lt r4.w, l(0.000000), r4.z
                lt r5.x, r4.y, r4.z
                and r4.w, r4.w, r5.x
                if_nz r4.w
                  iadd r5.xyzw, r3.zzzz, l(2, 4, 3, 10)
                  ld_indexable(buffer)(float,float,float,float) r4.w, r5.yyyy, t0.yzwx
                  ld_indexable(buffer)(float,float,float,float) r5.y, r5.zzzz, t0.yxzw
                  add r4.w, r4.w, -r5.y
                  div r4.y, r4.y, r4.z
                  add r4.yz, -r4.yyyy, l(0.000000, 1.000000, 2.000000, 0.000000)
                  ld_indexable(buffer)(float,float,float,float) r5.z, r5.wwww, t0.yzxw
                  ftoi r5.z, r5.z
                  mul r5.w, r4.y, r4.y
                  div r6.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
                  add r6.x, -r6.x, l(1.000000)
                  add r6.x, r6.x, r6.x
                  ieq r7.xyzw, r5.zzzz, l(1, 3, 2, 4)
                  log r4.z, r4.z
                  and r4.z, r4.z, r7.w
                  movc r4.z, r7.z, r6.x, r4.z
                  movc r4.z, r7.y, r5.w, r4.z
                  movc r4.y, r7.x, r4.y, r4.z
                  movc r4.y, r5.z, r4.y, l(1.000000)
                  ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.yzxw
                  mad r4.y, r4.y, r4.w, r5.y
                  mul r4.y, r4.y, r4.z
                else 
                  iadd r4.z, r3.z, l(5)
                  ld_indexable(buffer)(float,float,float,float) r4.y, r4.zzzz, t0.yxzw
                endif 
                iadd r4.z, r3.x, l(1)
                ishl r4.w, r3.x, l(2)
                store_structured g0.x, r0.x, r4.w, r4.y
                mov r3.x, r4.z
              else 
                ieq r4.y, r4.x, l(5)
                if_nz r4.y
                  iadd r5.xyzw, r3.zzzz, l(7, 8, 9, 10)
                  ld_indexable(buffer)(float,float,float,float) r4.y, r5.xxxx, t0.wxyz
                  ld_indexable(buffer)(float,float,float,float) r4.z, r5.yyyy, t0.wyxz
                  ld_indexable(buffer)(float,float,float,float) r4.w, r5.zzzz, t0.wyzx
                  ld_indexable(buffer)(float,float,float,float) r5.x, r5.wwww, t0.xyzw
                  iadd r6.xyz, r3.zzzz, l(11, 12, 6, 0)
                  ld_indexable(buffer)(float,float,float,float) r5.y, r6.xxxx, t0.yxzw
                  ld_indexable(buffer)(float,float,float,float) r5.z, r6.yyyy, t0.yzxw
                  dp3 r4.y, r4.yzwy, r5.xyzx
                  dp3 r4.z, r5.xyzx, r1.xyzx
                  add r4.y, -r4.y, r4.z
                  ld_indexable(buffer)(float,float,float,float) r4.z, r6.zzzz, t0.yzxw
                  lt r4.w, l(0.000000), r4.z
                  lt r5.x, -r4.z, r4.y
                  and r4.w, r4.w, r5.x
                  lt r5.x, r4.y, l(0.000000)
                  and r4.w, r4.w, r5.x
                  if_nz r4.w
                    iadd r5.xyzw, r3.zzzz, l(2, 4, 3, 13)
                    ld_indexable(buffer)(float,float,float,float) r4.w, r5.yyyy, t0.yzwx
                    ld_indexable(buffer)(float,float,float,float) r5.y, r5.zzzz, t0.yxzw
                    add r4.w, r4.w, -r5.y
                    div r4.y, r4.y, r4.z
                    add r4.yz, r4.yyyy, l(0.000000, 1.000000, 2.000000, 0.000000)
                    ld_indexable(buffer)(float,float,float,float) r5.z, r5.wwww, t0.yzxw
                    ftoi r5.z, r5.z
                    mul r5.w, r4.y, r4.y
                    div r6.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
                    add r6.x, -r6.x, l(1.000000)
                    add r6.x, r6.x, r6.x
                    ieq r7.xyzw, r5.zzzz, l(1, 3, 2, 4)
                    log r4.z, r4.z
                    and r4.z, r4.z, r7.w
                    movc r4.z, r7.z, r6.x, r4.z
                    movc r4.z, r7.y, r5.w, r4.z
                    movc r4.y, r7.x, r4.y, r4.z
                    movc r4.y, r5.z, r4.y, l(1.000000)
                    ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.yzxw
                    mad r4.y, r4.y, r4.w, r5.y
                    mul r4.y, r4.y, r4.z
                  else 
                    iadd r4.z, r3.z, l(5)
                    ld_indexable(buffer)(float,float,float,float) r4.y, r4.zzzz, t0.yxzw
                  endif 
                  iadd r4.z, r3.x, l(1)
                  ishl r4.w, r3.x, l(2)
                  store_structured g0.x, r0.x, r4.w, r4.y
                  mov r3.x, r4.z
                else 
                  ieq r4.y, r4.x, l(6)
                  if_nz r4.y
                    iadd r5.xyzw, r3.zzzz, l(6, 7, 8, 9)
                    ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.wyxz
                    ld_indexable(buffer)(float,float,float,float) r4.w, r5.yyyy, t0.wyzx
                    ld_indexable(buffer)(float,float,float,float) r4.y, r5.zzzz, t0.wxyz
                    ld_indexable(buffer)(float,float,float,float) r5.x, r5.wwww, t0.xyzw
                    iadd r6.xyzw, r3.zzzz, l(10, 11, 12, 13)
                    ld_indexable(buffer)(float,float,float,float) r5.y, r6.xxxx, t0.wxyz
                    ld_indexable(buffer)(float,float,float,float) r5.z, r6.yyyy, t0.wyxz
                    ld_indexable(buffer)(float,float,float,float) r5.w, r6.zzzz, t0.wyzx
                    ld_indexable(buffer)(float,float,float,float) r6.x, r6.wwww, t0.xyzw
                    iadd r6.yz, r3.zzzz, l(0, 14, 15, 0)
                    ld_indexable(buffer)(float,float,float,float) r6.y, r6.yyyy, t0.yxzw
                    ld_indexable(buffer)(float,float,float,float) r6.z, r6.zzzz, t0.yzxw
                    ne r6.w, r6.x, l(0.000000)
                    div r6.x, l(1.000000, 1.000000, 1.000000, 1.000000), r6.x
                    and r7.x, r6.x, r6.w
                    ne r6.x, r6.y, l(0.000000)
                    div r6.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
                    and r7.y, r6.y, r6.x
                    ne r6.x, r6.z, l(0.000000)
                    div r6.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.z
                    and r7.z, r6.y, r6.x
                    add r5.yzw, r1.xxyz, -r5.yyzw
                    mul r6.xyz, r5.wyzw, r4.zwyz
                    mad r6.xyz, r4.yzwy, r5.yzwy, -r6.xyzx
                    add r6.xyz, r6.xyzx, r6.xyzx
                    mad r5.xyz, -r5.xxxx, r6.zxyz, r5.yzwy
                    mul r8.xyz, r4.yzwy, r6.xyzx
                    mad r4.yzw, r4.wwyz, r6.yyzx, -r8.xxyz
                    add r4.yzw, r4.yyzw, r5.xxyz
                    mul r4.yzw, r7.xxyz, r4.yyzw
                    add r4.yzw, |r4.yyzw|, l(0.000000, -50.000000, -50.000000, -50.000000)
                    lt r5.xyz, r4.zwwz, r4.yyzy
                    and r5.x, r5.y, r5.x
                    movc r5.y, r5.z, l(1), l(2)
                    movc r5.x, r5.x, l(0), r5.y
                    max r5.yzw, r4.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                    dp3 r5.y, r5.yzwy, r5.yzwy
                    sqrt r5.y, r5.y
                    dp3 r4.y, r4.yzwy, icb[r5.x + 0].xyzx
                    min r4.y, r4.y, l(0.000000)
                    add r4.y, r4.y, r5.y
                    lt r4.z, r4.y, l(0.000000)
                    if_nz r4.z
                      iadd r5.xyzw, r3.zzzz, l(2, 4, 3, 16)
                      ld_indexable(buffer)(float,float,float,float) r4.z, r5.yyyy, t0.yzxw
                      ld_indexable(buffer)(float,float,float,float) r4.w, r5.zzzz, t0.yzwx
                      add r4.z, -r4.w, r4.z
                      mul r5.y, r4.y, l(-0.020000)
                      ld_indexable(buffer)(float,float,float,float) r5.z, r5.wwww, t0.yzxw
                      ftoi r5.z, r5.z
                      mul r5.w, r5.y, r5.y
                      mad r4.y, r4.y, l(-0.020000), l(1.000000)
                      div r6.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.y
                      add r6.x, -r6.x, l(1.000000)
                      add r6.x, r6.x, r6.x
                      ieq r7.xyzw, r5.zzzz, l(1, 3, 2, 4)
                      log r4.y, r4.y
                      and r4.y, r4.y, r7.w
                      movc r4.y, r7.z, r6.x, r4.y
                      movc r4.y, r7.y, r5.w, r4.y
                      movc r4.y, r7.x, r5.y, r4.y
                      movc r4.y, r5.z, r4.y, l(1.000000)
                      ld_indexable(buffer)(float,float,float,float) r5.x, r5.xxxx, t0.xyzw
                      mad r4.y, r4.y, r4.z, r4.w
                      mul r4.y, r4.y, r5.x
                    else 
                      iadd r4.z, r3.z, l(5)
                      ld_indexable(buffer)(float,float,float,float) r4.y, r4.zzzz, t0.yxzw
                    endif 
                    iadd r4.z, r3.x, l(1)
                    ishl r4.w, r3.x, l(2)
                    store_structured g0.x, r0.x, r4.w, r4.y
                    mov r3.x, r4.z
                  else 
                    ieq r4.y, r4.x, l(7)
                    if_nz r4.y
                      iadd r5.xyzw, r3.zzzz, l(2, 4, 5, 6)
                      ld_indexable(buffer)(float,float,float,float) r4.z, r5.yyyy, t0.wyxz
                      ld_indexable(buffer)(float,float,float,float) r4.w, r5.zzzz, t0.wyzx
                      ld_indexable(buffer)(float,float,float,float) r4.y, r5.wwww, t0.wxyz
                      iadd r6.xyzw, r3.zzzz, l(7, 8, 9, 10)
                      ld_indexable(buffer)(float,float,float,float) r5.y, r6.xxxx, t0.yxzw
                      ld_indexable(buffer)(float,float,float,float) r7.x, r6.yyyy, t0.xyzw
                      ld_indexable(buffer)(float,float,float,float) r7.y, r6.zzzz, t0.yxzw
                      ld_indexable(buffer)(float,float,float,float) r7.z, r6.wwww, t0.yzxw
                      iadd r6.xyzw, r3.zzzz, l(11, 12, 13, 3)
                      ld_indexable(buffer)(float,float,float,float) r8.x, r6.xxxx, t0.xyzw
                      ld_indexable(buffer)(float,float,float,float) r8.y, r6.yyyy, t0.yxzw
                      ld_indexable(buffer)(float,float,float,float) r8.z, r6.zzzz, t0.yzxw
                      max r6.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                      mul r8.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                      ne r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                      div r9.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r8.xyzx
                      and r6.xyz, r6.xyzx, r9.xyzx
                      add r7.xyz, r1.xyzx, -r7.xyzx
                      mul r9.xyz, r7.zxyz, r4.zwyz
                      mad r9.xyz, r4.yzwy, r7.xyzx, -r9.xyzx
                      add r9.xyz, r9.xyzx, r9.xyzx
                      mad r5.yzw, -r5.yyyy, r9.zzxy, r7.xxyz
                      mul r7.xyz, r4.yzwy, r9.xyzx
                      mad r4.yzw, r4.wwyz, r9.yyzx, -r7.xxyz
                      add r4.yzw, r4.yyzw, r5.yyzw
                      div r4.yzw, r4.yyzw, r8.xxyz
                      ge r5.yzw, r4.yyzw, -r4.yyzw
                      frc r4.yzw, |r4.yyzw|
                      movc r4.yzw, r5.yyzw, r4.yyzw, -r4.yyzw
                      mul r4.yzw, r8.xxyz, r4.yyzw
                      mul r4.yzw, r6.xxyz, r4.yyzw
                      max r4.yzw, r4.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
                      min r4.yzw, r4.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
                      mad r4.yzw, r4.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000), l(0.000000, 0.500000, 0.500000, 0.500000)
                      mul r5.yzw, r4.yyzw, l(0.000000, 255.000000, 255.000000, 255.000000)
                      round_ni r5.yzw, r5.yyzw
                      ftoi r6.xyz, r5.yzwy
                      mad r4.yzw, r4.yyzw, l(0.000000, 255.000000, 255.000000, 255.000000), -r5.yyzw
                      mul r5.yzw, r4.yyzw, r4.yyzw
                      mul r5.yzw, r4.yyzw, r5.yyzw
                      mad r7.xyz, r4.yzwy, l(6.000000, 6.000000, 6.000000, 0.000000), l(-15.000000, -15.000000, -15.000000, 0.000000)
                      mad r7.xyz, r4.yzwy, r7.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
                      mul r5.yzw, r5.yyzw, r7.xxyz
                      iadd r7.x, r6.y, icb[r6.x + 4].x
                      iadd r7.y, r6.z, icb[r7.x + 4].x
                      iadd r7.x, r6.z, icb[r7.x + 5].x
                      iadd r6.x, r6.y, icb[r6.x + 5].x
                      iadd r6.y, r6.z, icb[r6.x + 4].x
                      iadd r6.x, r6.z, icb[r6.x + 5].x
                      and r8.xyz, l(15, 1, 2, 0), icb[r7.y + 4].xxxx
                      ilt r7.zw, r8.xxxx, l(0, 0, 8, 4)
                      movc r6.z, r7.z, r4.y, r4.z
                      ieq r8.xw, r8.xxxx, l(12, 0, 0, 14)
                      or r7.z, r8.w, r8.x
                      movc r7.z, r7.z, r4.y, r4.w
                      movc r7.z, r7.w, r4.z, r7.z
                      movc r6.z, r8.y, -r6.z, r6.z
                      movc r7.z, r8.z, -r7.z, r7.z
                      add r6.z, r6.z, r7.z
                      add r8.xyz, r4.yzwy, l(-1.000000, -1.000000, -1.000000, 0.000000)
                      and r9.xyz, l(15, 1, 2, 0), icb[r6.y + 4].xxxx
                      ilt r7.zw, r9.xxxx, l(0, 0, 8, 4)
                      movc r7.z, r7.z, r8.x, r4.z
                      ieq r9.xw, r9.xxxx, l(12, 0, 0, 14)
                      or r8.w, r9.w, r9.x
                      movc r8.w, r8.w, r8.x, r4.w
                      movc r7.w, r7.w, r4.z, r8.w
                      movc r7.zw, r9.yyyz, -r7.zzzw, r7.zzzw
                      add r7.z, r7.w, r7.z
                      add r7.z, -r6.z, r7.z
                      mad r6.z, r5.y, r7.z, r6.z
                      and r9.xyz, l(15, 1, 2, 0), icb[r7.x + 4].xxxx
                      ilt r7.zw, r9.xxxx, l(0, 0, 8, 4)
                      movc r7.z, r7.z, r4.y, r8.y
                      ieq r9.xw, r9.xxxx, l(12, 0, 0, 14)
                      or r8.w, r9.w, r9.x
                      movc r8.w, r8.w, r4.y, r4.w
                      movc r7.w, r7.w, r8.y, r8.w
                      movc r7.zw, r9.yyyz, -r7.zzzw, r7.zzzw
                      add r7.z, r7.w, r7.z
                      and r9.xyz, l(15, 1, 2, 0), icb[r6.x + 4].xxxx
                      ilt r10.xy, r9.xxxx, l(8, 4, 0, 0)
                      movc r7.w, r10.x, r8.x, r8.y
                      ieq r9.xw, r9.xxxx, l(12, 0, 0, 14)
                      or r8.w, r9.w, r9.x
                      movc r4.w, r8.w, r8.x, r4.w
                      movc r4.w, r10.y, r8.y, r4.w
                      movc r7.w, r9.y, -r7.w, r7.w
                      movc r4.w, r9.z, -r4.w, r4.w
                      add r4.w, r4.w, r7.w
                      add r4.w, -r7.z, r4.w
                      mad r4.w, r5.y, r4.w, r7.z
                      add r4.w, -r6.z, r4.w
                      mad r4.w, r5.z, r4.w, r6.z
                      and r7.yzw, l(0, 15, 1, 2), icb[r7.y + 5].xxxx
                      ilt r9.xy, r7.yyyy, l(8, 4, 0, 0)
                      movc r6.z, r9.x, r4.y, r4.z
                      ieq r9.xz, r7.yyyy, l(12, 0, 14, 0)
                      or r7.y, r9.z, r9.x
                      movc r7.y, r7.y, r4.y, r8.z
                      movc r7.y, r9.y, r4.z, r7.y
                      movc r6.z, r7.z, -r6.z, r6.z
                      movc r7.y, r7.w, -r7.y, r7.y
                      add r6.z, r6.z, r7.y
                      and r7.yzw, l(0, 15, 1, 2), icb[r6.y + 5].xxxx
                      ilt r9.xy, r7.yyyy, l(8, 4, 0, 0)
                      movc r6.y, r9.x, r8.x, r4.z
                      ieq r9.xz, r7.yyyy, l(12, 0, 14, 0)
                      or r7.y, r9.z, r9.x
                      movc r7.y, r7.y, r8.x, r8.z
                      movc r4.z, r9.y, r4.z, r7.y
                      movc r6.y, r7.z, -r6.y, r6.y
                      movc r4.z, r7.w, -r4.z, r4.z
                      add r4.z, r4.z, r6.y
                      add r4.z, -r6.z, r4.z
                      mad r4.z, r5.y, r4.z, r6.z
                      and r7.xyz, l(15, 1, 2, 0), icb[r7.x + 5].xxxx
                      ilt r6.yz, r7.xxxx, l(0, 8, 4, 0)
                      movc r6.y, r6.y, r4.y, r8.y
                      ieq r7.xw, r7.xxxx, l(12, 0, 0, 14)
                      or r7.x, r7.w, r7.x
                      movc r4.y, r7.x, r4.y, r8.z
                      movc r4.y, r6.z, r8.y, r4.y
                      movc r6.y, r7.y, -r6.y, r6.y
                      movc r4.y, r7.z, -r4.y, r4.y
                      add r4.y, r4.y, r6.y
                      and r6.xyz, l(15, 1, 2, 0), icb[r6.x + 5].xxxx
                      ilt r7.xy, r6.xxxx, l(8, 4, 0, 0)
                      movc r7.x, r7.x, r8.x, r8.y
                      ieq r7.zw, r6.xxxx, l(0, 0, 12, 14)
                      or r6.x, r7.w, r7.z
                      movc r6.x, r6.x, r8.x, r8.z
                      movc r6.x, r7.y, r8.y, r6.x
                      movc r6.y, r6.y, -r7.x, r7.x
                      movc r6.x, r6.z, -r6.x, r6.x
                      add r6.x, r6.x, r6.y
                      add r6.x, -r4.y, r6.x
                      mad r4.y, r5.y, r6.x, r4.y
                      add r4.y, -r4.z, r4.y
                      mad r4.y, r5.z, r4.y, r4.z
                      add r4.y, -r4.w, r4.y
                      mad r4.y, r5.w, r4.y, r4.w
                      mul r4.y, r4.y, l(0.970000)
                      max r4.y, r4.y, l(-1.000000)
                      min r4.y, r4.y, l(1.000000)
                      mad r4.y, r4.y, l(0.500000), l(0.500000)
                      iadd r4.z, r3.x, l(1)
                      ishl r4.w, r3.x, l(2)
                      ld_indexable(buffer)(float,float,float,float) r5.y, r6.wwww, t0.yxzw
                      ld_indexable(buffer)(float,float,float,float) r5.x, r5.xxxx, t0.xyzw
                      add r5.y, -r5.x, r5.y
                      mad r4.y, r4.y, r5.y, r5.x
                      store_structured g0.x, r0.x, r4.w, r4.y
                      mov r3.x, r4.z
                    else 
                      ieq r4.y, r4.x, l(11)
                      if_nz r4.y
                        iadd r5.xyzw, r3.zzzz, l(2, 3, 4, 5)
                        ld_indexable(buffer)(float,float,float,float) r4.y, r5.yyyy, t0.yxzw
                        ftoi r4.y, r4.y
                        ld_indexable(buffer)(float,float,float,float) r4.z, r5.zzzz, t0.yzxw
                        ftoi r4.z, r4.z
                        iadd r4.w, -r4.z, -r4.y
                        iadd r4.w, r3.x, r4.w
                        ld_indexable(buffer)(float,float,float,float) r5.y, r5.wwww, t0.yxzw
                        ftoi r5.y, r5.y
                        ieq r6.xyzw, r5.yyyy, l(0, 1, 2, 3)
                        or r5.z, r6.y, r6.x
                        ishl r5.w, r4.w, l(2)
                        ld_structured r6.x, r0.x, r5.w, g0.xxxx
                        and r5.z, r5.z, l(0x3f800000)
                        movc r6.x, r4.y, r6.x, r5.z
                        iadd r4.y, r4.y, r4.w
                        ishl r4.y, r4.y, l(2)
                        ld_structured r4.y, r0.x, r4.y, g0.xxxx
                        movc r4.y, r4.z, r4.y, r5.z
                        mul r4.z, r4.y, r6.x
                        div r5.z, r4.y, r6.x
                        add r7.x, r4.y, r6.x
                        add r4.y, -r6.x, r4.y
                        and r4.y, r4.y, r6.w
                        movc r4.y, r6.z, r7.x, r4.y
                        movc r4.y, r6.y, r5.z, r4.y
                        movc r4.y, r5.y, r4.y, r4.z
                        iadd r3.x, r4.w, l(1)
                        ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.yzxw
                        mul r4.y, r4.z, r4.y
                        store_structured g0.x, r0.x, r5.w, r4.y
                      else 
                        ieq r4.y, r4.x, l(13)
                        if_z r4.y
                          ieq r4.x, r4.x, l(14)
                          if_nz r4.x
                            iadd r4.xyz, r3.zzzz, l(2, 3, 4, 0)
                            ld_indexable(buffer)(float,float,float,float) r4.x, r4.xxxx, t0.xyzw
                            ftoi r4.x, r4.x
                            ld_indexable(buffer)(float,float,float,float) r4.y, r4.yyyy, t0.yxzw
                            ftoi r4.y, r4.y
                            iadd r4.w, -r4.y, -r4.x
                            iadd r4.w, r3.x, r4.w
                            ishl r5.x, r4.w, l(2)
                            ld_structured r5.y, r0.x, r5.x, g0.xxxx
                            movc r4.x, r4.x, r5.y, l(0)
                            ftoi r5.y, r4.x
                            iadd r5.y, r4.w, r5.y
                            ishl r5.y, r5.y, l(2)
                            ld_structured r5.y, r0.x, r5.y, g0.xxxx
                            movc r4.y, r4.y, r5.y, l(0)
                            ld_indexable(buffer)(float,float,float,float) r4.z, r4.zzzz, t0.yzxw
                            ftoi r4.z, r4.z
                            ieq r5.yz, r4.zzzz, l(0, 1, 0, 0)
                            ne r4.z, r4.x, l(0.000000)
                            eq r4.x, r4.x, l(0.000000)
                            and r4.xz, r4.xxzx, r5.zzyz
                            or r4.x, r4.x, r4.z
                            iadd r3.x, r4.w, l(1)
                            and r4.x, r4.y, r4.x
                            store_structured g0.x, r0.x, r5.x, r4.x
                          endif 
                        endif 
                      endif 
                    endif 
                  endif 
                endif 
              endif 
            endif 
          endif 
        else 
          ieq r4.x, r3.w, l(2)
          if_nz r4.x
            iadd r4.x, r3.z, l(1)
            ld_indexable(buffer)(float,float,float,float) r4.x, r4.xxxx, t0.xyzw
            ftoi r4.x, r4.x
            ieq r4.y, r4.x, l(1)
            if_nz r4.y
              iadd r4.y, r3.z, l(2)
              iadd r4.z, r3.x, l(1)
              ishl r4.w, r3.x, l(2)
              ld_indexable(buffer)(float,float,float,float) r4.y, r4.yyyy, t0.yxzw
              store_structured g0.x, r0.x, r4.w, r4.y
              mov r3.x, r4.z
            else 
              ieq r4.y, r4.x, l(2)
              if_nz r4.y
                iadd r5.xyzw, r3.zzzz, l(2, 3, 4, 5)
                ld_indexable(buffer)(float,float,float,float) r4.y, r5.yyyy, t0.wxyz
                ld_indexable(buffer)(float,float,float,float) r4.z, r5.zzzz, t0.wyxz
                ld_indexable(buffer)(float,float,float,float) r4.w, r5.wwww, t0.wyzx
                add r4.yzw, -r1.xxyz, r4.yyzw
                dp3 r4.y, r4.yzwy, r4.yzwy
                ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.yzxw
                mul r4.z, r4.z, r4.z
                lt r4.y, r4.y, r4.z
                iadd r5.xyz, r3.zzzz, l(6, 7, 8, 0)
                ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.yzxw
                ftoi r4.w, r4.z
                ld_indexable(buffer)(float,float,float,float) r5.x, r5.yyyy, t0.xyzw
                ftoi r5.y, r5.x
                movc r4.y, r4.y, r4.w, r5.y
                ld_indexable(buffer)(float,float,float,float) r4.w, r5.zzzz, t0.yzwx
                ftoi r4.w, r4.w
                iadd r5.y, r3.x, l(1)
                ishl r5.z, r3.x, l(2)
                itof r4.y, r4.y
                ieq r6.xy, r4.wwww, l(1, 2, 0, 0)
                iadd r5.w, r5.z, l(4)
                ld_structured r5.w, r0.x, r5.w, g0.xxxx
                ne r4.z, r4.z, r5.w
                and r4.z, r4.z, r6.x
                ne r5.x, r5.x, r5.w
                and r5.x, r5.x, r6.y
                or r4.z, r4.z, r5.x
                movc r4.z, r4.z, r4.y, r5.w
                movc r4.y, r4.w, r4.z, r4.y
                store_structured g0.x, r0.x, r5.z, r4.y
                mov r3.x, r5.y
              else 
                ieq r4.y, r4.x, l(13)
                if_z r4.y
                  ieq r4.x, r4.x, l(14)
                  if_nz r4.x
                    iadd r4.xyz, r3.zzzz, l(2, 3, 4, 0)
                    ld_indexable(buffer)(float,float,float,float) r4.x, r4.xxxx, t0.xyzw
                    ftoi r4.x, r4.x
                    ld_indexable(buffer)(float,float,float,float) r4.y, r4.yyyy, t0.yxzw
                    ftoi r4.y, r4.y
                    iadd r4.w, -r4.y, -r4.x
                    iadd r4.w, r3.x, r4.w
                    ishl r5.x, r4.w, l(2)
                    ld_structured r5.y, r0.x, r5.x, g0.xxxx
                    movc r4.x, r4.x, r5.y, l(0)
                    ftoi r5.y, r4.x
                    iadd r5.y, r4.w, r5.y
                    ishl r5.y, r5.y, l(2)
                    ld_structured r5.y, r0.x, r5.y, g0.xxxx
                    ftoi r5.y, r5.y
                    movc r4.y, r4.y, r5.y, l(0)
                    ld_indexable(buffer)(float,float,float,float) r4.z, r4.zzzz, t0.yzxw
                    ftoi r4.z, r4.z
                    ieq r5.yz, r4.zzzz, l(0, 1, 0, 0)
                    ne r4.z, r4.x, l(0.000000)
                    eq r4.x, r4.x, l(0.000000)
                    and r4.xz, r4.xxzx, r5.zzyz
                    or r4.x, r4.x, r4.z
                    iadd r3.x, r4.w, l(1)
                    and r4.x, r4.y, r4.x
                    itof r4.x, r4.x
                    store_structured g0.x, r0.x, r5.x, r4.x
                  endif 
                endif 
              endif 
            endif 
          else 
            ieq r3.w, r3.w, l(4)
            if_nz r3.w
              iadd r3.w, r3.z, l(1)
              ld_indexable(buffer)(float,float,float,float) r3.w, r3.wwww, t0.yzwx
              ftoi r3.w, r3.w
              ieq r4.x, r3.w, l(8)
              if_nz r4.x
                iadd r4.xyzw, r3.zzzz, l(2, 3, 4, 5)
                ld_indexable(buffer)(float,float,float,float) r4.x, r4.xxxx, t0.xyzw
                ld_indexable(buffer)(float,float,float,float) r5.x, r4.yyyy, t0.xyzw
                ld_indexable(buffer)(float,float,float,float) r5.y, r4.zzzz, t0.yxzw
                ld_indexable(buffer)(float,float,float,float) r5.z, r4.wwww, t0.yzxw
                mul r4.xyz, r4.xxxx, r5.xyzx
                ishl r4.w, r3.x, l(2)
                iadd r3.x, r3.x, l(3)
                store_structured g0.xyz, r0.x, r4.w, r4.xyzx
              else 
                ieq r4.x, r3.w, l(9)
                if_nz r4.x
                  iadd r4.xyzw, r3.zzzz, l(2, 3, 4, 5)
                  ld_indexable(buffer)(float,float,float,float) r5.x, r4.yyyy, t0.xyzw
                  ld_indexable(buffer)(float,float,float,float) r5.y, r4.zzzz, t0.yxzw
                  ld_indexable(buffer)(float,float,float,float) r5.z, r4.wwww, t0.yzxw
                  add r4.yzw, r1.xxyz, -r5.xxyz
                  dp3 r5.x, r4.yzwy, r4.yzwy
                  sqrt r5.x, r5.x
                  ne r5.y, r5.x, l(0.000000)
                  ld_indexable(buffer)(float,float,float,float) r4.x, r4.xxxx, t0.xyzw
                  mul r4.xyz, r4.yzwy, r4.xxxx
                  div r4.xyz, r4.xyzx, r5.xxxx
                  and r4.xyz, r4.xyzx, r5.yyyy
                  ishl r4.w, r3.x, l(2)
                  iadd r3.x, r3.x, l(3)
                  store_structured g0.xyz, r0.x, r4.w, r4.xyzx
                else 
                  ieq r4.x, r3.w, l(10)
                  if_nz r4.x
                    iadd r4.x, r3.z, l(2)
                    ld_indexable(buffer)(float,float,float,float) r4.x, r4.xxxx, t0.xyzw
                    mul r4.xyz, r2.xyzx, r4.xxxx
                    div r4.xyz, r4.xyzx, r1.wwww
                    and r4.xyz, r2.wwww, r4.xyzx
                    ishl r4.w, r3.x, l(2)
                    iadd r3.x, r3.x, l(3)
                    store_structured g0.xyz, r0.x, r4.w, r4.xyzx
                  else 
                    ieq r4.x, r3.w, l(12)
                    if_nz r4.x
                      iadd r4.xyzw, r3.zzzz, l(2, 3, 4, 5)
                      ld_indexable(buffer)(float,float,float,float) r4.y, r4.yyyy, t0.yxzw
                      ftoi r4.y, r4.y
                      ld_indexable(buffer)(float,float,float,float) r4.z, r4.zzzz, t0.yzxw
                      ftoi r4.z, r4.z
                      ld_indexable(buffer)(float,float,float,float) r4.w, r4.wwww, t0.yzwx
                      ftoi r4.w, r4.w
                      imad r5.x, r4.z, l(-3), -r4.y
                      imad r5.x, r4.w, l(-3), r5.x
                      iadd r5.x, r3.x, r5.x
                      iadd r5.y, r3.z, l(6)
                      ld_indexable(buffer)(float,float,float,float) r5.y, r5.yyyy, t0.yxzw
                      ftoi r5.y, r5.y
                      ieq r6.xyzw, r5.yyyy, l(0, 1, 2, 3)
                      or r5.z, r6.y, r6.x
                      ishl r5.w, r5.x, l(2)
                      ld_structured r6.x, r0.x, r5.w, g0.xxxx
                      movc r6.x, r4.y, r6.x, l(1.000000)
                      iadd r4.y, r4.y, r5.x
                      ishl r7.x, r4.y, l(2)
                      ld_structured r8.x, r0.x, r7.x, g0.xxxx
                      iadd r7.x, r7.x, l(4)
                      ld_structured r8.yz, r0.x, r7.x, g0.xxyx
                      and r5.z, r5.z, l(0x3f800000)
                      movc r7.xyz, r4.zzzz, r8.xyzx, r5.zzzz
                      imad r4.y, r4.z, l(3), r4.y
                      ishl r4.y, r4.y, l(2)
                      ld_structured r8.x, r0.x, r4.y, g0.xxxx
                      iadd r4.y, r4.y, l(4)
                      ld_structured r8.yz, r0.x, r4.y, g0.xxyx
                      movc r4.yzw, r4.wwww, r8.xxyz, r5.zzzz
                      mul r8.xyz, r4.yzwy, r7.xyzx
                      div r9.xyz, r4.yzwy, r7.xyzx
                      add r10.xyz, r4.yzwy, r7.xyzx
                      add r4.yzw, -r7.xxyz, r4.yyzw
                      and r4.yzw, r4.yyzw, r6.wwww
                      movc r4.yzw, r6.zzzz, r10.xxyz, r4.yyzw
                      movc r4.yzw, r6.yyyy, r9.xxyz, r4.yyzw
                      movc r4.yzw, r5.yyyy, r4.yyzw, r8.xxyz
                      ld_indexable(buffer)(float,float,float,float) r4.x, r4.xxxx, t0.xyzw
                      mul r4.x, r4.x, r6.x
                      mul r4.xyz, r4.xxxx, r4.yzwy
                      iadd r3.x, r5.x, l(3)
                      store_structured g0.xyz, r0.x, r5.w, r4.xyzx
                    else 
                      ieq r3.w, r3.w, l(14)
                      if_nz r3.w
                        iadd r4.xyz, r3.zzzz, l(2, 3, 4, 0)
                        ld_indexable(buffer)(float,float,float,float) r3.z, r4.xxxx, t0.yzxw
                        ftoi r3.z, r3.z
                        ld_indexable(buffer)(float,float,float,float) r3.w, r4.yyyy, t0.yzwx
                        ftoi r3.w, r3.w
                        imad r4.x, r3.w, l(-3), -r3.z
                        iadd r4.x, r3.x, r4.x
                        ishl r4.y, r4.x, l(2)
                        ld_structured r4.w, r0.x, r4.y, g0.xxxx
                        movc r3.z, r3.z, r4.w, l(0)
                        ftoi r4.w, r3.z
                        iadd r4.w, r4.w, r4.x
                        ishl r4.w, r4.w, l(2)
                        ld_structured r5.x, r0.x, r4.w, g0.xxxx
                        iadd r4.w, r4.w, l(4)
                        ld_structured r5.yz, r0.x, r4.w, g0.xxyx
                        movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)
                        ld_indexable(buffer)(float,float,float,float) r3.w, r4.zzzz, t0.yzwx
                        ftoi r3.w, r3.w
                        ieq r4.zw, r3.wwww, l(0, 0, 1, 0)
                        ne r3.w, r3.z, l(0.000000)
                        eq r3.z, r3.z, l(0.000000)
                        and r3.zw, r3.zzzw, r4.wwwz
                        or r3.z, r3.z, r3.w
                        iadd r3.x, r4.x, l(3)
                        and r4.xzw, r5.xxyz, r3.zzzz
                        store_structured g0.xyz, r0.x, r4.y, r4.xzwx
                      endif 
                    endif 
                  endif 
                endif 
              endif 
            endif 
          endif 
        endif 
        iadd r3.y, r3.y, l(1)
      endloop 
    else 
      mov r3.x, l(0)
    endif 
    ieq r0.y, r3.x, l(3)
    if_nz r0.y
      ld_structured r0.xyz, r0.x, l(0), g0.xyzx
    else 
      mov r0.xyz, l(0,0,0,0)
    endif 
    dp3 r1.w, r0.xyzx, r0.xyzx
    sqrt r1.w, r1.w
    lt r2.x, l(0.000000), r1.w
    if_nz r2.x
      if_nz cb1[3].w
        imm_atomic_iadd r2.x, u0, l(0, 0, 0, 0), l(1)
        iadd r2.y, r2.x, l(1)
        ult r2.y, r2.y, cb1[3].w
      else 
        mov r2.xy, l(0,0,0,0)
      endif 
      if_nz r2.y
        div r0.xyz, r0.xyzx, r1.wwww
        add r2.yzw, r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
        mul_sat r3.xyz, r2.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000)
        min_sat r3.w, r1.w, l(1.000000)
        mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
        add r1.xyz, r1.xyzx, cb1[1].xyzx
        add r0.xyz, r0.xyzx, cb1[1].xyzx
        ishl r0.w, cb1[3].x, l(2)
        iadd r0.w, r0.w, l(4)
        ishl r1.w, r2.x, l(3)
        iadd r0.w, r0.w, r1.w
        mul r2.xyzw, r3.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
        ftou r2.xyzw, r2.xyzw
        and r3.xyzw, r2.xyzw, l(254, 254, 254, 254)
        ishl r2.yz, r2.yyzy, l(0, 16, 8, 0)
        imad r1.w, r2.x, l(0x01000000), r2.y
        iadd r1.w, r1.w, r2.z
        iadd r1.w, r1.w, r2.w
        ishl r2.xyz, r3.xyzx, l(24, 16, 8, 0)
        iadd r2.x, r2.x, r2.y
        iadd r2.x, r2.x, r2.z
        iadd r2.x, r2.x, r3.w
        store_structured u0.x, r0.w, l(0), r1.x
        iadd r2.yz, r0.wwww, l(0, 1, 3, 0)
        store_structured u0.x, r2.y, l(0), r1.y
        iadd r1.x, r0.w, l(2)
        store_structured u0.x, r1.x, l(0), r1.z
        store_structured u0.x, r2.z, l(0), r1.w
        iadd r1.xyzw, r0.wwww, l(4, 5, 6, 7)
        store_structured u0.x, r1.x, l(0), r0.x
        store_structured u0.x, r1.y, l(0), r0.y
        store_structured u0.x, r1.z, l(0), r0.z
        store_structured u0.x, r1.w, l(0), r2.x
      endif 
    endif 
  endif 
  ieq r0.xyz, vThreadID.xyzx, l(0, 0, 0, 0)
  and r0.x, r0.y, r0.x
  and r0.x, r0.z, r0.x
  if_nz r0.x
    iadd r0.x, cb0[10].w, cb0[11].x
    ishl r0.y, cb1[3].x, l(2)
    iadd r0.y, r0.y, l(4)
    mov r1.x, cb1[3].w
    mov r1.y, cb0[10].w
    loop 
      ige r0.z, r1.y, r0.x
      breakc_nz r0.z
      if_nz r1.x
        imm_atomic_iadd r2.x, u0, l(0, 0, 0, 0), l(12)
        iadd r0.z, r2.x, l(12)
        ult r0.z, r0.z, r1.x
      else 
        mov r2.x, l(0)
        mov r0.z, l(0)
      endif 
      if_nz r0.z
        ld_indexable(buffer)(float,float,float,float) r2.yzw, r1.yyyy, t3.wxyz
        ld_indexable(buffer)(float,float,float,float) r3.xyz, r1.yyyy, t4.xyzw
        add r2.yzw, r2.yyzw, cb1[1].xxyz
        add r3.xyz, r3.xyzx, cb1[1].xyzx
        ishl r0.z, r2.x, l(3)
        iadd r0.z, r0.z, r0.y
        store_structured u0.x, r0.z, l(0), r2.y
        iadd r1.zw, r0.zzzz, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r2.z
        iadd r0.w, r0.z, l(2)
        store_structured u0.x, r0.w, l(0), r2.w
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        iadd r4.xyzw, r0.zzzz, l(4, 5, 6, 7)
        store_structured u0.x, r4.x, l(0), r3.x
        store_structured u0.x, r4.y, l(0), r2.z
        store_structured u0.x, r4.z, l(0), r2.w
        store_structured u0.x, r4.w, l(0), l(-84407265665351989810463668978258542592.000000)
        iadd r4.xyzw, r0.zzzz, l(8, 12, 13, 14)
        store_structured u0.x, r4.x, l(0), r3.x
        iadd r1.zw, r4.xxxx, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r2.z
        iadd r0.w, r4.x, l(2)
        store_structured u0.x, r0.w, l(0), r2.w
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        store_structured u0.x, r4.y, l(0), r3.x
        store_structured u0.x, r4.z, l(0), r3.y
        store_structured u0.x, r4.w, l(0), r2.w
        iadd r5.xyzw, r0.zzzz, l(15, 16, 20, 21)
        store_structured u0.x, r5.x, l(0), l(-84407265665351989810463668978258542592.000000)
        store_structured u0.x, r5.y, l(0), r3.x
        iadd r1.zw, r5.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r3.y
        iadd r0.w, r5.y, l(2)
        store_structured u0.x, r0.w, l(0), r2.w
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        store_structured u0.x, r5.z, l(0), r2.y
        store_structured u0.x, r5.w, l(0), r3.y
        iadd r4.xyzw, r0.zzzz, l(22, 23, 24, 28)
        store_structured u0.x, r4.x, l(0), r2.w
        store_structured u0.x, r4.y, l(0), l(-84407265665351989810463668978258542592.000000)
        store_structured u0.x, r4.z, l(0), r2.y
        iadd r1.zw, r4.zzzz, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r3.y
        iadd r0.w, r4.z, l(2)
        store_structured u0.x, r0.w, l(0), r2.w
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        store_structured u0.x, r4.w, l(0), r2.y
        iadd r5.xyzw, r0.zzzz, l(29, 30, 31, 32)
        store_structured u0.x, r5.x, l(0), r2.z
        store_structured u0.x, r5.y, l(0), r2.w
        store_structured u0.x, r5.z, l(0), l(-84407265665351989810463668978258542592.000000)
        store_structured u0.x, r5.w, l(0), r2.y
        iadd r1.zw, r5.wwww, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r2.z
        iadd r0.w, r5.w, l(2)
        store_structured u0.x, r0.w, l(0), r3.z
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        iadd r4.xyzw, r0.zzzz, l(36, 37, 38, 39)
        store_structured u0.x, r4.x, l(0), r3.x
        store_structured u0.x, r4.y, l(0), r2.z
        store_structured u0.x, r4.z, l(0), r3.z
        store_structured u0.x, r4.w, l(0), l(-84407265665351989810463668978258542592.000000)
        iadd r4.xyzw, r0.zzzz, l(40, 44, 45, 46)
        store_structured u0.x, r4.x, l(0), r3.x
        iadd r1.zw, r4.xxxx, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r2.z
        iadd r0.w, r4.x, l(2)
        store_structured u0.x, r0.w, l(0), r3.z
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        store_structured u0.x, r4.y, l(0), r3.x
        store_structured u0.x, r4.z, l(0), r3.y
        store_structured u0.x, r4.w, l(0), r3.z
        iadd r5.xyzw, r0.zzzz, l(47, 48, 52, 53)
        store_structured u0.x, r5.x, l(0), l(-84407265665351989810463668978258542592.000000)
        store_structured u0.x, r5.y, l(0), r3.x
        iadd r1.zw, r5.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r3.y
        iadd r0.w, r5.y, l(2)
        store_structured u0.x, r0.w, l(0), r3.z
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        store_structured u0.x, r5.z, l(0), r2.y
        store_structured u0.x, r5.w, l(0), r3.y
        iadd r4.xyzw, r0.zzzz, l(54, 55, 56, 60)
        store_structured u0.x, r4.x, l(0), r3.z
        store_structured u0.x, r4.y, l(0), l(-84407265665351989810463668978258542592.000000)
        store_structured u0.x, r4.z, l(0), r2.y
        iadd r1.zw, r4.zzzz, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r3.y
        iadd r0.w, r4.z, l(2)
        store_structured u0.x, r0.w, l(0), r3.z
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        store_structured u0.x, r4.w, l(0), r2.y
        iadd r5.xyzw, r0.zzzz, l(61, 62, 63, 64)
        store_structured u0.x, r5.x, l(0), r2.z
        store_structured u0.x, r5.y, l(0), r3.z
        store_structured u0.x, r5.z, l(0), l(-84407265665351989810463668978258542592.000000)
        store_structured u0.x, r5.w, l(0), r2.y
        iadd r1.zw, r5.wwww, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r2.z
        iadd r0.w, r5.w, l(2)
        store_structured u0.x, r0.w, l(0), r2.w
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        iadd r4.xyzw, r0.zzzz, l(68, 69, 70, 71)
        store_structured u0.x, r4.x, l(0), r2.y
        store_structured u0.x, r4.y, l(0), r2.z
        store_structured u0.x, r4.z, l(0), r3.z
        store_structured u0.x, r4.w, l(0), l(-84407265665351989810463668978258542592.000000)
        iadd r4.xyzw, r0.zzzz, l(72, 76, 77, 78)
        store_structured u0.x, r4.x, l(0), r3.x
        iadd r1.zw, r4.xxxx, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r2.z
        iadd r0.w, r4.x, l(2)
        store_structured u0.x, r0.w, l(0), r2.w
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        store_structured u0.x, r4.y, l(0), r3.x
        store_structured u0.x, r4.z, l(0), r2.z
        store_structured u0.x, r4.w, l(0), r3.z
        iadd r5.xyzw, r0.zzzz, l(79, 80, 84, 85)
        store_structured u0.x, r5.x, l(0), l(-84407265665351989810463668978258542592.000000)
        store_structured u0.x, r5.y, l(0), r3.x
        iadd r1.zw, r5.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r3.y
        iadd r0.w, r5.y, l(2)
        store_structured u0.x, r0.w, l(0), r2.w
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        store_structured u0.x, r5.z, l(0), r3.x
        store_structured u0.x, r5.w, l(0), r3.y
        iadd r4.xyzw, r0.zzzz, l(86, 87, 88, 92)
        store_structured u0.x, r4.x, l(0), r3.z
        store_structured u0.x, r4.y, l(0), l(-84407265665351989810463668978258542592.000000)
        store_structured u0.x, r4.z, l(0), r2.y
        iadd r1.zw, r4.zzzz, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), r3.y
        iadd r0.w, r4.z, l(2)
        store_structured u0.x, r0.w, l(0), r2.w
        store_structured u0.x, r1.w, l(0), l(-338958310939602478766428906920565800960.000000)
        store_structured u0.x, r4.w, l(0), r2.y
        iadd r2.xyz, r0.zzzz, l(93, 94, 95, 0)
        store_structured u0.x, r2.x, l(0), r3.y
        store_structured u0.x, r2.y, l(0), r3.z
        store_structured u0.x, r2.z, l(0), l(-84407265665351989810463668978258542592.000000)
      endif 
      iadd r1.y, r1.y, l(1)
    endloop 
    itof r0.xy, cb1[0].xyxx
    div r0.xy, l(50.000000, 200.000000, 0.000000, 0.000000), r0.xyxx
    if_nz cb1[3].x
      imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(20)
      iadd r0.z, r1.x, l(20)
      ult r0.z, r0.z, cb1[3].x
      if_nz r0.z
        f32tof16 r0.z, r0.y
        mov r2.x, r1.x
        mov r2.y, l(16)
        mov r0.w, r0.x
        loop 
          uge r1.y, r2.y, l(36)
          breakc_nz r1.y
          ishl r1.y, r2.x, l(2)
          iadd r1.z, r1.y, l(4)
          f32tof16 r1.w, r0.w
          imad r1.w, r0.z, l(0x00010000), r1.w
          store_structured u0.x, r1.z, l(0), r1.w
          iadd r2.zw, r1.zzzz, l(0, 0, 1, 3)
          store_structured u0.x, r2.z, l(0), icb[r2.y + 4].y
          iadd r1.z, r1.z, l(2)
          store_structured u0.x, r1.z, l(0), l(-256)
          store_structured u0.x, r2.w, l(0), l(0)
          add r0.w, r0.w, cb1[2].z
          iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
        endloop 
      else 
        mov r0.w, r0.x
      endif 
    else 
      mov r0.w, r0.x
    endif 
    ieq r0.z, l(2), cb0[11].z
    if_nz r0.z
      if_nz cb1[3].x
        imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(13)
        iadd r0.z, r1.x, l(13)
        ult r0.z, r0.z, cb1[3].x
        if_nz r0.z
          f32tof16 r0.z, r0.y
          mov r2.x, r1.x
          mov r2.y, l(36)
          mov r1.y, r0.w
          loop 
            uge r1.z, r2.y, l(49)
            breakc_nz r1.z
            ishl r1.z, r2.x, l(2)
            iadd r1.w, r1.z, l(4)
            f32tof16 r2.z, r1.y
            imad r2.z, r0.z, l(0x00010000), r2.z
            store_structured u0.x, r1.w, l(0), r2.z
            iadd r2.zw, r1.wwww, l(0, 0, 1, 3)
            store_structured u0.x, r2.z, l(0), icb[r2.y + 4].y
            iadd r1.w, r1.w, l(2)
            store_structured u0.x, r1.w, l(0), l(-256)
            store_structured u0.x, r2.w, l(0), l(0)
            add r1.y, r1.y, cb1[2].z
            iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
          endloop 
        endif 
      endif 
    else 
      ieq r0.z, l(5), cb0[11].z
      if_nz r0.z
        if_nz cb1[3].x
          imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(16)
          iadd r0.z, r1.x, l(16)
          ult r0.z, r0.z, cb1[3].x
          if_nz r0.z
            f32tof16 r0.z, r0.y
            mov r2.x, r1.x
            mov r2.y, l(49)
            mov r1.y, r0.w
            loop 
              uge r1.z, r2.y, l(65)
              breakc_nz r1.z
              ishl r1.z, r2.x, l(2)
              iadd r1.w, r1.z, l(4)
              f32tof16 r2.z, r1.y
              imad r2.z, r0.z, l(0x00010000), r2.z
              store_structured u0.x, r1.w, l(0), r2.z
              iadd r2.zw, r1.wwww, l(0, 0, 1, 3)
              store_structured u0.x, r2.z, l(0), icb[r2.y + 4].y
              iadd r1.w, r1.w, l(2)
              store_structured u0.x, r1.w, l(0), l(-256)
              store_structured u0.x, r2.w, l(0), l(0)
              add r1.y, r1.y, cb1[2].z
              iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
            endloop 
          endif 
        endif 
      else 
        ieq r0.z, l(7), cb0[11].z
        if_nz r0.z
          if_nz cb1[3].x
            imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(15)
            iadd r0.z, r1.x, l(15)
            ult r0.z, r0.z, cb1[3].x
            if_nz r0.z
              f32tof16 r0.z, r0.y
              mov r2.x, r1.x
              mov r2.y, l(65)
              mov r1.y, r0.w
              loop 
                uge r1.z, r2.y, l(80)
                breakc_nz r1.z
                ishl r1.z, r2.x, l(2)
                iadd r1.w, r1.z, l(4)
                f32tof16 r2.z, r1.y
                imad r2.z, r0.z, l(0x00010000), r2.z
                store_structured u0.x, r1.w, l(0), r2.z
                iadd r2.zw, r1.wwww, l(0, 0, 1, 3)
                store_structured u0.x, r2.z, l(0), icb[r2.y + 4].y
                iadd r1.w, r1.w, l(2)
                store_structured u0.x, r1.w, l(0), l(-256)
                store_structured u0.x, r2.w, l(0), l(0)
                add r1.y, r1.y, cb1[2].z
                iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
              endloop 
            endif 
          endif 
        else 
          ieq r0.z, l(6), cb0[11].z
          if_nz r0.z
            if_nz cb1[3].x
              imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(17)
              iadd r0.z, r1.x, l(17)
              ult r0.z, r0.z, cb1[3].x
              if_nz r0.z
                f32tof16 r0.z, r0.y
                mov r2.x, r1.x
                mov r2.y, l(80)
                mov r1.y, r0.w
                loop 
                  uge r1.z, r2.y, l(97)
                  breakc_nz r1.z
                  ishl r1.z, r2.x, l(2)
                  iadd r1.w, r1.z, l(4)
                  f32tof16 r2.z, r1.y
                  imad r2.z, r0.z, l(0x00010000), r2.z
                  store_structured u0.x, r1.w, l(0), r2.z
                  iadd r2.zw, r1.wwww, l(0, 0, 1, 3)
                  store_structured u0.x, r2.z, l(0), icb[r2.y + 4].y
                  iadd r1.w, r1.w, l(2)
                  store_structured u0.x, r1.w, l(0), l(-256)
                  store_structured u0.x, r2.w, l(0), l(0)
                  add r1.y, r1.y, cb1[2].z
                  iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
                endloop 
              endif 
            endif 
          endif 
        endif 
      endif 
    endif 
    add r0.y, r0.y, cb1[2].w
    if_nz cb1[3].x
      imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(21)
      iadd r0.z, r1.x, l(21)
      ult r0.z, r0.z, cb1[3].x
      if_nz r0.z
        f32tof16 r0.z, r0.y
        mov r2.x, r1.x
        mov r2.y, l(97)
        mov r0.w, r0.x
        loop 
          uge r1.y, r2.y, l(118)
          breakc_nz r1.y
          ishl r1.y, r2.x, l(2)
          iadd r1.z, r1.y, l(4)
          f32tof16 r1.w, r0.w
          imad r1.w, r0.z, l(0x00010000), r1.w
          store_structured u0.x, r1.z, l(0), r1.w
          iadd r2.zw, r1.zzzz, l(0, 0, 1, 3)
          store_structured u0.x, r2.z, l(0), icb[r2.y + 4].y
          iadd r1.z, r1.z, l(2)
          store_structured u0.x, r1.z, l(0), l(-256)
          store_structured u0.x, r2.w, l(0), l(0)
          add r0.w, r0.w, cb1[2].z
          iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
        endloop 
        mov r0.x, r0.w
      endif 
    endif 
    if_nz cb1[3].x
      imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(1)
      ult r0.z, r1.x, cb1[3].x
      if_nz r0.z
        ishl r0.z, r1.x, l(2)
        iadd r0.w, r0.z, l(4)
        f32tof16 r0.xy, r0.xyxx
        imad r0.x, r0.y, l(0x00010000), r0.x
        store_structured u0.x, r0.w, l(0), r0.x
        iadd r0.xy, r0.wwww, l(1, 3, 0, 0)
        store_structured u0.x, r0.x, l(0), cb0[11].x
        iadd r0.x, r0.w, l(2)
        store_structured u0.x, r0.x, l(0), l(-253)
        store_structured u0.x, r0.y, l(0), l(5)
      endif 
    endif 
  endif 
endif 
ret 
// Approximately 1202 instruction slots used
