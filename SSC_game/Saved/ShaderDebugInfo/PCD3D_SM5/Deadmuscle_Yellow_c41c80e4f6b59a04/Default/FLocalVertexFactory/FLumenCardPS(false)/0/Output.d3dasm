//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_TranslatedWorldToView;// Offset:  256 Size:    64
//   float4 View_View_NormalOverrideParameter;// Offset: 2224 Size:    16
//
// }
//
// cbuffer Material
// {
//
//   float4 Material_Material_PreshaderBuffer[4];// Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View                              cbuffer      NA          NA            cb0      1 
// Material                          cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[140], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 2
mov_sat r0.xyz, cb1[3].xyzx
add r0.xyz, r0.xyzx, l(0.018000, 0.018000, 0.018000, 0.000000)
sqrt o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
mul r0.xyz, v0.yzxy, v1.zxyz
mad r0.xyz, v1.yzxy, v0.zxyz, -r0.xyzx
mul r0.xyz, r0.xyzx, v1.wwww
mad r1.xyz, cb0[139].wwww, l(0.000000, 0.000000, 1.000000, 0.000000), cb0[139].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r0.xyz, r0.xyzx, r1.yyyy
mad r0.xyz, r1.xxxx, v0.xyzx, r0.xyzx
mad r0.xyz, r1.zzzz, v1.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xy, r0.yyyy, cb0[17].xyxx
mad r1.xy, r0.xxxx, cb0[16].xyxx, r1.xyxx
mad r1.xy, r0.zzzz, cb0[18].xyxx, r1.xyxx
and r0.xyz, r0.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
ine r0.xyz, r0.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
and r0.x, r0.y, r0.x
and r0.x, r0.z, r0.x
and r0.xy, r1.xyxx, r0.xxxx
mad o1.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mov o1.zw, l(0,0,0,1.000000)
mul r0.xyz, cb1[1].yzwy, cb1[1].xxxx
max o2.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o2.w, l(0)
ret 
// Approximately 31 instruction slots used
